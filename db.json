{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"source/images/404.png","path":"images/404.png","modified":0,"renderable":0},{"_id":"source/images/5288c8596a5755108a80b7d5d2822eda.jpeg","path":"images/5288c8596a5755108a80b7d5d2822eda.jpeg","modified":0,"renderable":0},{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":0},{"_id":"source/images/background.png","path":"images/background.png","modified":0,"renderable":0},{"_id":"source/images/dock.png","path":"images/dock.png","modified":0,"renderable":0},{"_id":"source/images/docker.png","path":"images/docker.png","modified":0,"renderable":0},{"_id":"source/images/home.jpg","path":"images/home.jpg","modified":0,"renderable":0},{"_id":"source/images/icon.png","path":"images/icon.png","modified":0,"renderable":0},{"_id":"source/images/java.png","path":"images/java.png","modified":0,"renderable":0},{"_id":"source/images/mysql.png","path":"images/mysql.png","modified":0,"renderable":0},{"_id":"source/images/nvm.jpg","path":"images/nvm.jpg","modified":0,"renderable":0},{"_id":"source/images/top.jpg","path":"images/top.jpg","modified":0,"renderable":0},{"_id":"source/images/ufw.png","path":"images/ufw.png","modified":0,"renderable":0},{"_id":"source/images/vim.png","path":"images/vim.png","modified":0,"renderable":0},{"_id":"source/html/daynight/index.html","path":"html/daynight/index.html","modified":0,"renderable":0},{"_id":"source/html/daynight/ScrollTrigger.min.js","path":"html/daynight/ScrollTrigger.min.js","modified":0,"renderable":0},{"_id":"source/html/daynight/gsap.min.js","path":"html/daynight/gsap.min.js","modified":0,"renderable":0},{"_id":"source/FILES/JavaScript基础.md/image-20230605092717715.png","path":"FILES/JavaScript基础.md/image-20230605092717715.png","modified":0,"renderable":0},{"_id":"source/FILES/Go语言基础.md/image-20230823130419796.png","path":"FILES/Go语言基础.md/image-20230823130419796.png","modified":0,"renderable":0},{"_id":"source/FILES/Go语言基础.md/image-20230823130507803.png","path":"FILES/Go语言基础.md/image-20230823130507803.png","modified":0,"renderable":0},{"_id":"source/FILES/JavaScript基础.md/image-20230605123626540.png","path":"FILES/JavaScript基础.md/image-20230605123626540.png","modified":0,"renderable":0},{"_id":"source/FILES/Go语言基础.md/image-20230823130355000.png","path":"FILES/Go语言基础.md/image-20230823130355000.png","modified":0,"renderable":0},{"_id":"source/FILES/Go语言基础.md/image-20230823130528192.png","path":"FILES/Go语言基础.md/image-20230823130528192.png","modified":0,"renderable":0},{"_id":"source/FILES/VuePress.md/image-20230823133339149.png","path":"FILES/VuePress.md/image-20230823133339149.png","modified":0,"renderable":0},{"_id":"source/FILES/Go入门.md/image-20230823130116425.png","path":"FILES/Go入门.md/image-20230823130116425.png","modified":0,"renderable":0},{"_id":"source/FILES/Go入门.md/image-20230823130146688.png","path":"FILES/Go入门.md/image-20230823130146688.png","modified":0,"renderable":0},{"_id":"source/FILES/Go入门.md/image-20230823130159867.png","path":"FILES/Go入门.md/image-20230823130159867.png","modified":0,"renderable":0},{"_id":"source/FILES/Go入门.md/image-20230823130131910.png","path":"FILES/Go入门.md/image-20230823130131910.png","modified":0,"renderable":0},{"_id":"source/FILES/go-wr.md/008bcb5f6103455691ff3e79c29474ca.png","path":"FILES/go-wr.md/008bcb5f6103455691ff3e79c29474ca.png","modified":0,"renderable":0},{"_id":"source/FILES/Go入门.md/image-20230823130210856.png","path":"FILES/Go入门.md/image-20230823130210856.png","modified":0,"renderable":0},{"_id":"source/FILES/go-wr.md/21784585a070444b885756e66556e4ed.png","path":"FILES/go-wr.md/21784585a070444b885756e66556e4ed.png","modified":0,"renderable":0},{"_id":"source/FILES/go-wr.md/image-20230622134517298.png","path":"FILES/go-wr.md/image-20230622134517298.png","modified":0,"renderable":0},{"_id":"source/FILES/docker.md/img-20230617154152.png","path":"FILES/docker.md/img-20230617154152.png","modified":0,"renderable":0},{"_id":"source/FILES/docker.md/img-20230617154328.png","path":"FILES/docker.md/img-20230617154328.png","modified":0,"renderable":0},{"_id":"source/FILES/docker.md/img-20230617154722.png","path":"FILES/docker.md/img-20230617154722.png","modified":0,"renderable":0},{"_id":"source/FILES/docker.md/img-20230617161035.png","path":"FILES/docker.md/img-20230617161035.png","modified":0,"renderable":0},{"_id":"source/FILES/docker.md/img-20230617161024.png","path":"FILES/docker.md/img-20230617161024.png","modified":0,"renderable":0},{"_id":"source/FILES/docker.md/img-20230617161038.png","path":"FILES/docker.md/img-20230617161038.png","modified":0,"renderable":0},{"_id":"source/FILES/MongoDB数据库.md/image-20230712185247305.png","path":"FILES/MongoDB数据库.md/image-20230712185247305.png","modified":0,"renderable":0},{"_id":"source/FILES/MongoDB数据库.md/image-20230712190525028.png","path":"FILES/MongoDB数据库.md/image-20230712190525028.png","modified":0,"renderable":0},{"_id":"source/FILES/MongoDB数据库.md/image-20230712190603575.png","path":"FILES/MongoDB数据库.md/image-20230712190603575.png","modified":0,"renderable":0},{"_id":"source/FILES/docker.md/img-20230617161249.png","path":"FILES/docker.md/img-20230617161249.png","modified":0,"renderable":0},{"_id":"source/FILES/MongoDB数据库.md/image-20230712190710947.png","path":"FILES/MongoDB数据库.md/image-20230712190710947.png","modified":0,"renderable":0},{"_id":"source/FILES/MongoDB数据库.md/image-20230712190915728.png","path":"FILES/MongoDB数据库.md/image-20230712190915728.png","modified":0,"renderable":0},{"_id":"source/FILES/MongoDB数据库.md/image-20230713123234366.png","path":"FILES/MongoDB数据库.md/image-20230713123234366.png","modified":0,"renderable":0},{"_id":"source/FILES/MongoDB数据库.md/image-20230713142753307.png","path":"FILES/MongoDB数据库.md/image-20230713142753307.png","modified":0,"renderable":0},{"_id":"source/FILES/MongoDB数据库.md/image-20230713130049546.png","path":"FILES/MongoDB数据库.md/image-20230713130049546.png","modified":0,"renderable":0},{"_id":"source/FILES/MongoDB数据库.md/image-20230713145628439.png","path":"FILES/MongoDB数据库.md/image-20230713145628439.png","modified":0,"renderable":0},{"_id":"source/FILES/MongoDB数据库.md/image-20230713145713176.png","path":"FILES/MongoDB数据库.md/image-20230713145713176.png","modified":0,"renderable":0},{"_id":"source/FILES/gnome美化.md/image-20230823132850474.png","path":"FILES/gnome美化.md/image-20230823132850474.png","modified":0,"renderable":0},{"_id":"source/FILES/gnome美化.md/image-20230823132920231.png","path":"FILES/gnome美化.md/image-20230823132920231.png","modified":0,"renderable":0},{"_id":"source/FILES/gnome美化.md/image-20230823132931500.png","path":"FILES/gnome美化.md/image-20230823132931500.png","modified":0,"renderable":0},{"_id":"source/FILES/gnome美化.md/image-20230823132901627.png","path":"FILES/gnome美化.md/image-20230823132901627.png","modified":0,"renderable":0},{"_id":"source/FILES/gnome美化.md/image-20230823132940387.png","path":"FILES/gnome美化.md/image-20230823132940387.png","modified":0,"renderable":0},{"_id":"source/FILES/gnome美化.md/image-20230823132949038.png","path":"FILES/gnome美化.md/image-20230823132949038.png","modified":0,"renderable":0},{"_id":"source/FILES/gnome美化.md/image-20230823132959336.png","path":"FILES/gnome美化.md/image-20230823132959336.png","modified":0,"renderable":0},{"_id":"source/FILES/gnome美化.md/image-20230823133022776.png","path":"FILES/gnome美化.md/image-20230823133022776.png","modified":0,"renderable":0},{"_id":"source/FILES/nginx.md/image-20230719131053170.png","path":"FILES/nginx.md/image-20230719131053170.png","modified":0,"renderable":0},{"_id":"source/FILES/gnome美化.md/image-20230823133008705.png","path":"FILES/gnome美化.md/image-20230823133008705.png","modified":0,"renderable":0},{"_id":"source/FILES/nextJS性能优化.md/2abf157ef8fd4b60b26dc45d24273dbbtplv-k3u1fbpfcp-zoom-in-crop-mark4536000.webp","path":"FILES/nextJS性能优化.md/2abf157ef8fd4b60b26dc45d24273dbbtplv-k3u1fbpfcp-zoom-in-crop-mark4536000.webp","modified":0,"renderable":0},{"_id":"source/FILES/mysql.md/img-20230617174044.png","path":"FILES/mysql.md/img-20230617174044.png","modified":0,"renderable":0},{"_id":"source/FILES/mysql.md/img-20230617174123.png","path":"FILES/mysql.md/img-20230617174123.png","modified":0,"renderable":0},{"_id":"source/FILES/mysql.md/img-20230617183749.png","path":"FILES/mysql.md/img-20230617183749.png","modified":0,"renderable":0},{"_id":"source/FILES/mysql.md/img-20230617192817.png","path":"FILES/mysql.md/img-20230617192817.png","modified":0,"renderable":0},{"_id":"source/FILES/mysql.md/img-20230617180151.png","path":"FILES/mysql.md/img-20230617180151.png","modified":0,"renderable":0},{"_id":"source/FILES/mysql.md/img-20230617195454.png","path":"FILES/mysql.md/img-20230617195454.png","modified":0,"renderable":0},{"_id":"source/FILES/mysql.md/img-20230617195642.png","path":"FILES/mysql.md/img-20230617195642.png","modified":0,"renderable":0},{"_id":"source/FILES/mysql.md/img-20230617200336.png","path":"FILES/mysql.md/img-20230617200336.png","modified":0,"renderable":0},{"_id":"source/FILES/mysql.md/img-20230617200903.png","path":"FILES/mysql.md/img-20230617200903.png","modified":0,"renderable":0},{"_id":"source/FILES/mysql.md/img-20230617200704.png","path":"FILES/mysql.md/img-20230617200704.png","modified":0,"renderable":0},{"_id":"source/FILES/mysql.md/img-20230617201511.png","path":"FILES/mysql.md/img-20230617201511.png","modified":0,"renderable":0},{"_id":"source/FILES/mysql.md/img-20230617201528.png","path":"FILES/mysql.md/img-20230617201528.png","modified":0,"renderable":0},{"_id":"source/FILES/nodejs更新.md/image-20230530140912644.png","path":"FILES/nodejs更新.md/image-20230530140912644.png","modified":0,"renderable":0},{"_id":"source/FILES/nodejs更新.md/image-20230530142308794.png","path":"FILES/nodejs更新.md/image-20230530142308794.png","modified":0,"renderable":0},{"_id":"source/FILES/nodejs更新.md/image-20230530142403267.png","path":"FILES/nodejs更新.md/image-20230530142403267.png","modified":0,"renderable":0},{"_id":"source/FILES/nodejs更新.md/image-20230530141003682.png","path":"FILES/nodejs更新.md/image-20230530141003682.png","modified":0,"renderable":0},{"_id":"source/FILES/nodejs更新.md/image-20230530142835262.png","path":"FILES/nodejs更新.md/image-20230530142835262.png","modified":0,"renderable":0},{"_id":"source/FILES/笔记小技巧.md/image-20230721205223146.png","path":"FILES/笔记小技巧.md/image-20230721205223146.png","modified":0,"renderable":0},{"_id":"source/FILES/笔记小技巧.md/image-20230721210210155.png","path":"FILES/笔记小技巧.md/image-20230721210210155.png","modified":0,"renderable":0},{"_id":"source/FILES/springcloud.md/image-20230721172118159.png","path":"FILES/springcloud.md/image-20230721172118159.png","modified":0,"renderable":0},{"_id":"source/FILES/springcloud.md/image-20230721192248994.png","path":"FILES/springcloud.md/image-20230721192248994.png","modified":0,"renderable":0},{"_id":"source/FILES/笔记小技巧.md/image-20230721210221012.png","path":"FILES/笔记小技巧.md/image-20230721210221012.png","modified":0,"renderable":0},{"_id":"source/FILES/springcloud.md/image-20230721203610510.png","path":"FILES/springcloud.md/image-20230721203610510.png","modified":0,"renderable":0},{"_id":"source/FILES/springcloud.md/image-20230721203805155.png","path":"FILES/springcloud.md/image-20230721203805155.png","modified":0,"renderable":0},{"_id":"source/FILES/springcloud.md/image-20230721203949649.png","path":"FILES/springcloud.md/image-20230721203949649.png","modified":0,"renderable":0},{"_id":"source/FILES/springcloud.md/image-20230721213913950.png","path":"FILES/springcloud.md/image-20230721213913950.png","modified":0,"renderable":0},{"_id":"source/FILES/springcloud.md/image-20230721204316658.png","path":"FILES/springcloud.md/image-20230721204316658.png","modified":0,"renderable":0},{"_id":"source/FILES/springcloud.md/image-20230721214325200.png","path":"FILES/springcloud.md/image-20230721214325200.png","modified":0,"renderable":0},{"_id":"source/FILES/springcloud.md/image-20230722120734690.png","path":"FILES/springcloud.md/image-20230722120734690.png","modified":0,"renderable":0},{"_id":"source/FILES/nvm.md/image-20230530151512400.png","path":"FILES/nvm.md/image-20230530151512400.png","modified":0,"renderable":0},{"_id":"source/FILES/nvm.md/img-20230617143835.png","path":"FILES/nvm.md/img-20230617143835.png","modified":0,"renderable":0},{"_id":"source/FILES/nvm.md/img-20230617144018.png","path":"FILES/nvm.md/img-20230617144018.png","modified":0,"renderable":0},{"_id":"source/FILES/nvm.md/image-20230530151726867.png","path":"FILES/nvm.md/image-20230530151726867.png","modified":0,"renderable":0},{"_id":"source/FILES/vim-plug.md/img-20230618115047.png","path":"FILES/vim-plug.md/img-20230618115047.png","modified":0,"renderable":0},{"_id":"source/FILES/vim-plug.md/img-20230618120008.png","path":"FILES/vim-plug.md/img-20230618120008.png","modified":0,"renderable":0},{"_id":"source/FILES/vim-plug.md/img-20230618120500.png","path":"FILES/vim-plug.md/img-20230618120500.png","modified":0,"renderable":0},{"_id":"source/FILES/网络.md/image-20230620141208760.png","path":"FILES/网络.md/image-20230620141208760.png","modified":0,"renderable":0},{"_id":"source/FILES/网络.md/image-20230620141929709.png","path":"FILES/网络.md/image-20230620141929709.png","modified":0,"renderable":0},{"_id":"source/FILES/vim-plug.md/img-20230618122149.png","path":"FILES/vim-plug.md/img-20230618122149.png","modified":0,"renderable":0},{"_id":"source/FILES/网络.md/image-20230620142532074.png","path":"FILES/网络.md/image-20230620142532074.png","modified":0,"renderable":0},{"_id":"source/FILES/网络.md/image-20230620142714651.png","path":"FILES/网络.md/image-20230620142714651.png","modified":0,"renderable":0},{"_id":"source/FILES/小程序开发.md/image-20230629202305598.png","path":"FILES/小程序开发.md/image-20230629202305598.png","modified":0,"renderable":0},{"_id":"source/FILES/小程序开发.md/image-20230629203241718.png","path":"FILES/小程序开发.md/image-20230629203241718.png","modified":0,"renderable":0},{"_id":"source/FILES/小程序开发.md/image-20230629203843418.png","path":"FILES/小程序开发.md/image-20230629203843418.png","modified":0,"renderable":0},{"_id":"source/FILES/小程序开发.md/image-20230629210559834.png","path":"FILES/小程序开发.md/image-20230629210559834.png","modified":0,"renderable":0},{"_id":"source/FILES/小程序开发.md/image-20230629210334688.png","path":"FILES/小程序开发.md/image-20230629210334688.png","modified":0,"renderable":0},{"_id":"source/FILES/小程序开发.md/image-20230629210753331.png","path":"FILES/小程序开发.md/image-20230629210753331.png","modified":0,"renderable":0},{"_id":"source/FILES/小程序开发.md/image-20230629211438057.png","path":"FILES/小程序开发.md/image-20230629211438057.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/_data/link.yml","hash":"63a8d8c85347ae411d0d2967e0d304134c3838ae","modified":1709622846287},{"_id":"source/categories/index.md","hash":"e64dfeaed1941e74427fcc2b27948a16aca119c9","modified":1709622846320},{"_id":"source/link/index.md","hash":"d7eeaa8a896ebb60ac6128ca3843b8106b349378","modified":1709622846377},{"_id":"source/about/index.md","hash":"fdab42f7b70153feaf2dc9c13e7674635e43701c","modified":1709630511447},{"_id":"source/images/5288c8596a5755108a80b7d5d2822eda.jpeg","hash":"5b935c02be3d2a29a2cdefd8b9cf93f46ce3b714","modified":1709622846349},{"_id":"source/code/index.md","hash":"3255e2325f08aafb3105637141f1930bb35de9e9","modified":1709622846321},{"_id":"source/images/avatar.jpg","hash":"ef454b8ba565e47a5f9be54f6a12b8b8f0527ee1","modified":1709622846353},{"_id":"source/images/icon.png","hash":"16a29c18de4c4c43e62eac7853301ef3be73b233","modified":1709622846365},{"_id":"source/images/java.png","hash":"3267f658f00ec95127971d238528d1338faebc68","modified":1709622846365},{"_id":"source/music/index.md","hash":"5e530fdf96a5c81d2387a80ad81354825ac43d2d","modified":1709622846381},{"_id":"source/images/nvm.jpg","hash":"2fc63cf85f8d90936af52fe598b8c974b40092f0","modified":1709622846369},{"_id":"source/img-storage/index.md","hash":"72893d55f9642038242ac7ee69e8a729544503ac","modified":1709622846377},{"_id":"source/images/vim.png","hash":"5419f2a5393e2a9e444e4e5d18713f25633a6af5","modified":1709622846373},{"_id":"source/tags/index.md","hash":"343173e310cf08df62768cdc835e634790070796","modified":1709622846381},{"_id":"source/img-storage/wallpaper.md","hash":"cdfb3b711b2e9da0499fd7d8d4497b4d6e02433b","modified":1709622846377},{"_id":"source/_posts/Go入门.md","hash":"f005cb319b7a2fcb35222522363b9794d317d823","modified":1709622846291},{"_id":"source/_posts/MongoDB数据库.md","hash":"f1778b29fdc40d13f184a6335bb85cd4683a3e13","modified":1709622846296},{"_id":"source/_posts/Dock栏.md","hash":"de1fa0f0946775cbbce605ea23cbb9431937240f","modified":1709622846291},{"_id":"source/_posts/VuePress.md","hash":"3ff085729b31f4086f8267389a865e24a4fce548","modified":1709622846296},{"_id":"source/video/index.md","hash":"db40bd0711d931b682d601e2e10dd05c8b7e2478","modified":1709622846381},{"_id":"source/_posts/Go语言基础.md","hash":"02862c428724c20dbfa08805ccc09afcb864ad85","modified":1709622846291},{"_id":"source/_posts/docker.md","hash":"b30d068f9caa2639ea1256c55b2bbc8bcb3afd40","modified":1709622846296},{"_id":"source/_posts/dpkg.md","hash":"8c9561742e18e5a7fe3428c045b0b40b8476eada","modified":1709622846296},{"_id":"source/_posts/JavaScript基础.md","hash":"a7bb00adaadbbf5bb948ac5572c56453ec475c00","modified":1709622846291},{"_id":"source/_posts/gnome美化.md","hash":"45781be4108ed70bcdf1cc2335b818c4f8e1888c","modified":1709622846300},{"_id":"source/_posts/go-wr.md","hash":"c97e8fe06819911fce25650ad87badc62189b8f7","modified":1709622846300},{"_id":"source/_posts/git.md","hash":"0c5c66b45f9f88b5b14f53535fe54af93f1ac587","modified":1709622846296},{"_id":"source/_posts/nextJS性能优化.md","hash":"b6c109da4ebebb1d17bf073e5e17c0bc85de9651","modified":1709622846304},{"_id":"source/_posts/java.md","hash":"78d98a2b1f76534d9e4cc156b6e4b4c9e6a88048","modified":1709622846300},{"_id":"source/_posts/nginx.md","hash":"c274fa88faa6556540c83891ecbd3708478632cf","modified":1709622846304},{"_id":"source/_posts/nodejs更新.md","hash":"70caa977376a69e75ecddab321bfb2c4692a817a","modified":1709622846304},{"_id":"source/_posts/mysql.md","hash":"8a57bc6db7ccab2781ae9adec13fc858389f3855","modified":1709622846300},{"_id":"source/_posts/springcloud.md","hash":"d435475262dec0b72feb177d125ab0f6896d80d9","modified":1709622846308},{"_id":"source/_posts/vim-plug.md","hash":"a4552949a1a74442f88ae921a58620eecd96a864","modified":1709622846308},{"_id":"source/_posts/pnpm说明.md","hash":"1153a8bb514757c4308db43966327a628b96dc44","modified":1709622846308},{"_id":"source/_posts/react.md","hash":"67031e1254bba929ca8a07ddb19c9f5f96465476","modified":1709622846308},{"_id":"source/_posts/nvm.md","hash":"e62b011bd3fe8b13d439fd546195c7628e269fdf","modified":1709622846304},{"_id":"source/_posts/合适时机加载动画.md","hash":"f320a8dcb1c123f677f9ccc0d43b4b7c1812392e","modified":1709622846312},{"_id":"source/_posts/vim-按键.md","hash":"e684d8fceef79c15239460c96c58d5c1ca15c371","modified":1709622846312},{"_id":"source/_posts/笔记小技巧.md","hash":"9bb6209cf31f9c37c807471d832ac3ed46c1ed97","modified":1709622846312},{"_id":"source/_posts/防火墙.md","hash":"54a61529620c5ab2b8b215e3b50f192a1ec934ba","modified":1709622846316},{"_id":"source/_posts/小程序开发.md","hash":"203cc55a82faec23f499e13ec90a858920c764e9","modified":1709622846312},{"_id":"source/_posts/网络.md","hash":"db98defc871b06d3f30cf32112108748ebe939f8","modified":1709622846316},{"_id":"source/FILES/JavaScript基础.md/image-20230605092717715.png","hash":"e7d84ddd0b0269b9ee1509578776d3107d00cc00","modified":1709622846170},{"_id":"source/FILES/Go语言基础.md/image-20230823130507803.png","hash":"a81fe7c3aa5991947e320ce8631110f55e08a7d5","modified":1709622846166},{"_id":"source/FILES/Go语言基础.md/image-20230823130419796.png","hash":"4d2b610accea513e4eaea696c9767ed949fc5800","modified":1709622846166},{"_id":"source/html/daynight/ScrollTrigger.min.js","hash":"9e8daaaa19b24dda9bf731ae8f527c47e92bad52","modified":1709622846333},{"_id":"source/FILES/JavaScript基础.md/image-20230605123626540.png","hash":"60c875e163e110ec1248257a51b1f33cab8b8a7a","modified":1709622846170},{"_id":"source/FILES/Go语言基础.md/image-20230823130528192.png","hash":"51fdfe458fd370000c046f7788c2744095f84cce","modified":1709622846166},{"_id":"source/FILES/VuePress.md/image-20230823133339149.png","hash":"539252c73d31b861944d0eab333af44db5dfa113","modified":1709622846188},{"_id":"source/FILES/Go入门.md/image-20230823130146688.png","hash":"3f92affebbfa58fb8bfa87bff7c44751a998fd15","modified":1709622846161},{"_id":"source/FILES/Go语言基础.md/image-20230823130355000.png","hash":"8843e13f29eea75f6e2c728bda916f64a176a26d","modified":1709622846162},{"_id":"source/FILES/Go入门.md/image-20230823130159867.png","hash":"5926433ed754794d37ff0fefe0551a17e1973533","modified":1709622846162},{"_id":"source/FILES/Go入门.md/image-20230823130116425.png","hash":"688aa9838413bc52c67e31c796b1ff500c3a1335","modified":1709622846158},{"_id":"source/FILES/Go入门.md/image-20230823130131910.png","hash":"34982b8a55db55d6f19a1a58d6900dde9fdc9134","modified":1709622846159},{"_id":"source/FILES/Go入门.md/image-20230823130210856.png","hash":"fb6af71990fbac059b5637381f478de9f0cc1672","modified":1709622846162},{"_id":"source/FILES/go-wr.md/image-20230622134517298.png","hash":"320eeb74ec657f066fd1747f89620d48dd4fa66a","modified":1709622846216},{"_id":"source/html/daynight/gsap.min.js","hash":"07224d2fce32e1c03f661b5f90731785ac6b599c","modified":1709622846345},{"_id":"source/FILES/docker.md/img-20230617154722.png","hash":"9a4c6ecc63e7757d7989375010c803b7d498b24d","modified":1709622846192},{"_id":"source/FILES/docker.md/img-20230617161035.png","hash":"c6673a57131e63b86f98d97bfed67e67ac58f90d","modified":1709622846192},{"_id":"source/FILES/docker.md/img-20230617161024.png","hash":"c6673a57131e63b86f98d97bfed67e67ac58f90d","modified":1709622846192},{"_id":"source/FILES/MongoDB数据库.md/image-20230712185247305.png","hash":"9cad700dfb88c574fca756dfb13471497623a3af","modified":1709622846172},{"_id":"source/FILES/MongoDB数据库.md/image-20230712190603575.png","hash":"39574db2bd653156d1562149249aaf7d771099d7","modified":1709622846172},{"_id":"source/FILES/MongoDB数据库.md/image-20230712190525028.png","hash":"72340bb55f6b2409a48080a141ddf53ca1dc2af8","modified":1709622846172},{"_id":"source/FILES/docker.md/img-20230617161038.png","hash":"c6673a57131e63b86f98d97bfed67e67ac58f90d","modified":1709622846196},{"_id":"source/FILES/docker.md/img-20230617161249.png","hash":"4ab6ab75ac239432ef3207ed21321d313ad15e8d","modified":1709622846196},{"_id":"source/FILES/MongoDB数据库.md/image-20230712190915728.png","hash":"5b9eb7a7b0c5cdd0e3089fed33b74c8231b38e04","modified":1709622846176},{"_id":"source/FILES/MongoDB数据库.md/image-20230712190710947.png","hash":"13e3840516d2973e3e09cf5790c96ace7da39b75","modified":1709622846176},{"_id":"source/FILES/MongoDB数据库.md/image-20230713145628439.png","hash":"e8ecc93bb3e3f2f07ef91a297e0436e71d858a4f","modified":1709622846184},{"_id":"source/FILES/MongoDB数据库.md/image-20230713123234366.png","hash":"bc84357e764a0914544f9c9f31a84b4df73180b1","modified":1709622846176},{"_id":"source/FILES/gnome美化.md/image-20230823132901627.png","hash":"50a57b8c70734e4b23b7821f4a75d0c3960f31cf","modified":1709622846200},{"_id":"source/FILES/gnome美化.md/image-20230823132931500.png","hash":"896cdc3bb138bcd7fca0ffc04768197bef394cd4","modified":1709622846204},{"_id":"source/FILES/MongoDB数据库.md/image-20230713145713176.png","hash":"2dc689a74488e2442d42667b4411f03965c1d635","modified":1709622846184},{"_id":"source/FILES/nginx.md/image-20230719131053170.png","hash":"dd1fb8a47625fb393e47c2d16fe0328a841248ae","modified":1709622846241},{"_id":"source/FILES/gnome美化.md/image-20230823132850474.png","hash":"ba8b7ba9dbc40d4be91f8f136ea3f7e3d34f7f6a","modified":1709622846196},{"_id":"source/FILES/gnome美化.md/image-20230823133022776.png","hash":"36599c6a87ba6ae0459d3744b7f74c4249d8267a","modified":1709622846208},{"_id":"source/FILES/gnome美化.md/image-20230823132949038.png","hash":"6fcbed22687aad830bb7d7a181531b0a89ef44e4","modified":1709622846204},{"_id":"source/FILES/gnome美化.md/image-20230823132940387.png","hash":"fd02b63e388dd5b921cf8b1266649e1e63ae6e28","modified":1709622846204},{"_id":"source/FILES/mysql.md/img-20230617174123.png","hash":"0e7a261fe1478844628c9dbf1f745b4d37a83d70","modified":1709622846216},{"_id":"source/FILES/mysql.md/img-20230617195642.png","hash":"5fcf95c3f68c7b932b8d7c7f6f6fd893b41b90dc","modified":1709622846228},{"_id":"source/FILES/mysql.md/img-20230617174044.png","hash":"cf8326bc9fdda458be01ca9ee0c2348316ffb231","modified":1709622846216},{"_id":"source/FILES/mysql.md/img-20230617200903.png","hash":"f0769e98c207ea8361fe9b4f1fd35cfd9620bd1b","modified":1709622846232},{"_id":"source/FILES/mysql.md/img-20230617200704.png","hash":"cda59550cb4a6ff558f4091fa542d62a20d4e90d","modified":1709622846232},{"_id":"source/FILES/nodejs更新.md/image-20230530142403267.png","hash":"9013c2de5b209a0e7b82a1846dada2b2674cb9e5","modified":1709622846246},{"_id":"source/FILES/nodejs更新.md/image-20230530142308794.png","hash":"09af17de9fedc81fe55520fa890cf6b246343062","modified":1709622846245},{"_id":"source/FILES/nodejs更新.md/image-20230530140912644.png","hash":"7471014173b96adba3484feb811711814c4f716f","modified":1709622846242},{"_id":"source/FILES/nodejs更新.md/image-20230530142835262.png","hash":"94bd70a75c559ff7de2e6718a13d32c463fbb9e0","modified":1709622846247},{"_id":"source/FILES/nodejs更新.md/image-20230530141003682.png","hash":"5e12049523adc547f5b9197392f060a948423470","modified":1709622846244},{"_id":"source/FILES/笔记小技巧.md/image-20230721210210155.png","hash":"2efe7d57f39eeb7e6d840b988a675994906fd938","modified":1709622846279},{"_id":"source/FILES/笔记小技巧.md/image-20230721205223146.png","hash":"c2a449a4a90000b84c56d6d63893b11fb6a62143","modified":1709622846279},{"_id":"source/FILES/springcloud.md/image-20230721203610510.png","hash":"1af22867945f09c683ff639c1ff030d9afdb8f59","modified":1709622846257},{"_id":"source/FILES/springcloud.md/image-20230721172118159.png","hash":"5081bb6c2f1f43bf3c0707b94dd5ac72210e7d88","modified":1709622846254},{"_id":"source/FILES/springcloud.md/image-20230721203805155.png","hash":"a944d6dcbac21ef5c4a89547dcaa0e656237ccb5","modified":1709622846259},{"_id":"source/FILES/笔记小技巧.md/image-20230721210221012.png","hash":"2efe7d57f39eeb7e6d840b988a675994906fd938","modified":1709622846283},{"_id":"source/FILES/springcloud.md/image-20230721204316658.png","hash":"970a2441d039c8d84ac5ef4ed0109bfdc5aed257","modified":1709622846261},{"_id":"source/FILES/springcloud.md/image-20230721214325200.png","hash":"1db6bb67e5ba1c7448e05a4133a00eb1e7ce92ba","modified":1709622846264},{"_id":"source/FILES/springcloud.md/image-20230721203949649.png","hash":"fdd14ff2467a032fe34fe4bd68eb43390c4aa377","modified":1709622846260},{"_id":"source/FILES/nvm.md/img-20230617144018.png","hash":"318aecaa108908818d6b5f7ffcb6c675ad90111d","modified":1709622846252},{"_id":"source/FILES/nvm.md/image-20230530151512400.png","hash":"31a8e5c8721e8f5555cb2b513debaf69aff19e7e","modified":1709622846249},{"_id":"source/FILES/springcloud.md/image-20230721213913950.png","hash":"2d1388b82060212cfa4b00e382df867e93ea2917","modified":1709622846262},{"_id":"source/FILES/nvm.md/img-20230617143835.png","hash":"ab7b7ed2ee0ecd49520c1de3e9bc8086c0e9bb21","modified":1709622846251},{"_id":"source/FILES/springcloud.md/image-20230722120734690.png","hash":"768e7c7ddf8c291fe115d34182dbad2d1127a426","modified":1709622846265},{"_id":"source/FILES/vim-plug.md/img-20230618120008.png","hash":"ab7123e3f27a05320820cde06fb85f5537db6be6","modified":1709622846268},{"_id":"source/FILES/vim-plug.md/img-20230618120500.png","hash":"4ad649ef3e127193db306ebdf778221dd624c088","modified":1709622846270},{"_id":"source/FILES/网络.md/image-20230620141208760.png","hash":"71aae84bb5b59c5e4ebc1ff4267ee5423bb263f9","modified":1709622846283},{"_id":"source/FILES/vim-plug.md/img-20230618122149.png","hash":"9d6b4591be86897917b59429072fa4e1d6d5e206","modified":1709622846271},{"_id":"source/FILES/网络.md/image-20230620141929709.png","hash":"4e1b6b5daf324160265e5cdb698c99673a789d40","modified":1709622846283},{"_id":"source/FILES/网络.md/image-20230620142714651.png","hash":"6df531e3a55cdb8732bc30e3ba37f0a4656fb373","modified":1709622846287},{"_id":"source/FILES/网络.md/image-20230620142532074.png","hash":"c00938f23d5cdcf3e0e6f8eb82eed8c57a8f0f37","modified":1709622846287},{"_id":"source/FILES/小程序开发.md/image-20230629202305598.png","hash":"9daee15d2824c5ca0074707d6729b8166a56c98e","modified":1709622846271},{"_id":"source/FILES/小程序开发.md/image-20230629203241718.png","hash":"1bd1cd828e2ffa3d8555ec9cdb3b7a6b1cdc2077","modified":1709622846271},{"_id":"source/FILES/小程序开发.md/image-20230629210334688.png","hash":"19cdec311b08d58a6e04ab3462a5eed59604e82d","modified":1709622846275},{"_id":"source/FILES/小程序开发.md/image-20230629203843418.png","hash":"3b77a7103764a22ce218ac4ebb25a56eae08874d","modified":1709622846275},{"_id":"source/FILES/小程序开发.md/image-20230629210559834.png","hash":"6ff989159f72c069f009f24444ca613553e412fc","modified":1709622846275},{"_id":"source/FILES/小程序开发.md/image-20230629210753331.png","hash":"62b5bd68f5c87536ca83649dcc7979cd14e5635a","modified":1709622846275},{"_id":"source/FILES/小程序开发.md/image-20230629211438057.png","hash":"bdbec25f2eb6410d4d80c1edef08a3a5313d6cd7","modified":1709622846279},{"_id":"source/FILES/nvm.md/image-20230530151726867.png","hash":"e9f26878ac270949a79d317ac20a96775ef93e3a","modified":1709622846250},{"_id":"node_modules/hexo-theme-butterfly/_config.yml","hash":"459517785a7161e07c333bfe2900243b6287f905","modified":1709623536009},{"_id":"node_modules/hexo-theme-butterfly/README.md","hash":"b5d6e7271b88d1a63755386442663af03e36a428","modified":1709623535170},{"_id":"node_modules/hexo-theme-butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1709623533634},{"_id":"node_modules/hexo-theme-butterfly/package.json","hash":"656d8b548940d7d214459cd8853007af38e6c465","modified":1709623535149},{"_id":"node_modules/hexo-theme-butterfly/languages/default.yml","hash":"4025c0ba440eb24705dd0293ca9ca84efb3105cc","modified":1709623536020},{"_id":"node_modules/hexo-theme-butterfly/plugins.yml","hash":"d0e179ae31cdc62037062432b0ee7a9008155a73","modified":1709623536027},{"_id":"node_modules/hexo-theme-butterfly/README_CN.md","hash":"86569b94949392e9b981608433495f0941d20b0c","modified":1709623535160},{"_id":"node_modules/hexo-theme-butterfly/languages/en.yml","hash":"4e9cdb7a3570929bcf082de7a4eac49140dddc73","modified":1709623536023},{"_id":"node_modules/hexo-theme-butterfly/layout/archive.pug","hash":"a0c034c2d319320a54046805e80b58dc48b7e233","modified":1709623535318},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-TW.yml","hash":"ee01e068f12dc33adfae5733824ea1255deb5ca6","modified":1709623536036},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-CN.yml","hash":"7dd849c3ba34986c57c764d9e36150b4bfffd2e9","modified":1709623536034},{"_id":"node_modules/hexo-theme-butterfly/layout/category.pug","hash":"710708cfdb436bc875602abf096c919ccdf544db","modified":1709623535466},{"_id":"node_modules/hexo-theme-butterfly/layout/post.pug","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1709623535737},{"_id":"node_modules/hexo-theme-butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1709623535659},{"_id":"node_modules/hexo-theme-butterfly/layout/page.pug","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1709623535708},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"fc468a93a64c7a3e408fbac921c9f5a5a8f32027","modified":1709623536014},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"7dfe7189ffeaebb6db13842237f8e124649bea3d","modified":1709623536017},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"996640605ed1e8e35182f0fd9a60a88783b24b03","modified":1709623536025},{"_id":"node_modules/hexo-theme-butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1709623535803},{"_id":"node_modules/hexo-theme-butterfly/.github/workflows/stale.yml","hash":"ac62b989b5550c756e1986fcc68f243170705383","modified":1709623536033},{"_id":"node_modules/hexo-theme-butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1709623536030},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/additional-js.pug","hash":"aca0ec7ef69b21d1f242c62fed389468a0f0e1a2","modified":1709623535255},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/404.pug","hash":"cb49f737aca272ccfeb62880bd651eccee72a129","modified":1709623535194},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1709623535568},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/rightside.pug","hash":"d15124c488273ea0801a042888feadc9261d0b2f","modified":1709623535785},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head.pug","hash":"dd9fde431add984330e3178e06a8d74705e7340e","modified":1709623535593},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/layout.pug","hash":"7fa9ae4b70b87fc97e992dde5944681f92b59bea","modified":1709623535671},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/sidebar.pug","hash":"9f0e9e039f304439007460fa0a7c8ac18e0ffd37","modified":1709623535790},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/pagination.pug","hash":"4c85de4dea4dca4e5088097a79bd6d7009cbf8ef","modified":1709623535712},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/post_lazyload.js","hash":"932df912976261929f809b7dbd4eb473e7787345","modified":1709623535000},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/random_cover.js","hash":"8d25f47434deae870bbffd07efe528a40363ab4d","modified":1709623535014},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":1709623534421},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/cdn.js","hash":"21fb5aabe043486d095c4c8cce361ed85ba88a26","modified":1709623534707},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/comment.js","hash":"5351e0bc09e6b5b3f6d30f333a2520626a28ca3a","modified":1709623534725},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/init.js","hash":"428b94c7b9e83f7ea36227dee66bfe3c23aee4a8","modified":1709623534829},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/stylus.js","hash":"9819f0996234fbd80d6c50a9e526c56ebf22588d","modified":1709623535054},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1709623534604},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_categories.js","hash":"e00efdb5d02bc5c6eb4159e498af69fa61a7dbb9","modified":1709623534629},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/welcome.js","hash":"8ad9911b755cba13dde2cc055c3f857a6b0dd20e","modified":1709623535140},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/findArchiveLength.js","hash":"9ea86bd7a3c3fca3324f70b1cd4d9e42f9efb08d","modified":1709623534754},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/related_post.js","hash":"4677be4175da6800c0b3b8c1614e593f73df8831","modified":1709623535023},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/inject_head_js.js","hash":"4238e06ff448ff2ee717cd4c874f37f04d35da06","modified":1709623534849},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/page.js","hash":"ce5d5a3d07b0d76ac5e96e5f9e5783f4b601b6be","modified":1709623534979},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/button.js","hash":"91d954f6e9fe6e571eb8ec9f8996294b2dc3688e","modified":1709623534676},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/flink.js","hash":"ab62919fa567b95fbe14889517abda649991b1ee","modified":1709623534774},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/gallery.js","hash":"950b3dbac0b21717458a8d1769cbfc454d0eff54","modified":1709623534795},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/label.js","hash":"03b2afef41d02bd1045c89578a02402c28356006","modified":1709623534879},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/inlineImg.js","hash":"a43ee2c7871bdd93cb6beb804429e404570f7929","modified":1709623534863},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/mermaid.js","hash":"531808a290b8bdd66bac2faab211ada8e9646a37","modified":1709623534955},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/note.js","hash":"d51812b43924f1bbf413c67499510dd125022005","modified":1709623534968},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/score.js","hash":"ea679dfe12d0e2290113b4a9d00663ce7a5ee5ad","modified":1709623535035},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/hide.js","hash":"396c3ab1bcf1c7693ad7e506eadd13016c6769b6","modified":1709623534814},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/tabs.js","hash":"6c6e415623d0fd39da016d9e353bb4f5cca444f5","modified":1709623535066},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/timeline.js","hash":"300eb779588bf35a1b687d9f829d866074b707e3","modified":1709623535079},{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","hash":"755490867fd8afe47d5cce24faea2ca172b0c4dd","modified":1709623535951},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1709623534116},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1709623535180},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","hash":"30abbb8eed880d51f61f336064d93abd709e0115","modified":1709623535999},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","hash":"42b106354d72a0ea1fe62587b313a5b7de3cc393","modified":1709623535110},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1709623534019},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","hash":"0227b5bd233a3c66582e0ee820cdb353ce52ece1","modified":1709623534944},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","hash":"aaaedc207440095da1ffabcad870fc2641befb0e","modified":1709623535128},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/article-sort.pug","hash":"90554c2ca5ba946f4c02e1bc5fe2859cef1b1594","modified":1709623535383},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/post-ui.pug","hash":"1ed873db25eec869beebb6873f04e19f0b0f4134","modified":1709623535734},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/fullpage-loading.pug","hash":"9e8c5788602b29a527ef35fe8a20076a5fa969bd","modified":1709623535574},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/index.pug","hash":"131f344d68b4c241d6e03849b243ee792fcd3cea","modified":1709623535606},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/menu_item.pug","hash":"31346a210f4f9912c5b29f51d8f659913492f388","modified":1709623535686},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/pace.pug","hash":"6ab4e301c92586505d6cddce1b3ad23b7c79010d","modified":1709623535704},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/index.pug","hash":"944d6e9dd50df3395f3a2c7ad9db667d50dea4ed","modified":1709623535599},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/social.pug","hash":"5de9a82032cdad1db3b868b797460921cd775fc2","modified":1709623535796},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/Open_Graph.pug","hash":"8aa8d799aedbfd811195b84a451bc4b6e2647c12","modified":1709623535704},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/nav.pug","hash":"f61659aa457d1a2d1baa3a13157996cfac4d6609","modified":1709623535697},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config.pug","hash":"75e7a524af64fbaaaf7b05a1b1922bf6940d7afe","modified":1709623535490},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/post-info.pug","hash":"9698f22751778dde063cbfbd01c59ca4462ccd85","modified":1709623535729},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config_site.pug","hash":"7df90c8e432e33716517ab918b0a125bc284041b","modified":1709623535476},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/noscript.pug","hash":"d16ad2ee0ff5751fd7f8a5ce1b83935518674977","modified":1709623535701},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1709623535793},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/analytics.pug","hash":"67e1c3b48e4ca7ee0b2c76d3ca7476b9883cf105","modified":1709623535290},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1709623535589},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/preconnect.pug","hash":"a03b3ddc06e7aa9fd07eea0d5f97c8d5addd2315","modified":1709623535745},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/default-page.pug","hash":"12c65c174d26a41821df9bad26cdf1087ec5b0ca","modified":1709623535518},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1709623535757},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1709623535461},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/tags.pug","hash":"9621991359e22b14049346f1cf87bdedc94edf5a","modified":1709623535804},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/flink.pug","hash":"f9ce83978b217a71a2eb8761dc14b09866faa3f4","modified":1709623535563},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/reward.pug","hash":"864869c43fe5b5bb6f4ac6b13dd4bfb16ea47550","modified":1709623535778},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/post-copyright.pug","hash":"ebecba46a5f4efe1c98a386df06c56e26fbd07b9","modified":1709623535725},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/aplayer.pug","hash":"c7cfade2b160380432c47eef4cd62273b6508c58","modified":1709623535305},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pangu.pug","hash":"0f024e36b8116118233e10118714bde304e01e12","modified":1709623535714},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/effect.pug","hash":"6528e86656906117a1af6b90e0349c2c4651d5e1","modified":1709623535548},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/prismjs.pug","hash":"ffb9ea15a2b54423cd4cd441e2d061b8233e9b58","modified":1709623535749},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pjax.pug","hash":"cde142861edfc7aab435b8a0ebb84d9ba450fb5b","modified":1709623535718},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/subtitle.pug","hash":"8044b9c18b34b019ffe26b7383e7e80356b5e4b5","modified":1709623535799},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_announcement.pug","hash":"ae392459ad401a083ca51ee0b27526b3c1e1faed","modified":1709623535397},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1709623535391},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_author.pug","hash":"03c6afabbf1ac729c7fb21c7ec06da0190b0fdc7","modified":1709623535411},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1709623535405},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1709623535416},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_newest_comment.pug","hash":"7834bf7c711e739fd33cfcd0b53d151013b3d449","modified":1709623535424},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1709623535420},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_tags.pug","hash":"eceb4420a64c720f0d2741e89d6229bbb3d87353","modified":1709623535445},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1709623535450},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/index.pug","hash":"010e3d548ababca2280c4fc4168d9a4a1ee4f536","modified":1709623535656},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_post_toc.pug","hash":"3057a2f6f051355e35d3b205121af8735100eacf","modified":1709623535431},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_recent_post.pug","hash":"e5aac7b28ed4123d75797263c64e74ac547945bc","modified":1709623535439},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_webinfo.pug","hash":"35ce167c5a275211bfc1fa3d49adfde5b404d98f","modified":1709623535454},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/function.styl","hash":"e0de61a059b5e6c7b8ebc7149b4650bdcd69af5e","modified":1709623535924},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/darkmode.styl","hash":"e4f948b0d4eb5483b2b360e56cbfe3359751b438","modified":1709623535875},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/index.styl","hash":"51868d861c94a9f1ad7c0dbd66d2f475c5d4ea62","modified":1709623535941},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/chat.styl","hash":"f9a5d3f1fc5ed0ed2ee4c1eaa58ed650d11ddebd","modified":1709623535866},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/readmode.styl","hash":"c481d1f689a4e6d7ee492a03751bda47a30225ce","modified":1709623535973},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/aside.styl","hash":"57adf29a3e36e4ea84384e36c034eb294dffb208","modified":1709623535857},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/comments.styl","hash":"c61dccca690d486c3d9c29cf028d87b777385141","modified":1709623535868},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/footer.styl","hash":"83a7a70eb0532ea9c4267939fe484af915fca01e","modified":1709623535916},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/head.styl","hash":"8cd2aaa32cd68cd1908c9001444a811c3d0f9267","modified":1709623535929},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/loading.styl","hash":"ac2aeee9926f75b2a0098efe1c114126987430f2","modified":1709623535961},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/post.styl","hash":"fc9424d9c5def2201ec1d04dc79d0beedc1d2175","modified":1709623535970},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/relatedposts.styl","hash":"d53de408cb27a2e704aba7f7402b7caebe0410d8","modified":1709623535975},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/pagination.styl","hash":"fb9f78bfbb79579f1d752cb73fb6d25c8418e0fd","modified":1709623535968},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/reward.styl","hash":"c5cfed620708807a48076b5ee59b0ba84e29aa80","modified":1709623535978},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/sidebar.styl","hash":"631ca35a38bc4ac052e9caf47508ff1f99842fc7","modified":1709623535982},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/third-party.styl","hash":"5556c9bf4f53a90cb9b4945cd76a8849bd67f3f3","modified":1709623535990},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight.styl","hash":"57a19eb0c418d92a88b143f56ccb8cd60e6d7ad0","modified":1709623535938},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/rightside.styl","hash":"bbc884d6b2158a833b77a1bbc07248e17874b22e","modified":1709623535979},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/theme.styl","hash":"bcd384c8b2aa0390c9eb69ac1abbfd1240ce1da4","modified":1709623535990},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/algolia.styl","hash":"649a054e73278b6724bd4dd9b94724791ec5c928","modified":1709623535849},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/local-search.styl","hash":"a86e4e9198b225b4b73a7a45f04b86cbbed0d231","modified":1709623535963},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/index.styl","hash":"20a3134e1302b62bfc881f4ec43f398267111f22","modified":1709623535947},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/archives.styl","hash":"c9e98027f2dd730ce389c2047f62ebb748955fcf","modified":1709623535851},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/404.styl","hash":"50dbb9e6d98c71ffe16741b8c1b0c1b9771efd2b","modified":1709623535841},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/flink.styl","hash":"98d755b686ee833e9da10afaa40c4ec2bd66c19a","modified":1709623535912},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/homepage.styl","hash":"b3ea08d9460122751144a3ca835e009a460d6ad3","modified":1709623535938},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/categories.styl","hash":"f01ee74948cedb44e53cd3bb1ef36b7d2778ede7","modified":1709623535864},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/common.styl","hash":"4e320e16d49bc18085045937681f7331a1e243ca","modified":1709623535871},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/tags.styl","hash":"580feb7e8b0822a1be48ac380f8c5c53b1523321","modified":1709623535986},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/gallery.styl","hash":"81ad85acf0e0fe7f9ee23c16a700e7154574d5dd","modified":1709623535927},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/button.styl","hash":"45f0c32bdea117540f6b14ebac6450d7142bd710","modified":1709623535862},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hide.styl","hash":"ce489ca2e249e2a3cf71584e20d84bdb022e3475","modified":1709623535934},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1709623535931},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1709623535953},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/note.styl","hash":"85ae91c83691ea4511f4277da1194a185251cc78","modified":1709623535965},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/tabs.styl","hash":"bf9568444dd54e39dc59b461323dcd38942f27d9","modified":1709623535982},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/label.styl","hash":"66c59e193d794cdb02cca7bd1dc4aea5a19d7e84","modified":1709623535953},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/timeline.styl","hash":"f071156d439556e7463ed4bc61ceee87170d5d08","modified":1709623535994},{"_id":"node_modules/hexo-theme-butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1709623533774},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"5f86add36eeffbed61d11f08972a13697b4d9437","modified":1709623535337},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","hash":"fd86281d4f0f99ce173e49c1a0df3507fe268d37","modified":1709623534521},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","hash":"8509cbd954ee9e099dcfbbfdafba70893a56e9ae","modified":1709623534908},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"0344477a2cf38698318ead2681c63ac12f01586e","modified":1709623535557},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d85c3737b5c9548553a78b757a7698df126a52cf","modified":1709623535529},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"b2d274db84ef22fbd6d5ea8f4404821898934209","modified":1709623535624},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"39427e107230a10790972349c9dd4c4f31d55eb7","modified":1709623535827},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"56c028ba0ea8fac19f0125114d765dfc56ce2b48","modified":1709623535815},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"001e8be47854b891efe04013c240c38fed4185eb","modified":1709623535764},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"ed6906b7c6aa7046bbad95dfdda9211997be7099","modified":1709623535221},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/chatra.pug","hash":"ddce8352b371a1fb426bdb6c33f587eb37a69647","modified":1709623535472},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/crisp.pug","hash":"2fb098a7aa45010a8cd212dc0bd5308c6e7c63e3","modified":1709623535506},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/index.pug","hash":"618e1b7f9204049b07beb9e1363c844a78a9ace3","modified":1709623535629},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"9b57a8e13de8fc51a5f550854e47164fd8ac1be8","modified":1709623535513},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/abcjs/index.pug","hash":"f58f1648d2d71311bafca4833f20b605bb5f18c8","modified":1709623535615},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/tidio.pug","hash":"dd61eca6e9a45f63e09bdefba89fe285a81ba096","modified":1709623535808},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/messenger.pug","hash":"e39a9c37adf4cb15a2ba3b2cc65542ffea88650d","modified":1709623535693},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1709623535640},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mermaid.pug","hash":"d0ce1891b042dcc2c93cacc866e38721b94aa4c4","modified":1709623535690},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/katex.pug","hash":"dfcbd9881be569ea420eff1a6b00e4f4dbe2138e","modified":1709623535667},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"8c0d9a45bd2d83cc6d0e7bbfe172a09ff33c0178","modified":1709623535375},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mathjax.pug","hash":"fc072ac839401174b5d3cf9acd3b694246c23a55","modified":1709623535682},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"0330e3063ccf0ce40e4828b8d4fbef62362e8195","modified":1709623535585},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"4fe8faf77b8420fc031ae1b54f78b2ece9fcc07e","modified":1709623535524},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"aa6061183a32472cd1882fce445a5049108a984b","modified":1709623535775},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"4ec0642f2d5444acfab570a6f8c7868e7ff43fde","modified":1709623535644},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"b7b2aa5be4112065d5066c0f066f5f58721153bf","modified":1709623535831},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"44991d67abb81784c5cdb4337b2b9798fc4361e1","modified":1709623535811},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":1709623535242},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"ae1ccd78926cc19399d396b237d5161d7cde44a8","modified":1709623535838},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/addtoany.pug","hash":"85c92f8a7e44d7cd1c86f089a05be438535e5362","modified":1709623535263},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/share-js.pug","hash":"c7dd2b2ae9b23aa0a60fffd7df9e9f76ef52033e","modified":1709623535788},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/index.pug","hash":"4c4a9c15215ae8ac5eadb0e086b278f76db9ee92","modified":1709623535652},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/algolia.pug","hash":"9c3c109a12d2b6916e8b4965cca12f521510ead9","modified":1709623535279},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/index.pug","hash":"a99a41334387ee9a46c6f8e8212331a29a10d159","modified":1709623535648},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqus.pug","hash":"9ef303da16d180619da18b146ddb9bc35f66bdbf","modified":1709623535534},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/docsearch.pug","hash":"1c3e101445c5571ba998ce293d3984319df1b3b0","modified":1709623535544},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"0704efed9079c867ab5f7bee7381a6c869154c73","modified":1709623535553},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/local-search.pug","hash":"5ebd5e8d39c9f77f5b2d983f6cd6802ccaf98746","modified":1709623535677},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"6e17b2cea503eabeb328835038812cfa95f15871","modified":1709623535540},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/giscus.pug","hash":"5127bc550a2edb1ab9f45416e1964c76e8201544","modified":1709623535578},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/artalk.pug","hash":"5d5d8a0a3a7690d6d01e3feb91c2a36a5cd651b1","modified":1709623535365},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"2fc5627eb63118c83df9422b47c801822e28df98","modified":1709623535582},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/livere.pug","hash":"52ea8aa26b84d3ad38ae28cdf0f163e9ca8dced7","modified":1709623535673},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/remark42.pug","hash":"598790433e3c9be28b0063bff08d257acd0abf75","modified":1709623535771},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/js.pug","hash":"00ed91c52939b9675b316137f854d13684c895a6","modified":1709623535663},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/index.pug","hash":"35ae7980f658a349c5956c5699efd435b604b836","modified":1709623535634},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"4d78f6266d0870c06c10eaf47c951bd4d9a7732e","modified":1709623535821},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/valine.pug","hash":"e55b9c0f8ced231f47eb88bd7f4ec99f29c5c29d","modified":1709623535829},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/diff.styl","hash":"cf1fae641c927621a4df1be5ca4a853b9b526e23","modified":1709623535899},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/index.styl","hash":"18804c58239d95798fa86d0597f32d7f7dd30051","modified":1709623535943},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/index.styl","hash":"5dc2e0bcae9a54bfb9bdcc82d02ae5a3cf1ca97d","modified":1709623535943},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/waline.pug","hash":"0a1b8fe95623b095eb7ede3f30ca327684d1e613","modified":1709623535836},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/utterances.pug","hash":"2a8d02ed9303092e8816f6489a443e7388102470","modified":1709623535824},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"8970cc1916c982b64a1478792b2822d1d31e276d","modified":1709623535957},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1709623535912},{"_id":"source/images/404.png","hash":"c3ceaa7f2cc6cfc73773d44afd00172e388e1036","modified":1709622846349},{"_id":"source/images/docker.png","hash":"841f1dade5e112fe545191a02a12fac5c30f0645","modified":1709622846357},{"_id":"source/images/ufw.png","hash":"11edc4cdc9d53e606cd09eb06ff0a3a59bf6c00e","modified":1709622846373},{"_id":"source/html/daynight/index.html","hash":"365bf132119f1d06b3e26dfc6a0c529c2b26a6de","modified":1709622846349},{"_id":"source/FILES/go-wr.md/21784585a070444b885756e66556e4ed.png","hash":"08ce3c37e4c5758d0f2321e854dab46b0217e884","modified":1709622846212},{"_id":"source/FILES/go-wr.md/008bcb5f6103455691ff3e79c29474ca.png","hash":"a9bc6202ed5d78688b360447da56b99575e15d65","modified":1709622846212},{"_id":"source/FILES/docker.md/img-20230617154328.png","hash":"2eb8644190411dce30ffa00adb17808077532734","modified":1709622846188},{"_id":"source/FILES/gnome美化.md/image-20230823132959336.png","hash":"14a375595ffc5b45ce3b0b81391649ca50183359","modified":1709622846208},{"_id":"source/FILES/gnome美化.md/image-20230823133008705.png","hash":"8530970544bc7bca31e73565b7e1b99e4bb6e005","modified":1709622846208},{"_id":"source/FILES/nextJS性能优化.md/2abf157ef8fd4b60b26dc45d24273dbbtplv-k3u1fbpfcp-zoom-in-crop-mark4536000.webp","hash":"322c9fa89e22433971f5788ba211ebe99e0ad8a6","modified":1709622846236},{"_id":"source/FILES/mysql.md/img-20230617195454.png","hash":"b4fd18c112bf83913867537e73cb8b35454db28e","modified":1709622846224},{"_id":"source/FILES/mysql.md/img-20230617180151.png","hash":"7bbcf0a2794e37c045621b32d7d89e275714e68f","modified":1709622846220},{"_id":"source/FILES/mysql.md/img-20230617201511.png","hash":"bee77b5aa8157a85dc130069ba19caaac2533c13","modified":1709622846232},{"_id":"source/FILES/mysql.md/img-20230617201528.png","hash":"bee77b5aa8157a85dc130069ba19caaac2533c13","modified":1709622846236},{"_id":"source/FILES/vim-plug.md/img-20230618115047.png","hash":"0701b03d42cdecd5bf8306df08c5d1cfc7d96f9c","modified":1709622846267},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"d02f3cc9e6183e7d05c7e90e9ae1dee5ce21f297","modified":1709623535834},{"_id":"source/FILES/docker.md/img-20230617154152.png","hash":"ac8e1719f6a1dbdea2731c6502880f7a4e75213d","modified":1709622846188},{"_id":"source/images/background.png","hash":"cfdb64b196b7d3f3082325f9d297cc9ddc704d36","modified":1709622846353},{"_id":"source/FILES/MongoDB数据库.md/image-20230713130049546.png","hash":"9d1d6070e7c1cedc59965782806e6cb5c409918d","modified":1709622846180},{"_id":"source/FILES/mysql.md/img-20230617183749.png","hash":"722c38f9cc7732d8a27e4d59816822fc47b6e9d1","modified":1709622846220},{"_id":"source/FILES/mysql.md/img-20230617192817.png","hash":"7905a9c81838be0c7a464425c4d76824827af68e","modified":1709622846224},{"_id":"source/FILES/mysql.md/img-20230617200336.png","hash":"e27a3280a2242dda973c15a676763f7a024f3294","modified":1709622846228},{"_id":"source/FILES/springcloud.md/image-20230721192248994.png","hash":"3803faf9128d4000493c581ef79b086a625a9592","modified":1709622846256},{"_id":"source/images/mysql.png","hash":"649ce9abe2bfa9086afc7bd1ab69f59f8608f9bf","modified":1709622846369},{"_id":"source/FILES/gnome美化.md/image-20230823132920231.png","hash":"d48f20ba66299ef2d7b92d4709340a22b5358c4c","modified":1709622846200},{"_id":"source/images/dock.png","hash":"8311fec1752b07cf9d55c44e3983746bb09cd8ce","modified":1709622846357},{"_id":"source/FILES/MongoDB数据库.md/image-20230713142753307.png","hash":"8bbe612ad532ff7019bdaf80b187e84c1323b97b","modified":1709622846184},{"_id":"source/images/top.jpg","hash":"e624aa5f96045dbd36bbc49ffacf9054c488c6f4","modified":1709622846373},{"_id":"source/images/home.jpg","hash":"0810620b87a9ad2260d52164b8e780d57a4874ce","modified":1709622846365},{"_id":"public/about/index.html","hash":"7f3c5e5f9536cd2848d344d7e7d75b6d890fc3e5","modified":1709629785000},{"_id":"public/music/index.html","hash":"68b7d894912fb0eccb0ef92d15bed42c9ff23284","modified":1709629785000},{"_id":"public/video/index.html","hash":"1fd006825cd81c96ec3dc90e7624973e38028d0d","modified":1709629785000},{"_id":"public/tags/index.html","hash":"873d37a812b843ae8e94951874f4cecb574c90ae","modified":1709629785000},{"_id":"public/categories/index.html","hash":"e4de9d22d2c396045782a8a6f053cdaa84d7d351","modified":1709629785000},{"_id":"public/code/index.html","hash":"d5e0c6079caea12214fd15cb4d94bcb8aa99ea01","modified":1709629785000},{"_id":"public/img-storage/index.html","hash":"d746c445f98c90090a65c30cf7b770acc0de71aa","modified":1709629785000},{"_id":"public/img-storage/wallpaper.html","hash":"56ca27774d48b1bbaba2ace7a86bcfc79da43eef","modified":1709629785000},{"_id":"public/link/index.html","hash":"2639d3ad58c576516aed8baf84c1ab8cf441eaa9","modified":1709629785000},{"_id":"public/2024/03/05/防火墙/index.html","hash":"aeeff28d39cdef6c0d01c4934c6cdc0eeb9188f5","modified":1709629785000},{"_id":"public/2024/03/05/网络/index.html","hash":"c71510b29bb22967678266bfe7b9dac4434f0022","modified":1709629785000},{"_id":"public/2024/03/05/笔记小技巧/index.html","hash":"808d2f5a3255b6f9b8166e762e75ed931aa6b5e2","modified":1709629785000},{"_id":"public/2024/03/05/合适时机加载动画/index.html","hash":"0cc6b7dc8b300656bd37e0796d0eac0d4f2804d3","modified":1709629785000},{"_id":"public/2024/03/05/小程序开发/index.html","hash":"fe406db27b0eff5e7ed0deb5d4b9a1f8f8b62d1c","modified":1709629785000},{"_id":"public/2024/03/05/VuePress/index.html","hash":"c6f2692fbca99c7c11a186afa15fc2042a1ffca0","modified":1709629785000},{"_id":"public/2024/03/05/vim-按键/index.html","hash":"1489804bf886682fd478861ac7aaad6963d57d67","modified":1709629785000},{"_id":"public/2024/03/05/vim-plug/index.html","hash":"b42b9b06c2162914b91a56400a0ad8ad41c1eba8","modified":1709629785000},{"_id":"public/2024/03/05/springcloud/index.html","hash":"6d3ce69db9c6c2cb03bafc83edfc626065c726f8","modified":1709629785000},{"_id":"public/2024/03/05/react/index.html","hash":"f2feaa6c57f595b5cee77d78e449ed2b4fcc3556","modified":1709629785000},{"_id":"public/2024/03/05/pnpm说明/index.html","hash":"c1266d0b569a95de341ac32a6674a7da2d23d954","modified":1709629785000},{"_id":"public/2024/03/05/nodejs更新/index.html","hash":"64b10082bc34d68d9c0c7052d8731966e6fcc97e","modified":1709629785000},{"_id":"public/2024/03/05/nvm/index.html","hash":"0f2f7fa190a6af10a639f6d569429af78bda6944","modified":1709629785000},{"_id":"public/2024/03/05/nginx/index.html","hash":"90033ebf647663856f3bf4c1f28c70b838f9c96b","modified":1709629785000},{"_id":"public/2024/03/05/mysql/index.html","hash":"05261c0659c3ab0394d60860e2ec28ca5c4e5853","modified":1709629785000},{"_id":"public/2024/03/05/nextJS性能优化/index.html","hash":"57289f9178ceb50065c146ffe3294a3f6f7b2b8d","modified":1709629785000},{"_id":"public/2024/03/05/MongoDB数据库/index.html","hash":"b34f95af29e68d001821e847bd3cb6c0fab7df11","modified":1709629785000},{"_id":"public/2024/03/05/java/index.html","hash":"feb5d47859c9e439d28f4da46f6f92f69c949d84","modified":1709629785000},{"_id":"public/2024/03/05/JavaScript基础/index.html","hash":"b7a8fa975b02c1565f7c80161d87c527c09e87a3","modified":1709629785000},{"_id":"public/2024/03/05/Go语言基础/index.html","hash":"5a1e7b15eb02f21a1cb1e614a66ff0508aedd809","modified":1709629785000},{"_id":"public/2024/03/05/Go入门/index.html","hash":"714abafb95a7f3682cd9424bb9d399a800942242","modified":1709629785000},{"_id":"public/2024/03/05/go-wr/index.html","hash":"9658efbb3951e6b9afbb7eb271356fd73b4bf378","modified":1709629785000},{"_id":"public/2024/03/05/dpkg/index.html","hash":"e84625fdcf03f12083b07f7b2f32c2fd5ad09fa9","modified":1709629785000},{"_id":"public/2024/03/05/gnome美化/index.html","hash":"df69d558a6608b5480917ff109c2440dc5a5c5d8","modified":1709629785000},{"_id":"public/2024/03/05/git/index.html","hash":"44979b395c29f6ec2fbcc951288cb40a0275d5a8","modified":1709629785000},{"_id":"public/2024/03/05/docker/index.html","hash":"67c4f06ac18cc34f9b4508124001ddaeeef3296a","modified":1709629785000},{"_id":"public/2024/03/05/Dock栏/index.html","hash":"76b0c19ba9a90d7206340379c0bb2a92af56c1bd","modified":1709629785000},{"_id":"public/index.html","hash":"b29bb17ac99fb7c3c21e363ed9ebe489b0d92924","modified":1709629785000},{"_id":"public/page/3/index.html","hash":"ffc68bb25f3cbb5a5373ea96c705c58521b0455a","modified":1709629785000},{"_id":"public/page/2/index.html","hash":"87b8dd4c123664d44d0dbaa8780c495ad5a636ac","modified":1709629785000},{"_id":"public/categories/其他/index.html","hash":"6af396001e454401b9d9eeb943b3cc19994d28be","modified":1709629785000},{"_id":"public/categories/前端/index.html","hash":"1b11e939371968315c2e5dd02154f426d91252f9","modified":1709629785000},{"_id":"public/categories/后端/index.html","hash":"f7be3985e0120aa71c765a77d8df65b45741795b","modified":1709629785000},{"_id":"public/categories/linux/index.html","hash":"19c18c1603b38f48ebc13af1b962d24d0e22b556","modified":1709629785000},{"_id":"public/categories/数据库/index.html","hash":"877e037077d5bb4d5590c68011eb958b324554f5","modified":1709629785000},{"_id":"public/categories/计算机/index.html","hash":"5815337ac7de4e7249ccb678ca51ff8696b7d6ca","modified":1709629785000},{"_id":"public/archives/index.html","hash":"37b4b837b2593166fb9d219a39517f385f506636","modified":1709629785000},{"_id":"public/archives/page/2/index.html","hash":"c44d7410bcb21b364a85752316e82b64f3d61c7d","modified":1709629785000},{"_id":"public/archives/page/3/index.html","hash":"f40490c0bed73c652ce816598957e0177f0de643","modified":1709629785000},{"_id":"public/archives/2024/index.html","hash":"0928b2b3c1ae26b4c3e9e5c7d63cfec2f6713492","modified":1709629785000},{"_id":"public/archives/2024/page/3/index.html","hash":"96442c50d692f066b5b29517e7ff415a5c2f7c18","modified":1709629785000},{"_id":"public/archives/2024/page/2/index.html","hash":"f3904ec5d14aff452dfaf60fb26ff5aebd5f4e78","modified":1709629785000},{"_id":"public/archives/2024/03/index.html","hash":"3fdc1169b8e074fdeec7c20549ad71ce074f0d47","modified":1709629785000},{"_id":"public/archives/2024/03/page/2/index.html","hash":"35a095374316b215c51260eabeeee0efb6bb1a78","modified":1709629785000},{"_id":"public/archives/2024/03/page/3/index.html","hash":"1912d668f7b1466e7078a26568a1d1d8fa33ea28","modified":1709629785000},{"_id":"public/tags/任务栏美化/index.html","hash":"ef04f80d587582d48295ce136b3490fa6ea5da77","modified":1709629785000},{"_id":"public/tags/go/index.html","hash":"1e5f4b656037c10de187493469607cd491ff24b8","modified":1709629785000},{"_id":"public/tags/linux/index.html","hash":"2970dfb0e33d73926102feedd77c3c2923e79f72","modified":1709629785000},{"_id":"public/tags/vue/index.html","hash":"1966c4c244d89d6617c1984a9f5d8b52f40e5c19","modified":1709629785000},{"_id":"public/tags/typescript/index.html","hash":"54c4a8c75f7426c59420fd70bc7ebd2fd8f260ff","modified":1709629785000},{"_id":"public/tags/javascript/index.html","hash":"f18c1c09933c267899e14305811871c0a5de9330","modified":1709629785000},{"_id":"public/tags/python/index.html","hash":"901ade81b6193252a61db72d8d5a3fb68895a98c","modified":1709629785000},{"_id":"public/tags/包管理器/index.html","hash":"367e4caf77cf82ff75a407453543fa61c1e8d4b7","modified":1709629785000},{"_id":"public/tags/git/index.html","hash":"e4d3537a93cad8b929a408c2a7c44fd6a877bbf6","modified":1709629785000},{"_id":"public/tags/java基础/index.html","hash":"a7c4d39a6475f2e21256d3f793a2ee522c9c9ca0","modified":1709629785000},{"_id":"public/tags/nextJS/index.html","hash":"6a7f0ab23e56208832c6efa8df25091e1edf0c99","modified":1709629785000},{"_id":"public/tags/mysql/index.html","hash":"4a4ae1b865113cb84bd1c9f922787c57a115da6c","modified":1709629785000},{"_id":"public/tags/nodejs/index.html","hash":"643aaa200f08ee704b3b6cba9b01ebe532abea43","modified":1709629785000},{"_id":"public/tags/代理/index.html","hash":"75d5fec949709b7e11971e17fb6f9519e08e3367","modified":1709629785000},{"_id":"public/tags/react/index.html","hash":"df937545115c6a1d046aff4aa645ecfd9baa6107","modified":1709629785000},{"_id":"public/tags/nvm/index.html","hash":"d0c839107c7a46819a0dac272972d4b33bc14f76","modified":1709629785000},{"_id":"public/tags/vim/index.html","hash":"88446e4527f83d8d2a86c09511234a1c89322940","modified":1709629785000},{"_id":"public/tags/java/index.html","hash":"564222881b0480c68aa84e67179c4877cde45aaa","modified":1709629785000},{"_id":"public/tags/笔记/index.html","hash":"957cebabdeb82592887dbfb7e1a171116412bd2e","modified":1709629785000},{"_id":"public/tags/防火墙/index.html","hash":"25cf48582a7e0877e065c671c94c045d0e8e96cc","modified":1709629785000},{"_id":"public/tags/Spring/index.html","hash":"ede921177b4adbd0d5da2b30856d2436222edf5d","modified":1709629785000},{"_id":"public/tags/计算机网络/index.html","hash":"ddc6612c75cbf1e9038ba0051167ad3d42e4962e","modified":1709629785000},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1709629785000},{"_id":"public/images/avatar.jpg","hash":"ef454b8ba565e47a5f9be54f6a12b8b8f0527ee1","modified":1709629785000},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1709629785000},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1709629785000},{"_id":"public/images/java.png","hash":"3267f658f00ec95127971d238528d1338faebc68","modified":1709629785000},{"_id":"public/images/5288c8596a5755108a80b7d5d2822eda.jpeg","hash":"5b935c02be3d2a29a2cdefd8b9cf93f46ce3b714","modified":1709629785000},{"_id":"public/images/icon.png","hash":"16a29c18de4c4c43e62eac7853301ef3be73b233","modified":1709629785000},{"_id":"public/images/nvm.jpg","hash":"2fc63cf85f8d90936af52fe598b8c974b40092f0","modified":1709629785000},{"_id":"public/images/vim.png","hash":"5419f2a5393e2a9e444e4e5d18713f25633a6af5","modified":1709629785000},{"_id":"public/FILES/JavaScript基础.md/image-20230605092717715.png","hash":"e7d84ddd0b0269b9ee1509578776d3107d00cc00","modified":1709629785000},{"_id":"public/FILES/Go语言基础.md/image-20230823130419796.png","hash":"4d2b610accea513e4eaea696c9767ed949fc5800","modified":1709629785000},{"_id":"public/html/daynight/ScrollTrigger.min.js","hash":"9e8daaaa19b24dda9bf731ae8f527c47e92bad52","modified":1709629785000},{"_id":"public/FILES/JavaScript基础.md/image-20230605123626540.png","hash":"60c875e163e110ec1248257a51b1f33cab8b8a7a","modified":1709629785000},{"_id":"public/FILES/Go语言基础.md/image-20230823130507803.png","hash":"a81fe7c3aa5991947e320ce8631110f55e08a7d5","modified":1709629785000},{"_id":"public/FILES/Go语言基础.md/image-20230823130355000.png","hash":"8843e13f29eea75f6e2c728bda916f64a176a26d","modified":1709629785000},{"_id":"public/FILES/VuePress.md/image-20230823133339149.png","hash":"539252c73d31b861944d0eab333af44db5dfa113","modified":1709629785000},{"_id":"public/FILES/Go语言基础.md/image-20230823130528192.png","hash":"51fdfe458fd370000c046f7788c2744095f84cce","modified":1709629785000},{"_id":"public/FILES/Go入门.md/image-20230823130146688.png","hash":"3f92affebbfa58fb8bfa87bff7c44751a998fd15","modified":1709629785000},{"_id":"public/html/daynight/gsap.min.js","hash":"07224d2fce32e1c03f661b5f90731785ac6b599c","modified":1709629785000},{"_id":"public/FILES/Go入门.md/image-20230823130159867.png","hash":"5926433ed754794d37ff0fefe0551a17e1973533","modified":1709629785000},{"_id":"public/FILES/Go入门.md/image-20230823130116425.png","hash":"688aa9838413bc52c67e31c796b1ff500c3a1335","modified":1709629785000},{"_id":"public/FILES/Go入门.md/image-20230823130131910.png","hash":"34982b8a55db55d6f19a1a58d6900dde9fdc9134","modified":1709629785000},{"_id":"public/FILES/go-wr.md/image-20230622134517298.png","hash":"320eeb74ec657f066fd1747f89620d48dd4fa66a","modified":1709629785000},{"_id":"public/FILES/docker.md/img-20230617154152.png","hash":"ac8e1719f6a1dbdea2731c6502880f7a4e75213d","modified":1709629785000},{"_id":"public/FILES/Go入门.md/image-20230823130210856.png","hash":"fb6af71990fbac059b5637381f478de9f0cc1672","modified":1709629785000},{"_id":"public/FILES/docker.md/img-20230617161035.png","hash":"c6673a57131e63b86f98d97bfed67e67ac58f90d","modified":1709629785000},{"_id":"public/FILES/docker.md/img-20230617161024.png","hash":"c6673a57131e63b86f98d97bfed67e67ac58f90d","modified":1709629785000},{"_id":"public/FILES/MongoDB数据库.md/image-20230712185247305.png","hash":"9cad700dfb88c574fca756dfb13471497623a3af","modified":1709629785000},{"_id":"public/FILES/docker.md/img-20230617154722.png","hash":"9a4c6ecc63e7757d7989375010c803b7d498b24d","modified":1709629785000},{"_id":"public/FILES/MongoDB数据库.md/image-20230712190603575.png","hash":"39574db2bd653156d1562149249aaf7d771099d7","modified":1709629785000},{"_id":"public/FILES/MongoDB数据库.md/image-20230712190525028.png","hash":"72340bb55f6b2409a48080a141ddf53ca1dc2af8","modified":1709629785000},{"_id":"public/FILES/docker.md/img-20230617161249.png","hash":"4ab6ab75ac239432ef3207ed21321d313ad15e8d","modified":1709629785000},{"_id":"public/FILES/docker.md/img-20230617161038.png","hash":"c6673a57131e63b86f98d97bfed67e67ac58f90d","modified":1709629785000},{"_id":"public/FILES/MongoDB数据库.md/image-20230713123234366.png","hash":"bc84357e764a0914544f9c9f31a84b4df73180b1","modified":1709629785000},{"_id":"public/FILES/MongoDB数据库.md/image-20230712190710947.png","hash":"13e3840516d2973e3e09cf5790c96ace7da39b75","modified":1709629785000},{"_id":"public/FILES/MongoDB数据库.md/image-20230712190915728.png","hash":"5b9eb7a7b0c5cdd0e3089fed33b74c8231b38e04","modified":1709629785000},{"_id":"public/FILES/MongoDB数据库.md/image-20230713145628439.png","hash":"e8ecc93bb3e3f2f07ef91a297e0436e71d858a4f","modified":1709629785000},{"_id":"public/FILES/gnome美化.md/image-20230823132850474.png","hash":"ba8b7ba9dbc40d4be91f8f136ea3f7e3d34f7f6a","modified":1709629785000},{"_id":"public/FILES/MongoDB数据库.md/image-20230713145713176.png","hash":"2dc689a74488e2442d42667b4411f03965c1d635","modified":1709629785000},{"_id":"public/FILES/gnome美化.md/image-20230823132931500.png","hash":"896cdc3bb138bcd7fca0ffc04768197bef394cd4","modified":1709629785000},{"_id":"public/FILES/gnome美化.md/image-20230823132901627.png","hash":"50a57b8c70734e4b23b7821f4a75d0c3960f31cf","modified":1709629785000},{"_id":"public/FILES/gnome美化.md/image-20230823132940387.png","hash":"fd02b63e388dd5b921cf8b1266649e1e63ae6e28","modified":1709629785000},{"_id":"public/FILES/gnome美化.md/image-20230823133022776.png","hash":"36599c6a87ba6ae0459d3744b7f74c4249d8267a","modified":1709629785000},{"_id":"public/FILES/gnome美化.md/image-20230823132949038.png","hash":"6fcbed22687aad830bb7d7a181531b0a89ef44e4","modified":1709629785000},{"_id":"public/FILES/mysql.md/img-20230617174123.png","hash":"0e7a261fe1478844628c9dbf1f745b4d37a83d70","modified":1709629785000},{"_id":"public/FILES/nginx.md/image-20230719131053170.png","hash":"dd1fb8a47625fb393e47c2d16fe0328a841248ae","modified":1709629785000},{"_id":"public/FILES/mysql.md/img-20230617174044.png","hash":"cf8326bc9fdda458be01ca9ee0c2348316ffb231","modified":1709629785000},{"_id":"public/FILES/mysql.md/img-20230617195642.png","hash":"5fcf95c3f68c7b932b8d7c7f6f6fd893b41b90dc","modified":1709629785000},{"_id":"public/FILES/mysql.md/img-20230617200903.png","hash":"f0769e98c207ea8361fe9b4f1fd35cfd9620bd1b","modified":1709629785000},{"_id":"public/FILES/nodejs更新.md/image-20230530140912644.png","hash":"7471014173b96adba3484feb811711814c4f716f","modified":1709629785000},{"_id":"public/FILES/nodejs更新.md/image-20230530142308794.png","hash":"09af17de9fedc81fe55520fa890cf6b246343062","modified":1709629785000},{"_id":"public/FILES/nodejs更新.md/image-20230530142403267.png","hash":"9013c2de5b209a0e7b82a1846dada2b2674cb9e5","modified":1709629785000},{"_id":"public/FILES/mysql.md/img-20230617200704.png","hash":"cda59550cb4a6ff558f4091fa542d62a20d4e90d","modified":1709629785000},{"_id":"public/FILES/笔记小技巧.md/image-20230721210210155.png","hash":"2efe7d57f39eeb7e6d840b988a675994906fd938","modified":1709629785000},{"_id":"public/FILES/nodejs更新.md/image-20230530142835262.png","hash":"94bd70a75c559ff7de2e6718a13d32c463fbb9e0","modified":1709629785000},{"_id":"public/FILES/springcloud.md/image-20230721172118159.png","hash":"5081bb6c2f1f43bf3c0707b94dd5ac72210e7d88","modified":1709629785000},{"_id":"public/FILES/笔记小技巧.md/image-20230721205223146.png","hash":"c2a449a4a90000b84c56d6d63893b11fb6a62143","modified":1709629785000},{"_id":"public/FILES/nodejs更新.md/image-20230530141003682.png","hash":"5e12049523adc547f5b9197392f060a948423470","modified":1709629785000},{"_id":"public/FILES/笔记小技巧.md/image-20230721210221012.png","hash":"2efe7d57f39eeb7e6d840b988a675994906fd938","modified":1709629785000},{"_id":"public/FILES/springcloud.md/image-20230721203949649.png","hash":"fdd14ff2467a032fe34fe4bd68eb43390c4aa377","modified":1709629785000},{"_id":"public/FILES/springcloud.md/image-20230721203805155.png","hash":"a944d6dcbac21ef5c4a89547dcaa0e656237ccb5","modified":1709629785000},{"_id":"public/FILES/springcloud.md/image-20230721204316658.png","hash":"970a2441d039c8d84ac5ef4ed0109bfdc5aed257","modified":1709629785000},{"_id":"public/FILES/springcloud.md/image-20230721214325200.png","hash":"1db6bb67e5ba1c7448e05a4133a00eb1e7ce92ba","modified":1709629785000},{"_id":"public/FILES/springcloud.md/image-20230721213913950.png","hash":"2d1388b82060212cfa4b00e382df867e93ea2917","modified":1709629785000},{"_id":"public/FILES/springcloud.md/image-20230721203610510.png","hash":"1af22867945f09c683ff639c1ff030d9afdb8f59","modified":1709629785000},{"_id":"public/FILES/nvm.md/img-20230617143835.png","hash":"ab7b7ed2ee0ecd49520c1de3e9bc8086c0e9bb21","modified":1709629785000},{"_id":"public/FILES/nvm.md/image-20230530151726867.png","hash":"e9f26878ac270949a79d317ac20a96775ef93e3a","modified":1709629785000},{"_id":"public/FILES/nvm.md/image-20230530151512400.png","hash":"31a8e5c8721e8f5555cb2b513debaf69aff19e7e","modified":1709629785000},{"_id":"public/FILES/nvm.md/img-20230617144018.png","hash":"318aecaa108908818d6b5f7ffcb6c675ad90111d","modified":1709629785000},{"_id":"public/FILES/vim-plug.md/img-20230618122149.png","hash":"9d6b4591be86897917b59429072fa4e1d6d5e206","modified":1709629785000},{"_id":"public/FILES/vim-plug.md/img-20230618120500.png","hash":"4ad649ef3e127193db306ebdf778221dd624c088","modified":1709629785000},{"_id":"public/FILES/网络.md/image-20230620141208760.png","hash":"71aae84bb5b59c5e4ebc1ff4267ee5423bb263f9","modified":1709629785000},{"_id":"public/FILES/网络.md/image-20230620141929709.png","hash":"4e1b6b5daf324160265e5cdb698c99673a789d40","modified":1709629785000},{"_id":"public/FILES/vim-plug.md/img-20230618120008.png","hash":"ab7123e3f27a05320820cde06fb85f5537db6be6","modified":1709629785000},{"_id":"public/FILES/网络.md/image-20230620142532074.png","hash":"c00938f23d5cdcf3e0e6f8eb82eed8c57a8f0f37","modified":1709629785000},{"_id":"public/FILES/网络.md/image-20230620142714651.png","hash":"6df531e3a55cdb8732bc30e3ba37f0a4656fb373","modified":1709629785000},{"_id":"public/FILES/小程序开发.md/image-20230629203843418.png","hash":"3b77a7103764a22ce218ac4ebb25a56eae08874d","modified":1709629785000},{"_id":"public/FILES/小程序开发.md/image-20230629202305598.png","hash":"9daee15d2824c5ca0074707d6729b8166a56c98e","modified":1709629785000},{"_id":"public/FILES/小程序开发.md/image-20230629203241718.png","hash":"1bd1cd828e2ffa3d8555ec9cdb3b7a6b1cdc2077","modified":1709629785000},{"_id":"public/FILES/小程序开发.md/image-20230629210559834.png","hash":"6ff989159f72c069f009f24444ca613553e412fc","modified":1709629785000},{"_id":"public/FILES/小程序开发.md/image-20230629210753331.png","hash":"62b5bd68f5c87536ca83649dcc7979cd14e5635a","modified":1709629785000},{"_id":"public/FILES/小程序开发.md/image-20230629210334688.png","hash":"19cdec311b08d58a6e04ab3462a5eed59604e82d","modified":1709629785000},{"_id":"public/images/404.png","hash":"c3ceaa7f2cc6cfc73773d44afd00172e388e1036","modified":1709629785000},{"_id":"public/FILES/小程序开发.md/image-20230629211438057.png","hash":"bdbec25f2eb6410d4d80c1edef08a3a5313d6cd7","modified":1709629785000},{"_id":"public/images/docker.png","hash":"841f1dade5e112fe545191a02a12fac5c30f0645","modified":1709629785000},{"_id":"public/html/daynight/index.html","hash":"365bf132119f1d06b3e26dfc6a0c529c2b26a6de","modified":1709629785000},{"_id":"public/images/ufw.png","hash":"11edc4cdc9d53e606cd09eb06ff0a3a59bf6c00e","modified":1709629785000},{"_id":"public/FILES/go-wr.md/008bcb5f6103455691ff3e79c29474ca.png","hash":"a9bc6202ed5d78688b360447da56b99575e15d65","modified":1709629785000},{"_id":"public/FILES/go-wr.md/21784585a070444b885756e66556e4ed.png","hash":"08ce3c37e4c5758d0f2321e854dab46b0217e884","modified":1709629785000},{"_id":"public/FILES/docker.md/img-20230617154328.png","hash":"2eb8644190411dce30ffa00adb17808077532734","modified":1709629785000},{"_id":"public/js/search/local-search.js","hash":"8509cbd954ee9e099dcfbbfdafba70893a56e9ae","modified":1709629785000},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1709629785000},{"_id":"public/js/utils.js","hash":"aaaedc207440095da1ffabcad870fc2641befb0e","modified":1709629785000},{"_id":"public/js/search/algolia.js","hash":"fd86281d4f0f99ce173e49c1a0df3507fe268d37","modified":1709629785000},{"_id":"public/js/main.js","hash":"0227b5bd233a3c66582e0ee820cdb353ce52ece1","modified":1709629785000},{"_id":"public/css/index.css","hash":"edb5ba979ebaddeef395b97c2623cb13e30a4a51","modified":1709629785000},{"_id":"public/js/tw_cn.js","hash":"42b106354d72a0ea1fe62587b313a5b7de3cc393","modified":1709629785000},{"_id":"public/FILES/gnome美化.md/image-20230823132959336.png","hash":"14a375595ffc5b45ce3b0b81391649ca50183359","modified":1709629785000},{"_id":"public/FILES/nextJS性能优化.md/2abf157ef8fd4b60b26dc45d24273dbbtplv-k3u1fbpfcp-zoom-in-crop-mark4536000.webp","hash":"322c9fa89e22433971f5788ba211ebe99e0ad8a6","modified":1709629785000},{"_id":"public/FILES/gnome美化.md/image-20230823133008705.png","hash":"8530970544bc7bca31e73565b7e1b99e4bb6e005","modified":1709629785000},{"_id":"public/FILES/mysql.md/img-20230617180151.png","hash":"7bbcf0a2794e37c045621b32d7d89e275714e68f","modified":1709629785000},{"_id":"public/FILES/mysql.md/img-20230617201511.png","hash":"bee77b5aa8157a85dc130069ba19caaac2533c13","modified":1709629785000},{"_id":"public/FILES/mysql.md/img-20230617195454.png","hash":"b4fd18c112bf83913867537e73cb8b35454db28e","modified":1709629785000},{"_id":"public/FILES/mysql.md/img-20230617201528.png","hash":"bee77b5aa8157a85dc130069ba19caaac2533c13","modified":1709629785000},{"_id":"public/FILES/springcloud.md/image-20230722120734690.png","hash":"768e7c7ddf8c291fe115d34182dbad2d1127a426","modified":1709629785000},{"_id":"public/FILES/vim-plug.md/img-20230618115047.png","hash":"0701b03d42cdecd5bf8306df08c5d1cfc7d96f9c","modified":1709629785000},{"_id":"public/images/background.png","hash":"cfdb64b196b7d3f3082325f9d297cc9ddc704d36","modified":1709629785000},{"_id":"public/FILES/MongoDB数据库.md/image-20230713130049546.png","hash":"9d1d6070e7c1cedc59965782806e6cb5c409918d","modified":1709629785000},{"_id":"public/FILES/mysql.md/img-20230617183749.png","hash":"722c38f9cc7732d8a27e4d59816822fc47b6e9d1","modified":1709629785000},{"_id":"public/FILES/mysql.md/img-20230617192817.png","hash":"7905a9c81838be0c7a464425c4d76824827af68e","modified":1709629785000},{"_id":"public/FILES/mysql.md/img-20230617200336.png","hash":"e27a3280a2242dda973c15a676763f7a024f3294","modified":1709629785000},{"_id":"public/FILES/springcloud.md/image-20230721192248994.png","hash":"3803faf9128d4000493c581ef79b086a625a9592","modified":1709629785000},{"_id":"public/images/mysql.png","hash":"649ce9abe2bfa9086afc7bd1ab69f59f8608f9bf","modified":1709629785000},{"_id":"public/FILES/gnome美化.md/image-20230823132920231.png","hash":"d48f20ba66299ef2d7b92d4709340a22b5358c4c","modified":1709629785000},{"_id":"public/images/dock.png","hash":"8311fec1752b07cf9d55c44e3983746bb09cd8ce","modified":1709629785000},{"_id":"public/FILES/MongoDB数据库.md/image-20230713142753307.png","hash":"8bbe612ad532ff7019bdaf80b187e84c1323b97b","modified":1709629785000},{"_id":"public/images/top.jpg","hash":"e624aa5f96045dbd36bbc49ffacf9054c488c6f4","modified":1709629785000},{"_id":"public/images/home.jpg","hash":"0810620b87a9ad2260d52164b8e780d57a4874ce","modified":1709629785000},{"_id":"source/_posts/发布文档.md","hash":"e862649eda1cf3730293ae029588897f18d299b3","modified":1709631060677}],"Category":[{"name":"其他","_id":"clte5fmob00041kv29c7l9xud"},{"name":"后端","_id":"clte5fmoe000c1kv27wyz7dh2"},{"name":"前端","_id":"clte5fmoi000p1kv29thoacs5"},{"name":"linux","_id":"clte5fmoj000u1kv29z6ieqm2"},{"name":"数据库","_id":"clte5fmoj000y1kv25vfha8ba"},{"name":"计算机","_id":"clte5fmoz002z1kv2bxzb26c2"},{"name":"SaaS前端","_id":"clte672pf0001okv2e2it5h4g"}],"Data":[{"_id":"link","data":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}],"Page":[{"title":"关于","date":"2023-06-18T12:56:14.000Z","aside":false,"_content":"\n# 关于项目\n\n这是一个合肥零碳公司内部使用的网址导航网站，方便您的使用，您也可以提供您想要链接的网址来丰富这里的内容。\n\n\n网站前台静态页面采用 Hexo + WebStack 项目源码。\n\n如果对本项目有任何建议及需求都可以联系产品平台部。\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2023-06-18 20:56:14\naside: false\n---\n\n# 关于项目\n\n这是一个合肥零碳公司内部使用的网址导航网站，方便您的使用，您也可以提供您想要链接的网址来丰富这里的内容。\n\n\n网站前台静态页面采用 Hexo + WebStack 项目源码。\n\n如果对本项目有任何建议及需求都可以联系产品平台部。\n","updated":"2024-03-05T09:21:51.447Z","path":"about/index.html","_id":"clte5fmo500001kv258ql0c8k","comments":1,"layout":"page","content":"<h1 id=\"关于项目\"><a href=\"#关于项目\" class=\"headerlink\" title=\"关于项目\"></a>关于项目</h1><p>这是一个合肥零碳公司内部使用的网址导航网站，方便您的使用，您也可以提供您想要链接的网址来丰富这里的内容。</p>\n<p>网站前台静态页面采用 Hexo + WebStack 项目源码。</p>\n<p>如果对本项目有任何建议及需求都可以联系产品平台部。</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover":"./images/top.jpg","cover_type":"img","excerpt":"","more":"<h1 id=\"关于项目\"><a href=\"#关于项目\" class=\"headerlink\" title=\"关于项目\"></a>关于项目</h1><p>这是一个合肥零碳公司内部使用的网址导航网站，方便您的使用，您也可以提供您想要链接的网址来丰富这里的内容。</p>\n<p>网站前台静态页面采用 Hexo + WebStack 项目源码。</p>\n<p>如果对本项目有任何建议及需求都可以联系产品平台部。</p>\n"},{"title":"分类","date":"2023-06-18T12:00:52.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2023-06-18 20:00:52\ntype: \"categories\"\n---\n","updated":"2024-03-05T07:14:06.320Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clte5fmo900021kv2cng624vn","content":"","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover":"./images/top.jpg","cover_type":"img","excerpt":"","more":""},{"title":"标签","date":"2023-06-18T11:58:53.000Z","updated":"2024-03-05T07:14:06.381Z","type":"tags","orderby":"random","order":1,"_content":"\n","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2023-06-18 19:58:53\nupdated: \ntype: \"tags\"\norderby: random\norder: 1\n---\n\n","path":"tags/index.html","comments":1,"layout":"page","_id":"clte5fmoc00061kv24nnhhikp","content":"","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover":"./images/top.jpg","cover_type":"img","excerpt":"","more":""},{"title":"源码分享","date":"2023-06-18T05:41:10.000Z","updated":"2024-03-05T07:14:06.321Z","_content":"\n<div class=\"gallery-group-main\">\n{% galleryGroup '动画' '日夜切换动画' '/html/daynight/index.html' https://s1.ax1x.com/2023/06/19/pC3cD61.png %}\n</div>\n\n","source":"code/index.md","raw":"---\ntitle: 源码分享\ndate: 2023-06-18 13:41:10\nupdated:\n---\n\n<div class=\"gallery-group-main\">\n{% galleryGroup '动画' '日夜切换动画' '/html/daynight/index.html' https://s1.ax1x.com/2023/06/19/pC3cD61.png %}\n</div>\n\n","path":"code/index.html","comments":1,"layout":"page","_id":"clte5fmod00081kv29iff74rg","content":"<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://s1.ax1x.com/2023/06/19/pC3cD61.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">动画</div>\n  <p>日夜切换动画</p>\n  <a href='/lingtan/html/daynight/index.html'></a>\n  </figcaption>\n  </figure>\n  \n</div>\n\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover":"./images/top.jpg","cover_type":"img","excerpt":"","more":"<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://s1.ax1x.com/2023/06/19/pC3cD61.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">动画</div>\n  <p>日夜切换动画</p>\n  <a href='/lingtan/html/daynight/index.html'></a>\n  </figcaption>\n  </figure>\n  \n</div>\n\n"},{"title":"图床","date":"2023-06-18T06:30:04.000Z","_content":"<div class=\"gallery-group-main\">\n{% galleryGroup '壁纸' '收藏的一些壁纸' '/img-storage/wallpaper' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}\n</div>\n\n","source":"img-storage/index.md","raw":"---\ntitle: 图床\ndate: 2023-06-18 14:30:04\n---\n<div class=\"gallery-group-main\">\n{% galleryGroup '壁纸' '收藏的一些壁纸' '/img-storage/wallpaper' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}\n</div>\n\n","updated":"2024-03-05T07:14:06.377Z","path":"img-storage/index.html","comments":1,"layout":"page","_id":"clte5fmoe000a1kv20upsc8jk","content":"<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">壁纸</div>\n  <p>收藏的一些壁纸</p>\n  <a href='/lingtan/img-storage/wallpaper'></a>\n  </figcaption>\n  </figure>\n  \n</div>\n\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover":"./images/top.jpg","cover_type":"img","excerpt":"","more":"<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">壁纸</div>\n  <p>收藏的一些壁纸</p>\n  <a href='/lingtan/img-storage/wallpaper'></a>\n  </figcaption>\n  </figure>\n  \n</div>\n\n"},{"title":"链接","date":"2023-06-18T05:41:10.000Z","type":"link","_content":"","source":"link/index.md","raw":"---\ntitle: 链接\ndate: 2023-06-18 13:41:10\ntype: \"link\"\n---\n","updated":"2024-03-05T07:14:06.377Z","path":"link/index.html","comments":1,"layout":"page","_id":"clte5fmof000f1kv22kerhcn3","content":"","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover":"./images/top.jpg","cover_type":"img","excerpt":"","more":""},{"title":"壁纸","date":"2024-03-05T07:14:06.377Z","update":null,"_content":"\n{% gallery %}\n![](https://hd.wallpaperswide.com/thumbs/travel_to_norway_s_lofoten_islands-t2.jpg)\n![](https://hd.wallpaperswide.com/thumbs/romantic_spring_2-t2.jpg)\n![](https://hd.wallpaperswide.com/thumbs/early_morning_in_aosta_valley-t2.jpg)\n![](https://s1.ax1x.com/2023/06/19/pC306PI.png)\n![](https://s1.ax1x.com/2023/06/19/pC30gRP.png)\n![](https://s1.ax1x.com/2023/06/19/pC30WM8.png)\n![](https://s1.ax1x.com/2023/06/19/pC305ZQ.png)\n![](https://s1.ax1x.com/2022/11/28/zUTGSU.jpg)\n{% endgallery %}","source":"img-storage/wallpaper.md","raw":"---\ntitle: 壁纸\ndate: \nupdate: \n---\n\n{% gallery %}\n![](https://hd.wallpaperswide.com/thumbs/travel_to_norway_s_lofoten_islands-t2.jpg)\n![](https://hd.wallpaperswide.com/thumbs/romantic_spring_2-t2.jpg)\n![](https://hd.wallpaperswide.com/thumbs/early_morning_in_aosta_valley-t2.jpg)\n![](https://s1.ax1x.com/2023/06/19/pC306PI.png)\n![](https://s1.ax1x.com/2023/06/19/pC30gRP.png)\n![](https://s1.ax1x.com/2023/06/19/pC30WM8.png)\n![](https://s1.ax1x.com/2023/06/19/pC305ZQ.png)\n![](https://s1.ax1x.com/2022/11/28/zUTGSU.jpg)\n{% endgallery %}","updated":"2024-03-05T07:14:06.377Z","path":"img-storage/wallpaper.html","comments":1,"layout":"page","_id":"clte5fmog000h1kv2f7764pxc","content":"<div class=\"gallery\">\n    <div class=\"fj-gallery  data\" data-rowHeight=\"220\" data-limit=\"10\">\n    <span class=\"gallery-data\">[{\"url\":\"https://hd.wallpaperswide.com/thumbs/travel_to_norway_s_lofoten_islands-t2.jpg\",\"alt\":\"\"},{\"url\":\"https://hd.wallpaperswide.com/thumbs/romantic_spring_2-t2.jpg\",\"alt\":\"\"},{\"url\":\"https://hd.wallpaperswide.com/thumbs/early_morning_in_aosta_valley-t2.jpg\",\"alt\":\"\"},{\"url\":\"https://s1.ax1x.com/2023/06/19/pC306PI.png\",\"alt\":\"\"},{\"url\":\"https://s1.ax1x.com/2023/06/19/pC30gRP.png\",\"alt\":\"\"},{\"url\":\"https://s1.ax1x.com/2023/06/19/pC30WM8.png\",\"alt\":\"\"},{\"url\":\"https://s1.ax1x.com/2023/06/19/pC305ZQ.png\",\"alt\":\"\"},{\"url\":\"https://s1.ax1x.com/2022/11/28/zUTGSU.jpg\",\"alt\":\"\"}]</span>\n    </div>\n    <button class=\"gallery-load-more\"><span>加载更多</span><i class=\"fa-solid fa-arrow-down\"></i></button>\n    </div>","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover":"./images/top.jpg","cover_type":"img","excerpt":"","more":"<div class=\"gallery\">\n    <div class=\"fj-gallery  data\" data-rowHeight=\"220\" data-limit=\"10\">\n    <span class=\"gallery-data\">[{\"url\":\"https://hd.wallpaperswide.com/thumbs/travel_to_norway_s_lofoten_islands-t2.jpg\",\"alt\":\"\"},{\"url\":\"https://hd.wallpaperswide.com/thumbs/romantic_spring_2-t2.jpg\",\"alt\":\"\"},{\"url\":\"https://hd.wallpaperswide.com/thumbs/early_morning_in_aosta_valley-t2.jpg\",\"alt\":\"\"},{\"url\":\"https://s1.ax1x.com/2023/06/19/pC306PI.png\",\"alt\":\"\"},{\"url\":\"https://s1.ax1x.com/2023/06/19/pC30gRP.png\",\"alt\":\"\"},{\"url\":\"https://s1.ax1x.com/2023/06/19/pC30WM8.png\",\"alt\":\"\"},{\"url\":\"https://s1.ax1x.com/2023/06/19/pC305ZQ.png\",\"alt\":\"\"},{\"url\":\"https://s1.ax1x.com/2022/11/28/zUTGSU.jpg\",\"alt\":\"\"}]</span>\n    </div>\n    <button class=\"gallery-load-more\"><span>加载更多</span><i class=\"fa-solid fa-arrow-down\"></i></button>\n    </div>"},{"date":"2023-06-18T13:13:36.000Z","aside":false,"top_img":false,"_content":"音乐页面待开发...\n","source":"music/index.md","raw":"---\ndate: 2023-06-18 21:13:36\naside: false\ntop_img: false \n---\n音乐页面待开发...\n","updated":"2024-03-05T07:14:06.381Z","path":"music/index.html","title":"","comments":1,"layout":"page","_id":"clte5fmoh000m1kv20rwrde93","content":"<p>音乐页面待开发…</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover":"./images/top.jpg","cover_type":"img","excerpt":"","more":"<p>音乐页面待开发…</p>\n"},{"date":"2023-06-18T13:13:43.000Z","top_img":false,"aside":false,"_content":"\n视频页面待开发...\n","source":"video/index.md","raw":"---\ndate: 2023-06-18 21:13:43\ntop_img: false \naside: false\n---\n\n视频页面待开发...\n","updated":"2024-03-05T07:14:06.381Z","path":"video/index.html","title":"","comments":1,"layout":"page","_id":"clte5fmoi000o1kv227hx09d4","content":"<p>视频页面待开发…</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover":"./images/top.jpg","cover_type":"img","excerpt":"","more":"<p>视频页面待开发…</p>\n"}],"Post":[{"title":"Dock 栏","date":"2024-03-05T07:14:41.855Z","updated":"2024-03-05T07:14:06.291Z","cover":"./images/dock.png","_content":"# Dock栏\n\n仿苹果设计\n\n```sh\nsudo apt-get install plank\n```\n\n安装完毕！\n\n打开 plank 应用，即可应用\n\n## 技巧\n\n右键： 打开设置\n\n","source":"_posts/Dock栏.md","raw":"---\ntitle: Dock 栏\ndate: \nupdated:\ntags: 任务栏美化\ncategories: 其他\ncover: ./images/dock.png\n---\n# Dock栏\n\n仿苹果设计\n\n```sh\nsudo apt-get install plank\n```\n\n安装完毕！\n\n打开 plank 应用，即可应用\n\n## 技巧\n\n右键： 打开设置\n\n","slug":"Dock栏","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmo700011kv229iu5zu3","content":"<h1 id=\"Dock栏\"><a href=\"#Dock栏\" class=\"headerlink\" title=\"Dock栏\"></a>Dock栏</h1><p>仿苹果设计</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install plank</span><br></pre></td></tr></table></figure>\n\n<p>安装完毕！</p>\n<p>打开 plank 应用，即可应用</p>\n<h2 id=\"技巧\"><a href=\"#技巧\" class=\"headerlink\" title=\"技巧\"></a>技巧</h2><p>右键： 打开设置</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"Dock栏\"><a href=\"#Dock栏\" class=\"headerlink\" title=\"Dock栏\"></a>Dock栏</h1><p>仿苹果设计</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install plank</span><br></pre></td></tr></table></figure>\n\n<p>安装完毕！</p>\n<p>打开 plank 应用，即可应用</p>\n<h2 id=\"技巧\"><a href=\"#技巧\" class=\"headerlink\" title=\"技巧\"></a>技巧</h2><p>右键： 打开设置</p>\n"},{"title":"Go 初学者","date":"2024-03-05T07:14:41.883Z","updated":"2024-03-05T07:14:06.291Z","cover":"https://s1.ax1x.com/2023/06/22/pCJ3oEq.png","_content":"\n# 初学入门\n\n出版书籍《Go微服务实战》的配套示例代码：[ScottAI/book: 书中示例 (github.com)](https://github.com/ScottAI/book)\n\n## IDEA 创建项目\n\n1. 打开 IDEA\n2. 新建项目\n3. 输入名称-另存为\n4. 语言选择 go 【没有点击右边的 + 号】\n5. idea 会自动读取环境变量，找到 go 开发环境\n\n![image-20230823130116425](../FILES/Go入门.md/image-20230823130116425.png)\n\n1. 首先创建一个空目录 helloworld\n2. 创建 go 取名为 hello.go\n\n```go\n// main 包是核心入口【可执行程序】\npackage main\n\n// 导包: fmt 是一个标准包\nimport \"fmt\"\n\n// main() 入口函数\nfunc main() {\n  // 首字母大写: 包外可见【java 中非私有】\n\tfmt.Println(\"Hello World!\")\n}\n```\n\n3. 点击 ▶ 运行\n\n![image-20230823130131910](../FILES/Go入门.md/image-20230823130131910.png)\n\n<b style=\"color: red\">注意: </b>\n\n- 导入的包必须使用，否则编译不通过\n\n- 声明的变量必须使用，否则编译不通过\n\n## http 服务器\n\n创建一个新的 go 文件\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"net/http\"\n)\n\nfunc handle(w http.ResponseWriter, r *http.Request) {\n\ts := \"你好,开发者\"\n\t_, err := fmt.Fprintf(w, \"%s\", s)\n\tif err != nil {\n\t\tlog.Printf(\"出现错误! err: %s\", err)\n\t}\n\tlog.Printf(\"访问成功!s=%s\", s)\n}\n\nfunc main() {\n\tfmt.Printf(\"服务启动...\")\n\t// 当访问跟路径时,交给 handle 方法\n\thttp.HandleFunc(\"/\", handle)\n\tif err := http.ListenAndServe(\"localhost:8063\", nil); err != nil {\n\t\tlog.Fatal(\"http 启动失败:\", err)\n\t}\n}\n```\n\n在 IDEA 中运行\n\n![image-20230823130146688](../FILES/Go入门.md/image-20230823130146688.png)\n\n然后打卡浏览器，输入监听的地址：`http://127.0.0.1:8063/`\n\n![image-20230823130159867](../FILES/Go入门.md/image-20230823130159867.png)\n\n## 随机值的应用\n\n```go\nf := rand.Float64() * 100\nfmt.Printf(\"随机值: %.2f\", f)\n```\n\n![image-20230823130210856](../FILES/Go入门.md/image-20230823130210856.png)\n\n","source":"_posts/Go入门.md","raw":"---\ntitle: Go 初学者\ndate: \nupdated:\ntags: go\ncategories: 后端\ncover: https://s1.ax1x.com/2023/06/22/pCJ3oEq.png \n---\n\n# 初学入门\n\n出版书籍《Go微服务实战》的配套示例代码：[ScottAI/book: 书中示例 (github.com)](https://github.com/ScottAI/book)\n\n## IDEA 创建项目\n\n1. 打开 IDEA\n2. 新建项目\n3. 输入名称-另存为\n4. 语言选择 go 【没有点击右边的 + 号】\n5. idea 会自动读取环境变量，找到 go 开发环境\n\n![image-20230823130116425](../FILES/Go入门.md/image-20230823130116425.png)\n\n1. 首先创建一个空目录 helloworld\n2. 创建 go 取名为 hello.go\n\n```go\n// main 包是核心入口【可执行程序】\npackage main\n\n// 导包: fmt 是一个标准包\nimport \"fmt\"\n\n// main() 入口函数\nfunc main() {\n  // 首字母大写: 包外可见【java 中非私有】\n\tfmt.Println(\"Hello World!\")\n}\n```\n\n3. 点击 ▶ 运行\n\n![image-20230823130131910](../FILES/Go入门.md/image-20230823130131910.png)\n\n<b style=\"color: red\">注意: </b>\n\n- 导入的包必须使用，否则编译不通过\n\n- 声明的变量必须使用，否则编译不通过\n\n## http 服务器\n\n创建一个新的 go 文件\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"net/http\"\n)\n\nfunc handle(w http.ResponseWriter, r *http.Request) {\n\ts := \"你好,开发者\"\n\t_, err := fmt.Fprintf(w, \"%s\", s)\n\tif err != nil {\n\t\tlog.Printf(\"出现错误! err: %s\", err)\n\t}\n\tlog.Printf(\"访问成功!s=%s\", s)\n}\n\nfunc main() {\n\tfmt.Printf(\"服务启动...\")\n\t// 当访问跟路径时,交给 handle 方法\n\thttp.HandleFunc(\"/\", handle)\n\tif err := http.ListenAndServe(\"localhost:8063\", nil); err != nil {\n\t\tlog.Fatal(\"http 启动失败:\", err)\n\t}\n}\n```\n\n在 IDEA 中运行\n\n![image-20230823130146688](../FILES/Go入门.md/image-20230823130146688.png)\n\n然后打卡浏览器，输入监听的地址：`http://127.0.0.1:8063/`\n\n![image-20230823130159867](../FILES/Go入门.md/image-20230823130159867.png)\n\n## 随机值的应用\n\n```go\nf := rand.Float64() * 100\nfmt.Printf(\"随机值: %.2f\", f)\n```\n\n![image-20230823130210856](../FILES/Go入门.md/image-20230823130210856.png)\n\n","slug":"Go入门","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmo900031kv241mhch10","content":"<h1 id=\"初学入门\"><a href=\"#初学入门\" class=\"headerlink\" title=\"初学入门\"></a>初学入门</h1><p>出版书籍《Go微服务实战》的配套示例代码：<a href=\"https://github.com/ScottAI/book\">ScottAI&#x2F;book: 书中示例 (github.com)</a></p>\n<h2 id=\"IDEA-创建项目\"><a href=\"#IDEA-创建项目\" class=\"headerlink\" title=\"IDEA 创建项目\"></a>IDEA 创建项目</h2><ol>\n<li>打开 IDEA</li>\n<li>新建项目</li>\n<li>输入名称-另存为</li>\n<li>语言选择 go 【没有点击右边的 + 号】</li>\n<li>idea 会自动读取环境变量，找到 go 开发环境</li>\n</ol>\n<p><img src=\"/lingtan/../FILES/Go%E5%85%A5%E9%97%A8.md/image-20230823130116425.png\" alt=\"image-20230823130116425\"></p>\n<ol>\n<li>首先创建一个空目录 helloworld</li>\n<li>创建 go 取名为 hello.go</li>\n</ol>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// main 包是核心入口【可执行程序】</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 导包: fmt 是一个标准包</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main() 入口函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 首字母大写: 包外可见【java 中非私有】</span></span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;Hello World!&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>点击 ▶ 运行</li>\n</ol>\n<p><img src=\"/lingtan/../FILES/Go%E5%85%A5%E9%97%A8.md/image-20230823130131910.png\" alt=\"image-20230823130131910\"></p>\n<p><b style=\"color: red\">注意: </b></p>\n<ul>\n<li><p>导入的包必须使用，否则编译不通过</p>\n</li>\n<li><p>声明的变量必须使用，否则编译不通过</p>\n</li>\n</ul>\n<h2 id=\"http-服务器\"><a href=\"#http-服务器\" class=\"headerlink\" title=\"http 服务器\"></a>http 服务器</h2><p>创建一个新的 go 文件</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;log&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;net/http&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">handle</span><span class=\"params\">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class=\"line\">\ts := <span class=\"string\">&quot;你好,开发者&quot;</span></span><br><span class=\"line\">\t_, err := fmt.Fprintf(w, <span class=\"string\">&quot;%s&quot;</span>, s)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tlog.Printf(<span class=\"string\">&quot;出现错误! err: %s&quot;</span>, err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tlog.Printf(<span class=\"string\">&quot;访问成功!s=%s&quot;</span>, s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">&quot;服务启动...&quot;</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 当访问跟路径时,交给 handle 方法</span></span><br><span class=\"line\">\thttp.HandleFunc(<span class=\"string\">&quot;/&quot;</span>, handle)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err := http.ListenAndServe(<span class=\"string\">&quot;localhost:8063&quot;</span>, <span class=\"literal\">nil</span>); err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tlog.Fatal(<span class=\"string\">&quot;http 启动失败:&quot;</span>, err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在 IDEA 中运行</p>\n<p><img src=\"/lingtan/../FILES/Go%E5%85%A5%E9%97%A8.md/image-20230823130146688.png\" alt=\"image-20230823130146688\"></p>\n<p>然后打卡浏览器，输入监听的地址：<code>http://127.0.0.1:8063/</code></p>\n<p><img src=\"/lingtan/../FILES/Go%E5%85%A5%E9%97%A8.md/image-20230823130159867.png\" alt=\"image-20230823130159867\"></p>\n<h2 id=\"随机值的应用\"><a href=\"#随机值的应用\" class=\"headerlink\" title=\"随机值的应用\"></a>随机值的应用</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f := rand.Float64() * <span class=\"number\">100</span></span><br><span class=\"line\">fmt.Printf(<span class=\"string\">&quot;随机值: %.2f&quot;</span>, f)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/Go%E5%85%A5%E9%97%A8.md/image-20230823130210856.png\" alt=\"image-20230823130210856\"></p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"初学入门\"><a href=\"#初学入门\" class=\"headerlink\" title=\"初学入门\"></a>初学入门</h1><p>出版书籍《Go微服务实战》的配套示例代码：<a href=\"https://github.com/ScottAI/book\">ScottAI&#x2F;book: 书中示例 (github.com)</a></p>\n<h2 id=\"IDEA-创建项目\"><a href=\"#IDEA-创建项目\" class=\"headerlink\" title=\"IDEA 创建项目\"></a>IDEA 创建项目</h2><ol>\n<li>打开 IDEA</li>\n<li>新建项目</li>\n<li>输入名称-另存为</li>\n<li>语言选择 go 【没有点击右边的 + 号】</li>\n<li>idea 会自动读取环境变量，找到 go 开发环境</li>\n</ol>\n<p><img src=\"/lingtan/../FILES/Go%E5%85%A5%E9%97%A8.md/image-20230823130116425.png\" alt=\"image-20230823130116425\"></p>\n<ol>\n<li>首先创建一个空目录 helloworld</li>\n<li>创建 go 取名为 hello.go</li>\n</ol>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// main 包是核心入口【可执行程序】</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 导包: fmt 是一个标准包</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main() 入口函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 首字母大写: 包外可见【java 中非私有】</span></span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;Hello World!&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>点击 ▶ 运行</li>\n</ol>\n<p><img src=\"/lingtan/../FILES/Go%E5%85%A5%E9%97%A8.md/image-20230823130131910.png\" alt=\"image-20230823130131910\"></p>\n<p><b style=\"color: red\">注意: </b></p>\n<ul>\n<li><p>导入的包必须使用，否则编译不通过</p>\n</li>\n<li><p>声明的变量必须使用，否则编译不通过</p>\n</li>\n</ul>\n<h2 id=\"http-服务器\"><a href=\"#http-服务器\" class=\"headerlink\" title=\"http 服务器\"></a>http 服务器</h2><p>创建一个新的 go 文件</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;log&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;net/http&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">handle</span><span class=\"params\">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class=\"line\">\ts := <span class=\"string\">&quot;你好,开发者&quot;</span></span><br><span class=\"line\">\t_, err := fmt.Fprintf(w, <span class=\"string\">&quot;%s&quot;</span>, s)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tlog.Printf(<span class=\"string\">&quot;出现错误! err: %s&quot;</span>, err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tlog.Printf(<span class=\"string\">&quot;访问成功!s=%s&quot;</span>, s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">&quot;服务启动...&quot;</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 当访问跟路径时,交给 handle 方法</span></span><br><span class=\"line\">\thttp.HandleFunc(<span class=\"string\">&quot;/&quot;</span>, handle)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err := http.ListenAndServe(<span class=\"string\">&quot;localhost:8063&quot;</span>, <span class=\"literal\">nil</span>); err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tlog.Fatal(<span class=\"string\">&quot;http 启动失败:&quot;</span>, err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在 IDEA 中运行</p>\n<p><img src=\"/lingtan/../FILES/Go%E5%85%A5%E9%97%A8.md/image-20230823130146688.png\" alt=\"image-20230823130146688\"></p>\n<p>然后打卡浏览器，输入监听的地址：<code>http://127.0.0.1:8063/</code></p>\n<p><img src=\"/lingtan/../FILES/Go%E5%85%A5%E9%97%A8.md/image-20230823130159867.png\" alt=\"image-20230823130159867\"></p>\n<h2 id=\"随机值的应用\"><a href=\"#随机值的应用\" class=\"headerlink\" title=\"随机值的应用\"></a>随机值的应用</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f := rand.Float64() * <span class=\"number\">100</span></span><br><span class=\"line\">fmt.Printf(<span class=\"string\">&quot;随机值: %.2f&quot;</span>, f)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/Go%E5%85%A5%E9%97%A8.md/image-20230823130210856.png\" alt=\"image-20230823130210856\"></p>\n"},{"title":"Go 语言基础入门","date":"2024-03-05T07:14:41.883Z","updated":"2024-03-05T07:14:06.291Z","cover":"https://s1.ax1x.com/2023/06/22/pCJ3oEq.png","_content":"\n# Go 语言基础\n\n## 程序基础\n\n1. 了解常量和遍历【const var 关键词】\n\n2. `:=` 初始化以及赋值\n\n   ```go\n   // 对变量 num 初始化,并赋值为 12\n   // 之后想修改值不能用 := ,要用 =\n   num := 12; \n   ```\n\n3. for 循环关键字的使用【源码: ==ScoteAI-book/ch01/1.4/loop.go==】\n\n4. 指针的使用 【源码: ==ScottAI-book/ch01/1.2/pointer/main.go==】\n\n5. net/http 的使用 【源码: ==ScottAI-book/ch01/1.1/helloserver/main.go==】\n\n6. 垃圾回收机制——三色标记法\n\n   1. 白色集合：可能会被垃圾回收\n   2. 黑色集合：保证存活\n   3. 灰色集合：过渡用的\n\n   ![image-20230823130355000](../FILES/Go语言基础.md/image-20230823130355000.png)\n\n7. 包及作用域\n\n   ```go\n   // 调用其他包的变量\n   package1.num1\n   package2.num1\n   ```\n\n\n## 数据类型\n\n1. 基本数据类型\n   1. 整型\n   2. 浮点型\n   3. 复数\n   4. 布尔类型\n   5. 常量\n   6. 字符串（可以看作复合数据类型）\n2. 复合数据类型\n   1. 结构体 （Struct）\n   2. 数组\n\n3. 引用数据类型\n   1. 切片（slice）：切片是对数组的引用，它提供了动态大小、灵活的操作和便捷的切片操作。切片在Go语言中被广泛用于处理和操作数据集合。\n   2. 映射（map）：映射是一种无序的键值对集合，也被称为字典或哈希表。它提供了快速的查找和检索操作，用于存储和管理键值对数据。\n   3. 通道（channel）：通道是用于在Goroutine之间进行通信和同步的管道。它允许Goroutine之间发送和接收数据，并确保并发安全。\n   4. 函数（function）：函数是一种引用类型，可以作为值传递给其他函数，也可以作为返回值。这使得在Go语言中可以灵活地使用函数来实现高阶函数和函数式编程的特性。\n\n4. 接口数据类型\n5. 格式化说明符\n   1.  <span style=\"color: blue\">%d</span> : 用于格式化整型\n   2.  <span style=\"color: blue\">%x|%X</span>：用于十六制数字\n   3.  <span style=\"color: blue\">%0d</span>：用于规定输出定长的整型\n   4.  <span style=\"color: blue\">%n.mg</span>：用户表示数字n，精确到小数点后 m 位。除了 g ，还有使用 e 和 f\n\n> <span style=\"color: red\">注意：</span>\n>\n> Go语言中的**指针（pointer）**也是一种==引用类型==，但它在语义上<span style=\"text-decoration: underline\">更接近于基本类型</span>。指针可以用于间接引用和修改变量的内存地址，但与切片、映射和通道等引用类型有所不同。\n\n<strong style=\"color: red\"> 小提示：</strong> 引用类型引用传递，复合类型值传递！\n\n|      类型      | 长度 | 默认值 |   说明   |\n| :------------: | :--: | :----: | :------: |\n|      bool      |  1   | false  |          |\n|      byte      |  1   |   0    |  uint8   |\n|      rune      |  4   |   0    |  uint32  |\n|   int、uint    | 4或8 |   0    |  32或64  |\n|  int8、uint8   |  1   |   0    |          |\n| uint16、uint16 |  2   |   0    |          |\n| int32、uint32  |  4   |   0    |          |\n| int64、uint64  |  8   |   0    |          |\n|    float32     |  4   |  0.0   |          |\n|    float64     |  8   |  0.0   |          |\n|   complex64    |  8   |        |          |\n|   complex128   |  16  |        |          |\n|    uSintptr    | 4或8 |        | 指针类型 |\n\n## 字符串与复合数据类型\n\n> <span style=\"color: red\">注意：</span> Go 语言中没有对象和类的概念，封装思想都是通过复合类型来实现，比如结构体\n\n1. 数组\n\n   ```go\n   // 初始化数组\n   var a [3]int\n   var b [3]int = [3]int{1,2,3}\n   c := [...]int{1,2,3,4}\n   // 新语法（记一下）index : value\n   d := [...]int{4,4:1,1:2} // 等同于 [4 2 0 0 1]\n   ```\n\n2. 切片 (slice)：相当于 python 切片\n\n   1. 创建切片：使用 make\n\n      ```go\n      s := make([]int,10)\n      ```\n\n   2. 如果要增加元素，建议采取 `append` 方法\n\n   3. 如果要复制，采取 `copy` 方法【必须是切片，数组复制：`a[:]`】\n\n   4. 多维切片可以通过嵌套切片来创建\n\n      ```go\n      // 创建一个二维切片\n      matrix := [][]int{\n        {1, 2, 3},\n        {4, 5, 6},\n        {7, 8, 9},\n      }\n      ```\n    5. 在删除之前，将要删除元素置为 `nil` ，否则垃圾回收已删除元素，从而切片容量不会发生变化\n\n3. map：相当于python中字典，或者Java中Map\n\n   1. 创建 map ,使用 `make`\n\n      ```go\n      m := make(map[string] int)\n      ```\n\n   2.  使用其中元素\n\n      ```go\n      m := map[string] int {\n        \"k1\": 11,\n        \"k2\": 22\n      }\n      fmt.Println(\"k1: \", m[\"k1\"])\n      ```\n\n   3.  删除其中元素：使用 `delete` 函数\n\n      ```go\n      delete(m, \"k1\")\n      ```\n\n4. 结构体（struct）\n\n   1.  定义\n\n      ```go\n      type Person struct {\n      \tName string\n      \tGender,Age int\n      }\n      ```\n\n   2.  同类型可以写在一行，并用 `,`号隔开\n\n   3. 初始化结构体\n\n      ```go\n      // 初始值 nil\n      var p *Person; \n      // 初始化结构体\n      var pp = new(Person)\n      pp.Name = \"张三\"\n      // 初始化并赋值\n      var p1 = Person{Name: \"张三\", Gender: 1, Age: 12}\n      ```\n\n   4. 封装性：属性名首字母大写（public），属性名首字母小写（private）\n\n   5. 继承性：嵌套结构体（不可以是它自身，但可以有指针指向它自己）\n\n      ```go\n      // 父类 Person , 子类 Employee Student\n      type Person struct {\n      \tName string\n      \tGender,Age int\n      }\n      \n      type Employee struct {\n      \tp Person\n      \tSalary int\n      }\n      \n      type Student struct {\n      \tPerson\n      \tSchool string\n      }\n      \n      // 赋值操作\n      e := Employee{p:Person{\"Scott\",1,30},Salary:1000}\n      var s Student\n      s.Name = \"Billy\" \t//相当于 s.Person.Name = \"Billy\"\n      s.Gender = 1\t\t\t//相当于 s.Person.Gender = 1\n      s.Age = 6\t\t\t\t\t//相当于 s.Person.Age = 6\n      s.School = \"xxx 大学\"\n      ```\n\n5. JSON（encoding/json、encoding/xml、encoding/asnl）\n\n6. 字符串操作常用包：\n\n   1. strings：提供搜索、比较、切分与字符串连接等\n   2. bytes：如果要对字符串的底层字节进行操作，可以使用 `[]bytes`类型后进行处理\n   3. strconv：主要是字符串与其他类型的转换，比如整数和布尔\n   4. unicode：主要对字符串中单个字符进行判断，比如：IsLetter、IsDigit、IsUpper等\n\n7. 对于参数传值\n\n   1. 形参为数组时，应该考虑指针【因为数组默认采取值传递方式】\n   2. 但是如果是切片，切片本质传递的是地址\n\n8. make & new 函数对比说明\n\n   1. make 主要用于切片、map和chan进行内存分配，返回不是指针，而是类型本身\n   2. new 主要用于结构体，返回类型的指针\n\n\n## 函数、方法、接口和反射\n\n1. 函数\n\n   1. 定义\n\n   2. 闭包（保留外部函数的变量）\n\n   3. 作用域\n\n   4. 返回值（可多个）\n\n   5. 变长参数（...）\n\n   6. defer关键字：用于释放资源，按照后进先出规则（LIFO）\n\n      ```go\n      f,err := os.Open(\"filename\")\n      if err != nil {\n        fmt.Println(err)\n      }\n      // 关闭资源\n      defer f.Close()\n      ```\n\n2. 方法\n\n   1. 定义\n\n      ```go\n      // 定义1个结构体\n      type Rectangle struct {\n        w,h float64\n      }\n      // 定义方法\n      func (r Rectangle) area() float64 {\n        return r.w * r.h\n      }\n      ```\n\n3. 接口\n\n   1. 定义\n\n      ```go\n      type ShapeDesc interface {\n        Area() float64\n        Perimeter() float64\n      }\n      ```\n\n   2.  使用\n\n      ```go\n      // 前提：结构体需要重写 Area() 和 Perimeter 方法\n      var s1,s2 ShapeDesc\n      // 类型断言: x.(T),其中 x 相当于变量,T 相当于类型（此处是: type circle struct）\n      _,ok := s1.(circle)\n      ```\n\n   3. 接口只能声明方法，没有实现\n\n   4. 实现接口，必须实现接口内的所有方法（方法名、形参、返回值完全一致）\n\n   5. 接口声明方法不可重名\n\n   6. 接口可嵌套\n\n4. 反射（reflect包）【源码: ==ScottAI-book/ch04/4.4/main.go==】\n\n   1. reflect.ValueOf(&x) 获取结构体变量地址\n   2. reflect.Elem() 获取地址中的值\n   3. reflect.Type() 获取变量类型\n   4. 还有更多用法在 reflect 包中\n   5. <span style=\"color: red\">**缺陷：**</span>反射可读性较差，性能相对于差，而且是运行时才报错\n\n5. 总结\n\n   1. 方法和函数很像，方法在方法名之前加上接收器参数（一般为结构体）\n   2. 匿名函数和闭包用法要掌握\n   3. 反射一般用于通用函数，一般是框架所做的事情，了解即可\n   4. 了解前4部分，go 语言的基础部分已经结束\n   5. go 语言优势在于多线程编程\n\n## 并发编程（核心重点）\n\n> 高性能编程 = 协程（goroutine）+ 通道 （channel）\n>\n> Go 语言将基于CSP（Communicating Sequential Process）模型的并发编程内置到语言中，即协程之间可以共享内存。\n\n1. goroutine 协程： 一种轻量级的线程，使用 Go 语言关键字启动。\n\n2. goroutine 和 系统线程是不一样的\n\n3. 所有的 Go 语言都是通过 goroutine 运行的（包括 main 函数）\n\n4. 核心概念：进程、线程、goroutine\n\n   <img src=\"../FILES/Go语言基础.md/image-20230823130419796.png\" alt=\"image-20230823130419796\" style=\"zoom:50%;\" />\n\n5. 如何运行一个协程？**go 关键字**\n\n   ```go\n   func hello() {\n     fmt.Println(\"Hello World!\")\n   }\n   \n   func main() {\n     // 使用关键字启动协程\n     go hello()\n     // 加上延时\n     // 主线程结束会关闭所有协程,从而导致不输出 Hello World\n     time.Sleep(1*time.Second)\n   }\n   ```\n\n6. sync.WaitGroup 去除休眠方式等待协程结束\n\n7. 通道（channel）协程间的通信\n\n   1. 初始值 nil\n\n   2. 开启通道关键字 chan\n\n   3. 关闭通道：close 函数\n\n      ```go\n      // 初始化\n      c1 := make(chan int)\n      // 将通道带入协程中\n      go writeChan(c1, 666)\n      // 接收通道数据\n      a := <-c1\n      \n      // 协程中将值写入通道\n      func writeChan(c chan int, x int) {\n        // 写入通道该过程是阻塞的,必须有协程接收数据\n        c <- x\n        // 关闭通道\n        close(c)\n      }\n      ```\n\n   4. 通道方向：单向 & 双向（默认）\n\n      ```go\n      // 默认通道——双向\n      func one(c chan int,x int) {\n        // 向通道c写入数据x\n        c <- x\n      }\n      \n      // out 通道只写, in 通道只读\n      // 箭头流向: 指向chan是写,指向变量是读\n      func two(out chan<- int, in<-chan int) {\n        // 读取 in 通道,赋值给 v\n        for v:= range in {\n          // 将数据 v 写入 out 通道\n          out <- v\n        }\n      }\n      ```\n\n   5. 缓存通道【源码: ==ScottAI-book/ch05/5.2/buffer/main.go==】\n\n      1. 在创建通道是可以指定队列最大长度\n\n         ```go\n         // 指定队列长度: 3\n         c := make(chan int 3)\n         ```\n\n      2. 尾部插入元素，头部获取元素\n\n      3. 队列空，接收数据的协程阻塞，等待另一个协程向该通道发送数据\n\n   6. 切换通道 select （可以理解为 switch case）\n\n      1. select 监听通道通信，有通信发生触发相应代码块\n\n      2. 基本结构\n\n         ```go\n         select {\n           case <- ch1:\n           \tfmt.Println(\"从通道1读取数据\")\n           case ch2 <- 1:\n           \tfmt.Println(\"向通道2写入数据\")\n           default:\n           \tfmt.Println(\"前面都不满足的情况\")\n         }\n         ```\n\n      3. 只能选择其中1个，都满足的情况会从中抽取1个\n\n      4. 如果没有写 default，在没有向通道写入数据之前会阻塞\n\n   7. select 超时问题解决【源码: ==ScottAI-book/ch05/5.2/timeout1/main.go==】\n\n      ![image-20230823130507803](../FILES/Go语言基础.md/image-20230823130507803.png)\n\n      1. 当某个协程向通道写入数据，没有协程接收时，将会死锁。【超时】\n\n      2. 这时可以通过 select + time.After 去解决【检查】\n\n      3. 如果可以通过随机数值代替具体数值\n\n         ```go\n         // 随机种子\n         rand.Seed(time.Now().UnixNano)\n         // 随机数\n         no := rand.Intn(6)\n         // 随机秒\n         no *= 1000\n         du := time.Duration(int32(no))*time.Millisecond\n         ```\n\n8. 管道（pipeline）【源码: ==ScottAI-book/ch05/5.3/main.go==】\n\n   1. 概念：通道（channel）连接协程（goroutine），一个协程输出是另一个协程输入。\n\n   ![image-20230823130528192](../FILES/Go语言基础.md/image-20230823130528192.png)\n\n   2. 使用管道好处（3点）：\n\n      1. 形成一个清晰的数据流，无需考虑协程和通道之间通信和状态问题\n      2. 管道内不需要将数据保存为变量，节省空间\n      3. 提高代码可维护度\n\n9. 小结\n\n   1. 协程（goroutine）\n   2. 通道（channel）\n   3. 管道（pipeline）\n   \n\n## 包和代码测试\n\n前面总结：数据类型、函数、方法、接口、反射、协程、通道、管道。\n\n编译快原因：\n\n- 每个源文件显示声明导入包\n- 避免循环引用，即有向无环\n- 编译输出目标文件记录自己的导出信息，以及依赖包导出信息，在一个包内可以编译整个包的文件\n\n1. 包（package）\n\n   1. 对于导入的包必须使用（IDE自动管理，无需人工操作）\n\n   2. 如果是包名冲突，必须起别名【当前文件有效】\n\n      ```go\n      import (\n      \tcrand \"crypto/rand\"\n        \"math/rand\"\n      )\n      ```\n\n   3. 可以同python导入全部（import * from xxx）一样，可以简写成 .\n\n      ```go\n      import . \"fmt\"\n      // 使用时, 无需 fmt.Println()\n      Println(\"Hello World\")\n      ```\n\n   4. 空导入，只需要其中的 init 函数，即只编译导入文件但不使用其中函数\n\n      ```go\n      import (\n      \t\"database/sql\"\n        _ \"github.com/go-sql-driver/mysql\"\n      )\n      ```\n\n   5. 包名的别名一般用复数形式，如 bytes、strings等\n\n2. Go 工具（Go Tool）: 下载、查询、构建、格式化、测试、安装代码包\n\n   1. 运行 `go help` 查看命令\n\n   2. `GOPATH` 环境变量【重要】指定工作区间根目录，有3个子目录\n\n      1. `src` 存放源文件\n      2. `pkg` 存放编译后的包\n      3. `bin` 存放可执行文件\n\n   3. `GOROOT` 环境变量，默认采取Go语言安装目录\n\n   4. `GOOS` 和 `GOARCH` 指定目标操作系统，指定目标处理器（如arm、amd64），交叉编译时会遇到\n\n   5. 运行 `go env` 查看各个环境变量及对应的值【太多，掌握 GOPATH 即可】\n\n   6. GO 命令\n\n      1. `go get` 从互联网下载包\n\n         ```go\n         // 下载mysql 驱动包\n         go get -u github.com/go-sql-driver/mysql\n         ```\n\n         go-get 包含了安装（go install）和编译（go build）两个步骤\n\n      2. `go build` 编译指定源文件，多个源文件用空格隔开\n\n      3. `go install` 编译源文件\n\n      4. `go list` 查看包信息，查看完整信息：`go list -json fmt`\n\n      5. `go doc` 打印输出文档信息\n\n         ```go\n         go doc fmt.Println\n         ```\n\n      6. `godoc` 生成体系化的 Web 页面\n\n      7. `go run` 运行 go 文件\n\n      8. `go test` 测试，一般以 *_test.go 命名【方便 go build 不编译这些文件】，如 one_test.go 文件\n\n         ```go\n         // one_test.go \n         package one\n         // 测试文件必须引入该包\n         import \"testing\"\n         // 参数写 T\n         func TestFun1(t *testing.T) {\n           // 写测试代码...\n           // t.Error(\"错误....\")\n         }\n         ```\n\n      9. 基准测试（Benchmark）\n\n         ```go\n         var final int\n         func benchmarkFun1(b *testing.B) {\n           var end int\n           for i := 0; i < b.N; i++ {\n             end = fun()\n           }\n           final = end\n         }\n         ```\n\n3. 代码优化\n\n   1. 分析代码标准库：runtime/pprof，生成性能分析报告\n   2. 通过 `go tool pprof -help` 了解相关用法\n   3. 常见问题\n      1. CPU 占用率高，高负荷运转\n      2. 线程（goroutine）死锁，占用资源\n      3. 垃圾回收占用时间\n\n4. 小结\n\n   1. 包的命名\n   2. 包的导入【冲突起别名】\n   3. Go 命令\n   4. 测试\n   5. 性能分析：go tool pprof 和 benchmark\n   6. godoc 文档\n   7. Example 示例函数【go test 命令运用】\n\n## 综合实战案例\n\n基本类型、复合类型、函数、方法、接口、反射、协程、通道、管道，和包的管理，bug 定位，性能分析，对 *_test.go 文件的测试，使用 godoc 命令生成文档。基本上 Go 语言基础部分学完了。下一步进阶：竞态与并发、sync 包、context 包、工作池、Go Web 编程、net/http 包、Web 框架（如基于httprouter的gin框架、MVC框架Beego）、Web底层服务（TCPSocket、UDPSocket、WebSocket）、中间介、数据库访问（database/sql 接口）\n\n## 框架部分\n\n1.  gin: Web框架\n2.  gorm: 数据库框架\n3.  grpc: 远程调用\n4.  etcd：目标是构建一个高可用的分布式键值(key-value)数据库\n5.  go-micro：微服务框架\n\n微服务框架（对比）：\n\n| 框架      | 团队               | 开源时间 | 概述                                                         | 优势                                               | 缺点                                                         |\n| --------- | ------------------ | -------- | ------------------------------------------------------------ | -------------------------------------------------- | ------------------------------------------------------------ |\n| go-micro  | 国外大佬Asim团队   | 2015年   | 是最早，最经典的Go微服务框架之一                             | 轻量级框架，入门简单，文档清晰                     | 版本兼容性差，社区活跃度一般                                 |\n| go-zero   | 国内大佬万俊峰团队 | 2020     | 提供了微服务框架需要具备的通用能力                           | 社区生态非常好，无论是文档更新还是技术群都很活跃   | 相比于go-micro比较重，同时也只带一部分的强约束，学习门槛比go-micro略高 |\n| go-kit    | 国外大佬           | 2015     | Go-kit将自己描述为微服务的标准库。像Go一样，go-kit为您提供可用于构建应用程序的单独包。 | 极度轻量级框架                                     | 社区建设一般                                                 |\n| tars-go   | 腾讯开源           | 2018     | tarsgo是tars这个大的C++重量级微服务框架下的go语言服务框架    | 优势在于很多能力不用从头开始做起，直接依托母体tars | 缺点是独立性较差，要选用这个tarsgo的前提，就是要先选用tars这个C++的框架 |\n| dubbo-go  | 阿里开源           | 2019     | dubbogo是dubbo这个Java重量级微服务框架下的go语言服务框架     | 和腾讯开源项目类似                                 | 和腾讯开源项目类似                                           |\n| go-kratos | B站开源            | 2019     | 轻量级的微服务框架，框架定位于解决微服务的核心诉求。         | 暂无，后续补充                                     | 暂无，后续补充                                               |\n| jupiter   | 斗鱼开源           | 2020     | 面向服务治理的Golang微服务框架                               | 暂无，后续补充                                     | 暂无，后续补充                                               |\n\n\n\n## 探索深度\n\n1. 操作系统\n2. 数据结构\n3. 分布式一致性\n4. 服务网络\n5. Kubernetes & Docker\n6. 协程（goroutine） 实现原理\n\n---\n\ngo 的基本等级：\n\n**初级**\n\n初级呢，只要求掌握Golang的基本语法，懂几个流行的框架和库，能更删改查去做业务就行。一般我会问50%的golang知识点，一般集中在slice、map这块的；30%的数据库知识点，主要考察数据库的索引，事务的隔离，sql语句的优化之类的，也很基础；20%数据结构知识点，数据结构是编程的基础，这个怎么都逃不掉。一句话，能干活就行。\n\n**中级**\n\n中级呢，好歹也要知道一些底层的东西，或者是源码层的东西，什么goroutine的实现原理，什么内存逃逸，还有微服务相关的东西，另外docker和k8s也是必须要问的，主要考察知识的深度和广度，因为可能是小组的组长，要有一定的技术视野。\n\n**高级**\n\n高级呢，偏于项目管理和技术选型，golang应该也没有多少问的，但是也要问一两个golang设计哲学性的问题，比如对泛型怎么看之类的，主要还是对于系统架构和项目的管理的理解，顺便聊聊他之前做过的项目怎么管理，用了哪些技术选型，考量是什么，为什么最后选择了这个放弃了那个，然后碰到过什么坑，是怎么解决的。\n\n","source":"_posts/Go语言基础.md","raw":"---\ntitle: Go 语言基础入门\ndate: \nupdated:\ntags: go\ncategories: 后端\ncover: https://s1.ax1x.com/2023/06/22/pCJ3oEq.png \n---\n\n# Go 语言基础\n\n## 程序基础\n\n1. 了解常量和遍历【const var 关键词】\n\n2. `:=` 初始化以及赋值\n\n   ```go\n   // 对变量 num 初始化,并赋值为 12\n   // 之后想修改值不能用 := ,要用 =\n   num := 12; \n   ```\n\n3. for 循环关键字的使用【源码: ==ScoteAI-book/ch01/1.4/loop.go==】\n\n4. 指针的使用 【源码: ==ScottAI-book/ch01/1.2/pointer/main.go==】\n\n5. net/http 的使用 【源码: ==ScottAI-book/ch01/1.1/helloserver/main.go==】\n\n6. 垃圾回收机制——三色标记法\n\n   1. 白色集合：可能会被垃圾回收\n   2. 黑色集合：保证存活\n   3. 灰色集合：过渡用的\n\n   ![image-20230823130355000](../FILES/Go语言基础.md/image-20230823130355000.png)\n\n7. 包及作用域\n\n   ```go\n   // 调用其他包的变量\n   package1.num1\n   package2.num1\n   ```\n\n\n## 数据类型\n\n1. 基本数据类型\n   1. 整型\n   2. 浮点型\n   3. 复数\n   4. 布尔类型\n   5. 常量\n   6. 字符串（可以看作复合数据类型）\n2. 复合数据类型\n   1. 结构体 （Struct）\n   2. 数组\n\n3. 引用数据类型\n   1. 切片（slice）：切片是对数组的引用，它提供了动态大小、灵活的操作和便捷的切片操作。切片在Go语言中被广泛用于处理和操作数据集合。\n   2. 映射（map）：映射是一种无序的键值对集合，也被称为字典或哈希表。它提供了快速的查找和检索操作，用于存储和管理键值对数据。\n   3. 通道（channel）：通道是用于在Goroutine之间进行通信和同步的管道。它允许Goroutine之间发送和接收数据，并确保并发安全。\n   4. 函数（function）：函数是一种引用类型，可以作为值传递给其他函数，也可以作为返回值。这使得在Go语言中可以灵活地使用函数来实现高阶函数和函数式编程的特性。\n\n4. 接口数据类型\n5. 格式化说明符\n   1.  <span style=\"color: blue\">%d</span> : 用于格式化整型\n   2.  <span style=\"color: blue\">%x|%X</span>：用于十六制数字\n   3.  <span style=\"color: blue\">%0d</span>：用于规定输出定长的整型\n   4.  <span style=\"color: blue\">%n.mg</span>：用户表示数字n，精确到小数点后 m 位。除了 g ，还有使用 e 和 f\n\n> <span style=\"color: red\">注意：</span>\n>\n> Go语言中的**指针（pointer）**也是一种==引用类型==，但它在语义上<span style=\"text-decoration: underline\">更接近于基本类型</span>。指针可以用于间接引用和修改变量的内存地址，但与切片、映射和通道等引用类型有所不同。\n\n<strong style=\"color: red\"> 小提示：</strong> 引用类型引用传递，复合类型值传递！\n\n|      类型      | 长度 | 默认值 |   说明   |\n| :------------: | :--: | :----: | :------: |\n|      bool      |  1   | false  |          |\n|      byte      |  1   |   0    |  uint8   |\n|      rune      |  4   |   0    |  uint32  |\n|   int、uint    | 4或8 |   0    |  32或64  |\n|  int8、uint8   |  1   |   0    |          |\n| uint16、uint16 |  2   |   0    |          |\n| int32、uint32  |  4   |   0    |          |\n| int64、uint64  |  8   |   0    |          |\n|    float32     |  4   |  0.0   |          |\n|    float64     |  8   |  0.0   |          |\n|   complex64    |  8   |        |          |\n|   complex128   |  16  |        |          |\n|    uSintptr    | 4或8 |        | 指针类型 |\n\n## 字符串与复合数据类型\n\n> <span style=\"color: red\">注意：</span> Go 语言中没有对象和类的概念，封装思想都是通过复合类型来实现，比如结构体\n\n1. 数组\n\n   ```go\n   // 初始化数组\n   var a [3]int\n   var b [3]int = [3]int{1,2,3}\n   c := [...]int{1,2,3,4}\n   // 新语法（记一下）index : value\n   d := [...]int{4,4:1,1:2} // 等同于 [4 2 0 0 1]\n   ```\n\n2. 切片 (slice)：相当于 python 切片\n\n   1. 创建切片：使用 make\n\n      ```go\n      s := make([]int,10)\n      ```\n\n   2. 如果要增加元素，建议采取 `append` 方法\n\n   3. 如果要复制，采取 `copy` 方法【必须是切片，数组复制：`a[:]`】\n\n   4. 多维切片可以通过嵌套切片来创建\n\n      ```go\n      // 创建一个二维切片\n      matrix := [][]int{\n        {1, 2, 3},\n        {4, 5, 6},\n        {7, 8, 9},\n      }\n      ```\n    5. 在删除之前，将要删除元素置为 `nil` ，否则垃圾回收已删除元素，从而切片容量不会发生变化\n\n3. map：相当于python中字典，或者Java中Map\n\n   1. 创建 map ,使用 `make`\n\n      ```go\n      m := make(map[string] int)\n      ```\n\n   2.  使用其中元素\n\n      ```go\n      m := map[string] int {\n        \"k1\": 11,\n        \"k2\": 22\n      }\n      fmt.Println(\"k1: \", m[\"k1\"])\n      ```\n\n   3.  删除其中元素：使用 `delete` 函数\n\n      ```go\n      delete(m, \"k1\")\n      ```\n\n4. 结构体（struct）\n\n   1.  定义\n\n      ```go\n      type Person struct {\n      \tName string\n      \tGender,Age int\n      }\n      ```\n\n   2.  同类型可以写在一行，并用 `,`号隔开\n\n   3. 初始化结构体\n\n      ```go\n      // 初始值 nil\n      var p *Person; \n      // 初始化结构体\n      var pp = new(Person)\n      pp.Name = \"张三\"\n      // 初始化并赋值\n      var p1 = Person{Name: \"张三\", Gender: 1, Age: 12}\n      ```\n\n   4. 封装性：属性名首字母大写（public），属性名首字母小写（private）\n\n   5. 继承性：嵌套结构体（不可以是它自身，但可以有指针指向它自己）\n\n      ```go\n      // 父类 Person , 子类 Employee Student\n      type Person struct {\n      \tName string\n      \tGender,Age int\n      }\n      \n      type Employee struct {\n      \tp Person\n      \tSalary int\n      }\n      \n      type Student struct {\n      \tPerson\n      \tSchool string\n      }\n      \n      // 赋值操作\n      e := Employee{p:Person{\"Scott\",1,30},Salary:1000}\n      var s Student\n      s.Name = \"Billy\" \t//相当于 s.Person.Name = \"Billy\"\n      s.Gender = 1\t\t\t//相当于 s.Person.Gender = 1\n      s.Age = 6\t\t\t\t\t//相当于 s.Person.Age = 6\n      s.School = \"xxx 大学\"\n      ```\n\n5. JSON（encoding/json、encoding/xml、encoding/asnl）\n\n6. 字符串操作常用包：\n\n   1. strings：提供搜索、比较、切分与字符串连接等\n   2. bytes：如果要对字符串的底层字节进行操作，可以使用 `[]bytes`类型后进行处理\n   3. strconv：主要是字符串与其他类型的转换，比如整数和布尔\n   4. unicode：主要对字符串中单个字符进行判断，比如：IsLetter、IsDigit、IsUpper等\n\n7. 对于参数传值\n\n   1. 形参为数组时，应该考虑指针【因为数组默认采取值传递方式】\n   2. 但是如果是切片，切片本质传递的是地址\n\n8. make & new 函数对比说明\n\n   1. make 主要用于切片、map和chan进行内存分配，返回不是指针，而是类型本身\n   2. new 主要用于结构体，返回类型的指针\n\n\n## 函数、方法、接口和反射\n\n1. 函数\n\n   1. 定义\n\n   2. 闭包（保留外部函数的变量）\n\n   3. 作用域\n\n   4. 返回值（可多个）\n\n   5. 变长参数（...）\n\n   6. defer关键字：用于释放资源，按照后进先出规则（LIFO）\n\n      ```go\n      f,err := os.Open(\"filename\")\n      if err != nil {\n        fmt.Println(err)\n      }\n      // 关闭资源\n      defer f.Close()\n      ```\n\n2. 方法\n\n   1. 定义\n\n      ```go\n      // 定义1个结构体\n      type Rectangle struct {\n        w,h float64\n      }\n      // 定义方法\n      func (r Rectangle) area() float64 {\n        return r.w * r.h\n      }\n      ```\n\n3. 接口\n\n   1. 定义\n\n      ```go\n      type ShapeDesc interface {\n        Area() float64\n        Perimeter() float64\n      }\n      ```\n\n   2.  使用\n\n      ```go\n      // 前提：结构体需要重写 Area() 和 Perimeter 方法\n      var s1,s2 ShapeDesc\n      // 类型断言: x.(T),其中 x 相当于变量,T 相当于类型（此处是: type circle struct）\n      _,ok := s1.(circle)\n      ```\n\n   3. 接口只能声明方法，没有实现\n\n   4. 实现接口，必须实现接口内的所有方法（方法名、形参、返回值完全一致）\n\n   5. 接口声明方法不可重名\n\n   6. 接口可嵌套\n\n4. 反射（reflect包）【源码: ==ScottAI-book/ch04/4.4/main.go==】\n\n   1. reflect.ValueOf(&x) 获取结构体变量地址\n   2. reflect.Elem() 获取地址中的值\n   3. reflect.Type() 获取变量类型\n   4. 还有更多用法在 reflect 包中\n   5. <span style=\"color: red\">**缺陷：**</span>反射可读性较差，性能相对于差，而且是运行时才报错\n\n5. 总结\n\n   1. 方法和函数很像，方法在方法名之前加上接收器参数（一般为结构体）\n   2. 匿名函数和闭包用法要掌握\n   3. 反射一般用于通用函数，一般是框架所做的事情，了解即可\n   4. 了解前4部分，go 语言的基础部分已经结束\n   5. go 语言优势在于多线程编程\n\n## 并发编程（核心重点）\n\n> 高性能编程 = 协程（goroutine）+ 通道 （channel）\n>\n> Go 语言将基于CSP（Communicating Sequential Process）模型的并发编程内置到语言中，即协程之间可以共享内存。\n\n1. goroutine 协程： 一种轻量级的线程，使用 Go 语言关键字启动。\n\n2. goroutine 和 系统线程是不一样的\n\n3. 所有的 Go 语言都是通过 goroutine 运行的（包括 main 函数）\n\n4. 核心概念：进程、线程、goroutine\n\n   <img src=\"../FILES/Go语言基础.md/image-20230823130419796.png\" alt=\"image-20230823130419796\" style=\"zoom:50%;\" />\n\n5. 如何运行一个协程？**go 关键字**\n\n   ```go\n   func hello() {\n     fmt.Println(\"Hello World!\")\n   }\n   \n   func main() {\n     // 使用关键字启动协程\n     go hello()\n     // 加上延时\n     // 主线程结束会关闭所有协程,从而导致不输出 Hello World\n     time.Sleep(1*time.Second)\n   }\n   ```\n\n6. sync.WaitGroup 去除休眠方式等待协程结束\n\n7. 通道（channel）协程间的通信\n\n   1. 初始值 nil\n\n   2. 开启通道关键字 chan\n\n   3. 关闭通道：close 函数\n\n      ```go\n      // 初始化\n      c1 := make(chan int)\n      // 将通道带入协程中\n      go writeChan(c1, 666)\n      // 接收通道数据\n      a := <-c1\n      \n      // 协程中将值写入通道\n      func writeChan(c chan int, x int) {\n        // 写入通道该过程是阻塞的,必须有协程接收数据\n        c <- x\n        // 关闭通道\n        close(c)\n      }\n      ```\n\n   4. 通道方向：单向 & 双向（默认）\n\n      ```go\n      // 默认通道——双向\n      func one(c chan int,x int) {\n        // 向通道c写入数据x\n        c <- x\n      }\n      \n      // out 通道只写, in 通道只读\n      // 箭头流向: 指向chan是写,指向变量是读\n      func two(out chan<- int, in<-chan int) {\n        // 读取 in 通道,赋值给 v\n        for v:= range in {\n          // 将数据 v 写入 out 通道\n          out <- v\n        }\n      }\n      ```\n\n   5. 缓存通道【源码: ==ScottAI-book/ch05/5.2/buffer/main.go==】\n\n      1. 在创建通道是可以指定队列最大长度\n\n         ```go\n         // 指定队列长度: 3\n         c := make(chan int 3)\n         ```\n\n      2. 尾部插入元素，头部获取元素\n\n      3. 队列空，接收数据的协程阻塞，等待另一个协程向该通道发送数据\n\n   6. 切换通道 select （可以理解为 switch case）\n\n      1. select 监听通道通信，有通信发生触发相应代码块\n\n      2. 基本结构\n\n         ```go\n         select {\n           case <- ch1:\n           \tfmt.Println(\"从通道1读取数据\")\n           case ch2 <- 1:\n           \tfmt.Println(\"向通道2写入数据\")\n           default:\n           \tfmt.Println(\"前面都不满足的情况\")\n         }\n         ```\n\n      3. 只能选择其中1个，都满足的情况会从中抽取1个\n\n      4. 如果没有写 default，在没有向通道写入数据之前会阻塞\n\n   7. select 超时问题解决【源码: ==ScottAI-book/ch05/5.2/timeout1/main.go==】\n\n      ![image-20230823130507803](../FILES/Go语言基础.md/image-20230823130507803.png)\n\n      1. 当某个协程向通道写入数据，没有协程接收时，将会死锁。【超时】\n\n      2. 这时可以通过 select + time.After 去解决【检查】\n\n      3. 如果可以通过随机数值代替具体数值\n\n         ```go\n         // 随机种子\n         rand.Seed(time.Now().UnixNano)\n         // 随机数\n         no := rand.Intn(6)\n         // 随机秒\n         no *= 1000\n         du := time.Duration(int32(no))*time.Millisecond\n         ```\n\n8. 管道（pipeline）【源码: ==ScottAI-book/ch05/5.3/main.go==】\n\n   1. 概念：通道（channel）连接协程（goroutine），一个协程输出是另一个协程输入。\n\n   ![image-20230823130528192](../FILES/Go语言基础.md/image-20230823130528192.png)\n\n   2. 使用管道好处（3点）：\n\n      1. 形成一个清晰的数据流，无需考虑协程和通道之间通信和状态问题\n      2. 管道内不需要将数据保存为变量，节省空间\n      3. 提高代码可维护度\n\n9. 小结\n\n   1. 协程（goroutine）\n   2. 通道（channel）\n   3. 管道（pipeline）\n   \n\n## 包和代码测试\n\n前面总结：数据类型、函数、方法、接口、反射、协程、通道、管道。\n\n编译快原因：\n\n- 每个源文件显示声明导入包\n- 避免循环引用，即有向无环\n- 编译输出目标文件记录自己的导出信息，以及依赖包导出信息，在一个包内可以编译整个包的文件\n\n1. 包（package）\n\n   1. 对于导入的包必须使用（IDE自动管理，无需人工操作）\n\n   2. 如果是包名冲突，必须起别名【当前文件有效】\n\n      ```go\n      import (\n      \tcrand \"crypto/rand\"\n        \"math/rand\"\n      )\n      ```\n\n   3. 可以同python导入全部（import * from xxx）一样，可以简写成 .\n\n      ```go\n      import . \"fmt\"\n      // 使用时, 无需 fmt.Println()\n      Println(\"Hello World\")\n      ```\n\n   4. 空导入，只需要其中的 init 函数，即只编译导入文件但不使用其中函数\n\n      ```go\n      import (\n      \t\"database/sql\"\n        _ \"github.com/go-sql-driver/mysql\"\n      )\n      ```\n\n   5. 包名的别名一般用复数形式，如 bytes、strings等\n\n2. Go 工具（Go Tool）: 下载、查询、构建、格式化、测试、安装代码包\n\n   1. 运行 `go help` 查看命令\n\n   2. `GOPATH` 环境变量【重要】指定工作区间根目录，有3个子目录\n\n      1. `src` 存放源文件\n      2. `pkg` 存放编译后的包\n      3. `bin` 存放可执行文件\n\n   3. `GOROOT` 环境变量，默认采取Go语言安装目录\n\n   4. `GOOS` 和 `GOARCH` 指定目标操作系统，指定目标处理器（如arm、amd64），交叉编译时会遇到\n\n   5. 运行 `go env` 查看各个环境变量及对应的值【太多，掌握 GOPATH 即可】\n\n   6. GO 命令\n\n      1. `go get` 从互联网下载包\n\n         ```go\n         // 下载mysql 驱动包\n         go get -u github.com/go-sql-driver/mysql\n         ```\n\n         go-get 包含了安装（go install）和编译（go build）两个步骤\n\n      2. `go build` 编译指定源文件，多个源文件用空格隔开\n\n      3. `go install` 编译源文件\n\n      4. `go list` 查看包信息，查看完整信息：`go list -json fmt`\n\n      5. `go doc` 打印输出文档信息\n\n         ```go\n         go doc fmt.Println\n         ```\n\n      6. `godoc` 生成体系化的 Web 页面\n\n      7. `go run` 运行 go 文件\n\n      8. `go test` 测试，一般以 *_test.go 命名【方便 go build 不编译这些文件】，如 one_test.go 文件\n\n         ```go\n         // one_test.go \n         package one\n         // 测试文件必须引入该包\n         import \"testing\"\n         // 参数写 T\n         func TestFun1(t *testing.T) {\n           // 写测试代码...\n           // t.Error(\"错误....\")\n         }\n         ```\n\n      9. 基准测试（Benchmark）\n\n         ```go\n         var final int\n         func benchmarkFun1(b *testing.B) {\n           var end int\n           for i := 0; i < b.N; i++ {\n             end = fun()\n           }\n           final = end\n         }\n         ```\n\n3. 代码优化\n\n   1. 分析代码标准库：runtime/pprof，生成性能分析报告\n   2. 通过 `go tool pprof -help` 了解相关用法\n   3. 常见问题\n      1. CPU 占用率高，高负荷运转\n      2. 线程（goroutine）死锁，占用资源\n      3. 垃圾回收占用时间\n\n4. 小结\n\n   1. 包的命名\n   2. 包的导入【冲突起别名】\n   3. Go 命令\n   4. 测试\n   5. 性能分析：go tool pprof 和 benchmark\n   6. godoc 文档\n   7. Example 示例函数【go test 命令运用】\n\n## 综合实战案例\n\n基本类型、复合类型、函数、方法、接口、反射、协程、通道、管道，和包的管理，bug 定位，性能分析，对 *_test.go 文件的测试，使用 godoc 命令生成文档。基本上 Go 语言基础部分学完了。下一步进阶：竞态与并发、sync 包、context 包、工作池、Go Web 编程、net/http 包、Web 框架（如基于httprouter的gin框架、MVC框架Beego）、Web底层服务（TCPSocket、UDPSocket、WebSocket）、中间介、数据库访问（database/sql 接口）\n\n## 框架部分\n\n1.  gin: Web框架\n2.  gorm: 数据库框架\n3.  grpc: 远程调用\n4.  etcd：目标是构建一个高可用的分布式键值(key-value)数据库\n5.  go-micro：微服务框架\n\n微服务框架（对比）：\n\n| 框架      | 团队               | 开源时间 | 概述                                                         | 优势                                               | 缺点                                                         |\n| --------- | ------------------ | -------- | ------------------------------------------------------------ | -------------------------------------------------- | ------------------------------------------------------------ |\n| go-micro  | 国外大佬Asim团队   | 2015年   | 是最早，最经典的Go微服务框架之一                             | 轻量级框架，入门简单，文档清晰                     | 版本兼容性差，社区活跃度一般                                 |\n| go-zero   | 国内大佬万俊峰团队 | 2020     | 提供了微服务框架需要具备的通用能力                           | 社区生态非常好，无论是文档更新还是技术群都很活跃   | 相比于go-micro比较重，同时也只带一部分的强约束，学习门槛比go-micro略高 |\n| go-kit    | 国外大佬           | 2015     | Go-kit将自己描述为微服务的标准库。像Go一样，go-kit为您提供可用于构建应用程序的单独包。 | 极度轻量级框架                                     | 社区建设一般                                                 |\n| tars-go   | 腾讯开源           | 2018     | tarsgo是tars这个大的C++重量级微服务框架下的go语言服务框架    | 优势在于很多能力不用从头开始做起，直接依托母体tars | 缺点是独立性较差，要选用这个tarsgo的前提，就是要先选用tars这个C++的框架 |\n| dubbo-go  | 阿里开源           | 2019     | dubbogo是dubbo这个Java重量级微服务框架下的go语言服务框架     | 和腾讯开源项目类似                                 | 和腾讯开源项目类似                                           |\n| go-kratos | B站开源            | 2019     | 轻量级的微服务框架，框架定位于解决微服务的核心诉求。         | 暂无，后续补充                                     | 暂无，后续补充                                               |\n| jupiter   | 斗鱼开源           | 2020     | 面向服务治理的Golang微服务框架                               | 暂无，后续补充                                     | 暂无，后续补充                                               |\n\n\n\n## 探索深度\n\n1. 操作系统\n2. 数据结构\n3. 分布式一致性\n4. 服务网络\n5. Kubernetes & Docker\n6. 协程（goroutine） 实现原理\n\n---\n\ngo 的基本等级：\n\n**初级**\n\n初级呢，只要求掌握Golang的基本语法，懂几个流行的框架和库，能更删改查去做业务就行。一般我会问50%的golang知识点，一般集中在slice、map这块的；30%的数据库知识点，主要考察数据库的索引，事务的隔离，sql语句的优化之类的，也很基础；20%数据结构知识点，数据结构是编程的基础，这个怎么都逃不掉。一句话，能干活就行。\n\n**中级**\n\n中级呢，好歹也要知道一些底层的东西，或者是源码层的东西，什么goroutine的实现原理，什么内存逃逸，还有微服务相关的东西，另外docker和k8s也是必须要问的，主要考察知识的深度和广度，因为可能是小组的组长，要有一定的技术视野。\n\n**高级**\n\n高级呢，偏于项目管理和技术选型，golang应该也没有多少问的，但是也要问一两个golang设计哲学性的问题，比如对泛型怎么看之类的，主要还是对于系统架构和项目的管理的理解，顺便聊聊他之前做过的项目怎么管理，用了哪些技术选型，考量是什么，为什么最后选择了这个放弃了那个，然后碰到过什么坑，是怎么解决的。\n\n","slug":"Go语言基础","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmoc00071kv2fxorg3st","content":"<h1 id=\"Go-语言基础\"><a href=\"#Go-语言基础\" class=\"headerlink\" title=\"Go 语言基础\"></a>Go 语言基础</h1><h2 id=\"程序基础\"><a href=\"#程序基础\" class=\"headerlink\" title=\"程序基础\"></a>程序基础</h2><ol>\n<li><p>了解常量和遍历【const var 关键词】</p>\n</li>\n<li><p><code>:=</code> 初始化以及赋值</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 对变量 num 初始化,并赋值为 12</span></span><br><span class=\"line\"><span class=\"comment\">// 之后想修改值不能用 := ,要用 =</span></span><br><span class=\"line\">num := <span class=\"number\">12</span>; </span><br></pre></td></tr></table></figure>\n</li>\n<li><p>for 循环关键字的使用【源码: &#x3D;&#x3D;ScoteAI-book&#x2F;ch01&#x2F;1.4&#x2F;loop.go&#x3D;&#x3D;】</p>\n</li>\n<li><p>指针的使用 【源码: &#x3D;&#x3D;ScottAI-book&#x2F;ch01&#x2F;1.2&#x2F;pointer&#x2F;main.go&#x3D;&#x3D;】</p>\n</li>\n<li><p>net&#x2F;http 的使用 【源码: &#x3D;&#x3D;ScottAI-book&#x2F;ch01&#x2F;1.1&#x2F;helloserver&#x2F;main.go&#x3D;&#x3D;】</p>\n</li>\n<li><p>垃圾回收机制——三色标记法</p>\n<ol>\n<li>白色集合：可能会被垃圾回收</li>\n<li>黑色集合：保证存活</li>\n<li>灰色集合：过渡用的</li>\n</ol>\n<p><img src=\"/lingtan/../FILES/Go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80.md/image-20230823130355000.png\" alt=\"image-20230823130355000\"></p>\n</li>\n<li><p>包及作用域</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 调用其他包的变量</span></span><br><span class=\"line\">package1.num1</span><br><span class=\"line\">package2.num1</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><ol>\n<li><p>基本数据类型</p>\n<ol>\n<li>整型</li>\n<li>浮点型</li>\n<li>复数</li>\n<li>布尔类型</li>\n<li>常量</li>\n<li>字符串（可以看作复合数据类型）</li>\n</ol>\n</li>\n<li><p>复合数据类型</p>\n<ol>\n<li>结构体 （Struct）</li>\n<li>数组</li>\n</ol>\n</li>\n<li><p>引用数据类型</p>\n<ol>\n<li>切片（slice）：切片是对数组的引用，它提供了动态大小、灵活的操作和便捷的切片操作。切片在Go语言中被广泛用于处理和操作数据集合。</li>\n<li>映射（map）：映射是一种无序的键值对集合，也被称为字典或哈希表。它提供了快速的查找和检索操作，用于存储和管理键值对数据。</li>\n<li>通道（channel）：通道是用于在Goroutine之间进行通信和同步的管道。它允许Goroutine之间发送和接收数据，并确保并发安全。</li>\n<li>函数（function）：函数是一种引用类型，可以作为值传递给其他函数，也可以作为返回值。这使得在Go语言中可以灵活地使用函数来实现高阶函数和函数式编程的特性。</li>\n</ol>\n</li>\n<li><p>接口数据类型</p>\n</li>\n<li><p>格式化说明符</p>\n<ol>\n<li><span style=\"color: blue\">%d</span> : 用于格式化整型</li>\n<li><span style=\"color: blue\">%x|%X</span>：用于十六制数字</li>\n<li><span style=\"color: blue\">%0d</span>：用于规定输出定长的整型</li>\n<li><span style=\"color: blue\">%n.mg</span>：用户表示数字n，精确到小数点后 m 位。除了 g ，还有使用 e 和 f</li>\n</ol>\n</li>\n</ol>\n<blockquote>\n<p><span style=\"color: red\">注意：</span></p>\n<p>Go语言中的<strong>指针（pointer）</strong>也是一种&#x3D;&#x3D;引用类型&#x3D;&#x3D;，但它在语义上<span style=\"text-decoration: underline\">更接近于基本类型</span>。指针可以用于间接引用和修改变量的内存地址，但与切片、映射和通道等引用类型有所不同。</p>\n</blockquote>\n<p><strong style=\"color: red\"> 小提示：</strong> 引用类型引用传递，复合类型值传递！</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">类型</th>\n<th align=\"center\">长度</th>\n<th align=\"center\">默认值</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">bool</td>\n<td align=\"center\">1</td>\n<td align=\"center\">false</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">byte</td>\n<td align=\"center\">1</td>\n<td align=\"center\">0</td>\n<td align=\"center\">uint8</td>\n</tr>\n<tr>\n<td align=\"center\">rune</td>\n<td align=\"center\">4</td>\n<td align=\"center\">0</td>\n<td align=\"center\">uint32</td>\n</tr>\n<tr>\n<td align=\"center\">int、uint</td>\n<td align=\"center\">4或8</td>\n<td align=\"center\">0</td>\n<td align=\"center\">32或64</td>\n</tr>\n<tr>\n<td align=\"center\">int8、uint8</td>\n<td align=\"center\">1</td>\n<td align=\"center\">0</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">uint16、uint16</td>\n<td align=\"center\">2</td>\n<td align=\"center\">0</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">int32、uint32</td>\n<td align=\"center\">4</td>\n<td align=\"center\">0</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">int64、uint64</td>\n<td align=\"center\">8</td>\n<td align=\"center\">0</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">float32</td>\n<td align=\"center\">4</td>\n<td align=\"center\">0.0</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">float64</td>\n<td align=\"center\">8</td>\n<td align=\"center\">0.0</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">complex64</td>\n<td align=\"center\">8</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">complex128</td>\n<td align=\"center\">16</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">uSintptr</td>\n<td align=\"center\">4或8</td>\n<td align=\"center\"></td>\n<td align=\"center\">指针类型</td>\n</tr>\n</tbody></table>\n<h2 id=\"字符串与复合数据类型\"><a href=\"#字符串与复合数据类型\" class=\"headerlink\" title=\"字符串与复合数据类型\"></a>字符串与复合数据类型</h2><blockquote>\n<p><span style=\"color: red\">注意：</span> Go 语言中没有对象和类的概念，封装思想都是通过复合类型来实现，比如结构体</p>\n</blockquote>\n<ol>\n<li><p>数组</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 初始化数组</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a [<span class=\"number\">3</span>]<span class=\"type\">int</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b [<span class=\"number\">3</span>]<span class=\"type\">int</span> = [<span class=\"number\">3</span>]<span class=\"type\">int</span>&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;</span><br><span class=\"line\">c := [...]<span class=\"type\">int</span>&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">// 新语法（记一下）index : value</span></span><br><span class=\"line\">d := [...]<span class=\"type\">int</span>&#123;<span class=\"number\">4</span>,<span class=\"number\">4</span>:<span class=\"number\">1</span>,<span class=\"number\">1</span>:<span class=\"number\">2</span>&#125; <span class=\"comment\">// 等同于 [4 2 0 0 1]</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>切片 (slice)：相当于 python 切片</p>\n<ol>\n<li><p>创建切片：使用 make</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s := <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>,<span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果要增加元素，建议采取 <code>append</code> 方法</p>\n</li>\n<li><p>如果要复制，采取 <code>copy</code> 方法【必须是切片，数组复制：<code>a[:]</code>】</p>\n</li>\n<li><p>多维切片可以通过嵌套切片来创建</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个二维切片</span></span><br><span class=\"line\">matrix := [][]<span class=\"type\">int</span>&#123;</span><br><span class=\"line\">  &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>&#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>在删除之前，将要删除元素置为 <code>nil</code> ，否则垃圾回收已删除元素，从而切片容量不会发生变化</p>\n</li>\n</ol>\n</li>\n<li><p>map：相当于python中字典，或者Java中Map</p>\n<ol>\n<li><p>创建 map ,使用 <code>make</code></p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">m := <span class=\"built_in\">make</span>(<span class=\"keyword\">map</span>[<span class=\"type\">string</span>] <span class=\"type\">int</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用其中元素</p>\n</li>\n</ol>\n   <figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">m := <span class=\"keyword\">map</span>[<span class=\"type\">string</span>] <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;k1&quot;</span>: <span class=\"number\">11</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;k2&quot;</span>: <span class=\"number\">22</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fmt.Println(<span class=\"string\">&quot;k1: &quot;</span>, m[<span class=\"string\">&quot;k1&quot;</span>])</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>删除其中元素：使用 <code>delete</code> 函数</li>\n</ol>\n   <figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">delete</span>(m, <span class=\"string\">&quot;k1&quot;</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>结构体（struct）</p>\n<ol>\n<li>定义</li>\n</ol>\n   <figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Person <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tName <span class=\"type\">string</span></span><br><span class=\"line\">\tGender,Age <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><p>同类型可以写在一行，并用 <code>,</code>号隔开</p>\n</li>\n<li><p>初始化结构体</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 初始值 nil</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> p *Person; </span><br><span class=\"line\"><span class=\"comment\">// 初始化结构体</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> pp = <span class=\"built_in\">new</span>(Person)</span><br><span class=\"line\">pp.Name = <span class=\"string\">&quot;张三&quot;</span></span><br><span class=\"line\"><span class=\"comment\">// 初始化并赋值</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> p1 = Person&#123;Name: <span class=\"string\">&quot;张三&quot;</span>, Gender: <span class=\"number\">1</span>, Age: <span class=\"number\">12</span>&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>封装性：属性名首字母大写（public），属性名首字母小写（private）</p>\n</li>\n<li><p>继承性：嵌套结构体（不可以是它自身，但可以有指针指向它自己）</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 父类 Person , 子类 Employee Student</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Person <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tName <span class=\"type\">string</span></span><br><span class=\"line\">\tGender,Age <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Employee <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tp Person</span><br><span class=\"line\">\tSalary <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Student <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tPerson</span><br><span class=\"line\">\tSchool <span class=\"type\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 赋值操作</span></span><br><span class=\"line\">e := Employee&#123;p:Person&#123;<span class=\"string\">&quot;Scott&quot;</span>,<span class=\"number\">1</span>,<span class=\"number\">30</span>&#125;,Salary:<span class=\"number\">1000</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> s Student</span><br><span class=\"line\">s.Name = <span class=\"string\">&quot;Billy&quot;</span> \t<span class=\"comment\">//相当于 s.Person.Name = &quot;Billy&quot;</span></span><br><span class=\"line\">s.Gender = <span class=\"number\">1</span>\t\t\t<span class=\"comment\">//相当于 s.Person.Gender = 1</span></span><br><span class=\"line\">s.Age = <span class=\"number\">6</span>\t\t\t\t\t<span class=\"comment\">//相当于 s.Person.Age = 6</span></span><br><span class=\"line\">s.School = <span class=\"string\">&quot;xxx 大学&quot;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>JSON（encoding&#x2F;json、encoding&#x2F;xml、encoding&#x2F;asnl）</p>\n</li>\n<li><p>字符串操作常用包：</p>\n<ol>\n<li>strings：提供搜索、比较、切分与字符串连接等</li>\n<li>bytes：如果要对字符串的底层字节进行操作，可以使用 <code>[]bytes</code>类型后进行处理</li>\n<li>strconv：主要是字符串与其他类型的转换，比如整数和布尔</li>\n<li>unicode：主要对字符串中单个字符进行判断，比如：IsLetter、IsDigit、IsUpper等</li>\n</ol>\n</li>\n<li><p>对于参数传值</p>\n<ol>\n<li>形参为数组时，应该考虑指针【因为数组默认采取值传递方式】</li>\n<li>但是如果是切片，切片本质传递的是地址</li>\n</ol>\n</li>\n<li><p>make &amp; new 函数对比说明</p>\n<ol>\n<li>make 主要用于切片、map和chan进行内存分配，返回不是指针，而是类型本身</li>\n<li>new 主要用于结构体，返回类型的指针</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"函数、方法、接口和反射\"><a href=\"#函数、方法、接口和反射\" class=\"headerlink\" title=\"函数、方法、接口和反射\"></a>函数、方法、接口和反射</h2><ol>\n<li><p>函数</p>\n<ol>\n<li><p>定义</p>\n</li>\n<li><p>闭包（保留外部函数的变量）</p>\n</li>\n<li><p>作用域</p>\n</li>\n<li><p>返回值（可多个）</p>\n</li>\n<li><p>变长参数（…）</p>\n</li>\n<li><p>defer关键字：用于释放资源，按照后进先出规则（LIFO）</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f,err := os.Open(<span class=\"string\">&quot;filename&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">  fmt.Println(err)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 关闭资源</span></span><br><span class=\"line\"><span class=\"keyword\">defer</span> f.Close()</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>方法</p>\n<ol>\n<li><p>定义</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义1个结构体</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Rectangle <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">  w,h <span class=\"type\">float64</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 定义方法</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(r Rectangle)</span></span> area() <span class=\"type\">float64</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> r.w * r.h</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>接口</p>\n<ol>\n<li><p>定义</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> ShapeDesc <span class=\"keyword\">interface</span> &#123;</span><br><span class=\"line\">  Area() <span class=\"type\">float64</span></span><br><span class=\"line\">  Perimeter() <span class=\"type\">float64</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用</p>\n</li>\n</ol>\n   <figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 前提：结构体需要重写 Area() 和 Perimeter 方法</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> s1,s2 ShapeDesc</span><br><span class=\"line\"><span class=\"comment\">// 类型断言: x.(T),其中 x 相当于变量,T 相当于类型（此处是: type circle struct）</span></span><br><span class=\"line\">_,ok := s1.(circle)</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li><p>接口只能声明方法，没有实现</p>\n</li>\n<li><p>实现接口，必须实现接口内的所有方法（方法名、形参、返回值完全一致）</p>\n</li>\n<li><p>接口声明方法不可重名</p>\n</li>\n<li><p>接口可嵌套</p>\n</li>\n</ol>\n</li>\n<li><p>反射（reflect包）【源码: &#x3D;&#x3D;ScottAI-book&#x2F;ch04&#x2F;4.4&#x2F;main.go&#x3D;&#x3D;】</p>\n<ol>\n<li>reflect.ValueOf(&amp;x) 获取结构体变量地址</li>\n<li>reflect.Elem() 获取地址中的值</li>\n<li>reflect.Type() 获取变量类型</li>\n<li>还有更多用法在 reflect 包中</li>\n<li><span style=\"color: red\"><strong>缺陷：</strong></span>反射可读性较差，性能相对于差，而且是运行时才报错</li>\n</ol>\n</li>\n<li><p>总结</p>\n<ol>\n<li>方法和函数很像，方法在方法名之前加上接收器参数（一般为结构体）</li>\n<li>匿名函数和闭包用法要掌握</li>\n<li>反射一般用于通用函数，一般是框架所做的事情，了解即可</li>\n<li>了解前4部分，go 语言的基础部分已经结束</li>\n<li>go 语言优势在于多线程编程</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"并发编程（核心重点）\"><a href=\"#并发编程（核心重点）\" class=\"headerlink\" title=\"并发编程（核心重点）\"></a>并发编程（核心重点）</h2><blockquote>\n<p>高性能编程 &#x3D; 协程（goroutine）+ 通道 （channel）</p>\n<p>Go 语言将基于CSP（Communicating Sequential Process）模型的并发编程内置到语言中，即协程之间可以共享内存。</p>\n</blockquote>\n<ol>\n<li><p>goroutine 协程： 一种轻量级的线程，使用 Go 语言关键字启动。</p>\n</li>\n<li><p>goroutine 和 系统线程是不一样的</p>\n</li>\n<li><p>所有的 Go 语言都是通过 goroutine 运行的（包括 main 函数）</p>\n</li>\n<li><p>核心概念：进程、线程、goroutine</p>\n<img src=\"../FILES/Go语言基础.md/image-20230823130419796.png\" alt=\"image-20230823130419796\" style=\"zoom:50%;\" />\n</li>\n<li><p>如何运行一个协程？<strong>go 关键字</strong></p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">hello</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  fmt.Println(<span class=\"string\">&quot;Hello World!&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 使用关键字启动协程</span></span><br><span class=\"line\">  <span class=\"keyword\">go</span> hello()</span><br><span class=\"line\">  <span class=\"comment\">// 加上延时</span></span><br><span class=\"line\">  <span class=\"comment\">// 主线程结束会关闭所有协程,从而导致不输出 Hello World</span></span><br><span class=\"line\">  time.Sleep(<span class=\"number\">1</span>*time.Second)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>sync.WaitGroup 去除休眠方式等待协程结束</p>\n</li>\n<li><p>通道（channel）协程间的通信</p>\n<ol>\n<li><p>初始值 nil</p>\n</li>\n<li><p>开启通道关键字 chan</p>\n</li>\n<li><p>关闭通道：close 函数</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 初始化</span></span><br><span class=\"line\">c1 := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"type\">int</span>)</span><br><span class=\"line\"><span class=\"comment\">// 将通道带入协程中</span></span><br><span class=\"line\"><span class=\"keyword\">go</span> writeChan(c1, <span class=\"number\">666</span>)</span><br><span class=\"line\"><span class=\"comment\">// 接收通道数据</span></span><br><span class=\"line\">a := &lt;-c1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 协程中将值写入通道</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">writeChan</span><span class=\"params\">(c <span class=\"keyword\">chan</span> <span class=\"type\">int</span>, x <span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 写入通道该过程是阻塞的,必须有协程接收数据</span></span><br><span class=\"line\">  c &lt;- x</span><br><span class=\"line\">  <span class=\"comment\">// 关闭通道</span></span><br><span class=\"line\">  <span class=\"built_in\">close</span>(c)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>通道方向：单向 &amp; 双向（默认）</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 默认通道——双向</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">one</span><span class=\"params\">(c <span class=\"keyword\">chan</span> <span class=\"type\">int</span>,x <span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 向通道c写入数据x</span></span><br><span class=\"line\">  c &lt;- x</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// out 通道只写, in 通道只读</span></span><br><span class=\"line\"><span class=\"comment\">// 箭头流向: 指向chan是写,指向变量是读</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">two</span><span class=\"params\">(out <span class=\"keyword\">chan</span>&lt;- <span class=\"type\">int</span>, in&lt;-<span class=\"keyword\">chan</span> <span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 读取 in 通道,赋值给 v</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> v:= <span class=\"keyword\">range</span> in &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 将数据 v 写入 out 通道</span></span><br><span class=\"line\">    out &lt;- v</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>缓存通道【源码: &#x3D;&#x3D;ScottAI-book&#x2F;ch05&#x2F;5.2&#x2F;buffer&#x2F;main.go&#x3D;&#x3D;】</p>\n<ol>\n<li><p>在创建通道是可以指定队列最大长度</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 指定队列长度: 3</span></span><br><span class=\"line\">c := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"type\">int</span> <span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>尾部插入元素，头部获取元素</p>\n</li>\n<li><p>队列空，接收数据的协程阻塞，等待另一个协程向该通道发送数据</p>\n</li>\n</ol>\n</li>\n<li><p>切换通道 select （可以理解为 switch case）</p>\n<ol>\n<li><p>select 监听通道通信，有通信发生触发相应代码块</p>\n</li>\n<li><p>基本结构</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> &lt;- ch1:</span><br><span class=\"line\">  \tfmt.Println(<span class=\"string\">&quot;从通道1读取数据&quot;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">case</span> ch2 &lt;- <span class=\"number\">1</span>:</span><br><span class=\"line\">  \tfmt.Println(<span class=\"string\">&quot;向通道2写入数据&quot;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">default</span>:</span><br><span class=\"line\">  \tfmt.Println(<span class=\"string\">&quot;前面都不满足的情况&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>只能选择其中1个，都满足的情况会从中抽取1个</p>\n</li>\n<li><p>如果没有写 default，在没有向通道写入数据之前会阻塞</p>\n</li>\n</ol>\n</li>\n<li><p>select 超时问题解决【源码: &#x3D;&#x3D;ScottAI-book&#x2F;ch05&#x2F;5.2&#x2F;timeout1&#x2F;main.go&#x3D;&#x3D;】</p>\n<p><img src=\"/lingtan/../FILES/Go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80.md/image-20230823130507803.png\" alt=\"image-20230823130507803\"></p>\n<ol>\n<li><p>当某个协程向通道写入数据，没有协程接收时，将会死锁。【超时】</p>\n</li>\n<li><p>这时可以通过 select + time.After 去解决【检查】</p>\n</li>\n<li><p>如果可以通过随机数值代替具体数值</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 随机种子</span></span><br><span class=\"line\">rand.Seed(time.Now().UnixNano)</span><br><span class=\"line\"><span class=\"comment\">// 随机数</span></span><br><span class=\"line\">no := rand.Intn(<span class=\"number\">6</span>)</span><br><span class=\"line\"><span class=\"comment\">// 随机秒</span></span><br><span class=\"line\">no *= <span class=\"number\">1000</span></span><br><span class=\"line\">du := time.Duration(<span class=\"type\">int32</span>(no))*time.Millisecond</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ol>\n</li>\n<li><p>管道（pipeline）【源码: &#x3D;&#x3D;ScottAI-book&#x2F;ch05&#x2F;5.3&#x2F;main.go&#x3D;&#x3D;】</p>\n<ol>\n<li>概念：通道（channel）连接协程（goroutine），一个协程输出是另一个协程输入。</li>\n</ol>\n<p><img src=\"/lingtan/../FILES/Go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80.md/image-20230823130528192.png\" alt=\"image-20230823130528192\"></p>\n<ol start=\"2\">\n<li><p>使用管道好处（3点）：</p>\n<ol>\n<li>形成一个清晰的数据流，无需考虑协程和通道之间通信和状态问题</li>\n<li>管道内不需要将数据保存为变量，节省空间</li>\n<li>提高代码可维护度</li>\n</ol>\n</li>\n</ol>\n</li>\n<li><p>小结</p>\n<ol>\n<li>协程（goroutine）</li>\n<li>通道（channel）</li>\n<li>管道（pipeline）</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"包和代码测试\"><a href=\"#包和代码测试\" class=\"headerlink\" title=\"包和代码测试\"></a>包和代码测试</h2><p>前面总结：数据类型、函数、方法、接口、反射、协程、通道、管道。</p>\n<p>编译快原因：</p>\n<ul>\n<li>每个源文件显示声明导入包</li>\n<li>避免循环引用，即有向无环</li>\n<li>编译输出目标文件记录自己的导出信息，以及依赖包导出信息，在一个包内可以编译整个包的文件</li>\n</ul>\n<ol>\n<li><p>包（package）</p>\n<ol>\n<li><p>对于导入的包必须使用（IDE自动管理，无需人工操作）</p>\n</li>\n<li><p>如果是包名冲突，必须起别名【当前文件有效】</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\tcrand <span class=\"string\">&quot;crypto/rand&quot;</span></span><br><span class=\"line\">  <span class=\"string\">&quot;math/rand&quot;</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>可以同python导入全部（import * from xxx）一样，可以简写成 .</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> . <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"comment\">// 使用时, 无需 fmt.Println()</span></span><br><span class=\"line\">Println(<span class=\"string\">&quot;Hello World&quot;</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>空导入，只需要其中的 init 函数，即只编译导入文件但不使用其中函数</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;database/sql&quot;</span></span><br><span class=\"line\">  _ <span class=\"string\">&quot;github.com/go-sql-driver/mysql&quot;</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>包名的别名一般用复数形式，如 bytes、strings等</p>\n</li>\n</ol>\n</li>\n<li><p>Go 工具（Go Tool）: 下载、查询、构建、格式化、测试、安装代码包</p>\n<ol>\n<li><p>运行 <code>go help</code> 查看命令</p>\n</li>\n<li><p><code>GOPATH</code> 环境变量【重要】指定工作区间根目录，有3个子目录</p>\n<ol>\n<li><code>src</code> 存放源文件</li>\n<li><code>pkg</code> 存放编译后的包</li>\n<li><code>bin</code> 存放可执行文件</li>\n</ol>\n</li>\n<li><p><code>GOROOT</code> 环境变量，默认采取Go语言安装目录</p>\n</li>\n<li><p><code>GOOS</code> 和 <code>GOARCH</code> 指定目标操作系统，指定目标处理器（如arm、amd64），交叉编译时会遇到</p>\n</li>\n<li><p>运行 <code>go env</code> 查看各个环境变量及对应的值【太多，掌握 GOPATH 即可】</p>\n</li>\n<li><p>GO 命令</p>\n<ol>\n<li><p><code>go get</code> 从互联网下载包</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 下载mysql 驱动包</span></span><br><span class=\"line\"><span class=\"keyword\">go</span> get -u github.com/<span class=\"keyword\">go</span>-sql-driver/mysql</span><br></pre></td></tr></table></figure>\n\n<p>go-get 包含了安装（go install）和编译（go build）两个步骤</p>\n</li>\n<li><p><code>go build</code> 编译指定源文件，多个源文件用空格隔开</p>\n</li>\n<li><p><code>go install</code> 编译源文件</p>\n</li>\n<li><p><code>go list</code> 查看包信息，查看完整信息：<code>go list -json fmt</code></p>\n</li>\n<li><p><code>go doc</code> 打印输出文档信息</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">go</span> doc fmt.Println</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>godoc</code> 生成体系化的 Web 页面</p>\n</li>\n<li><p><code>go run</code> 运行 go 文件</p>\n</li>\n<li><p><code>go test</code> 测试，一般以 *_test.go 命名【方便 go build 不编译这些文件】，如 one_test.go 文件</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// one_test.go </span></span><br><span class=\"line\"><span class=\"keyword\">package</span> one</span><br><span class=\"line\"><span class=\"comment\">// 测试文件必须引入该包</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;testing&quot;</span></span><br><span class=\"line\"><span class=\"comment\">// 参数写 T</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">TestFun1</span><span class=\"params\">(t *testing.T)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 写测试代码...</span></span><br><span class=\"line\">  <span class=\"comment\">// t.Error(&quot;错误....&quot;)</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>基准测试（Benchmark）</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> final <span class=\"type\">int</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">benchmarkFun1</span><span class=\"params\">(b *testing.B)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> end <span class=\"type\">int</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; b.N; i++ &#123;</span><br><span class=\"line\">    end = fun()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  final = end</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ol>\n</li>\n<li><p>代码优化</p>\n<ol>\n<li>分析代码标准库：runtime&#x2F;pprof，生成性能分析报告</li>\n<li>通过 <code>go tool pprof -help</code> 了解相关用法</li>\n<li>常见问题<ol>\n<li>CPU 占用率高，高负荷运转</li>\n<li>线程（goroutine）死锁，占用资源</li>\n<li>垃圾回收占用时间</li>\n</ol>\n</li>\n</ol>\n</li>\n<li><p>小结</p>\n<ol>\n<li>包的命名</li>\n<li>包的导入【冲突起别名】</li>\n<li>Go 命令</li>\n<li>测试</li>\n<li>性能分析：go tool pprof 和 benchmark</li>\n<li>godoc 文档</li>\n<li>Example 示例函数【go test 命令运用】</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"综合实战案例\"><a href=\"#综合实战案例\" class=\"headerlink\" title=\"综合实战案例\"></a>综合实战案例</h2><p>基本类型、复合类型、函数、方法、接口、反射、协程、通道、管道，和包的管理，bug 定位，性能分析，对 *_test.go 文件的测试，使用 godoc 命令生成文档。基本上 Go 语言基础部分学完了。下一步进阶：竞态与并发、sync 包、context 包、工作池、Go Web 编程、net&#x2F;http 包、Web 框架（如基于httprouter的gin框架、MVC框架Beego）、Web底层服务（TCPSocket、UDPSocket、WebSocket）、中间介、数据库访问（database&#x2F;sql 接口）</p>\n<h2 id=\"框架部分\"><a href=\"#框架部分\" class=\"headerlink\" title=\"框架部分\"></a>框架部分</h2><ol>\n<li>gin: Web框架</li>\n<li>gorm: 数据库框架</li>\n<li>grpc: 远程调用</li>\n<li>etcd：目标是构建一个高可用的分布式键值(key-value)数据库</li>\n<li>go-micro：微服务框架</li>\n</ol>\n<p>微服务框架（对比）：</p>\n<table>\n<thead>\n<tr>\n<th>框架</th>\n<th>团队</th>\n<th>开源时间</th>\n<th>概述</th>\n<th>优势</th>\n<th>缺点</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>go-micro</td>\n<td>国外大佬Asim团队</td>\n<td>2015年</td>\n<td>是最早，最经典的Go微服务框架之一</td>\n<td>轻量级框架，入门简单，文档清晰</td>\n<td>版本兼容性差，社区活跃度一般</td>\n</tr>\n<tr>\n<td>go-zero</td>\n<td>国内大佬万俊峰团队</td>\n<td>2020</td>\n<td>提供了微服务框架需要具备的通用能力</td>\n<td>社区生态非常好，无论是文档更新还是技术群都很活跃</td>\n<td>相比于go-micro比较重，同时也只带一部分的强约束，学习门槛比go-micro略高</td>\n</tr>\n<tr>\n<td>go-kit</td>\n<td>国外大佬</td>\n<td>2015</td>\n<td>Go-kit将自己描述为微服务的标准库。像Go一样，go-kit为您提供可用于构建应用程序的单独包。</td>\n<td>极度轻量级框架</td>\n<td>社区建设一般</td>\n</tr>\n<tr>\n<td>tars-go</td>\n<td>腾讯开源</td>\n<td>2018</td>\n<td>tarsgo是tars这个大的C++重量级微服务框架下的go语言服务框架</td>\n<td>优势在于很多能力不用从头开始做起，直接依托母体tars</td>\n<td>缺点是独立性较差，要选用这个tarsgo的前提，就是要先选用tars这个C++的框架</td>\n</tr>\n<tr>\n<td>dubbo-go</td>\n<td>阿里开源</td>\n<td>2019</td>\n<td>dubbogo是dubbo这个Java重量级微服务框架下的go语言服务框架</td>\n<td>和腾讯开源项目类似</td>\n<td>和腾讯开源项目类似</td>\n</tr>\n<tr>\n<td>go-kratos</td>\n<td>B站开源</td>\n<td>2019</td>\n<td>轻量级的微服务框架，框架定位于解决微服务的核心诉求。</td>\n<td>暂无，后续补充</td>\n<td>暂无，后续补充</td>\n</tr>\n<tr>\n<td>jupiter</td>\n<td>斗鱼开源</td>\n<td>2020</td>\n<td>面向服务治理的Golang微服务框架</td>\n<td>暂无，后续补充</td>\n<td>暂无，后续补充</td>\n</tr>\n</tbody></table>\n<h2 id=\"探索深度\"><a href=\"#探索深度\" class=\"headerlink\" title=\"探索深度\"></a>探索深度</h2><ol>\n<li>操作系统</li>\n<li>数据结构</li>\n<li>分布式一致性</li>\n<li>服务网络</li>\n<li>Kubernetes &amp; Docker</li>\n<li>协程（goroutine） 实现原理</li>\n</ol>\n<hr>\n<p>go 的基本等级：</p>\n<p><strong>初级</strong></p>\n<p>初级呢，只要求掌握Golang的基本语法，懂几个流行的框架和库，能更删改查去做业务就行。一般我会问50%的golang知识点，一般集中在slice、map这块的；30%的数据库知识点，主要考察数据库的索引，事务的隔离，sql语句的优化之类的，也很基础；20%数据结构知识点，数据结构是编程的基础，这个怎么都逃不掉。一句话，能干活就行。</p>\n<p><strong>中级</strong></p>\n<p>中级呢，好歹也要知道一些底层的东西，或者是源码层的东西，什么goroutine的实现原理，什么内存逃逸，还有微服务相关的东西，另外docker和k8s也是必须要问的，主要考察知识的深度和广度，因为可能是小组的组长，要有一定的技术视野。</p>\n<p><strong>高级</strong></p>\n<p>高级呢，偏于项目管理和技术选型，golang应该也没有多少问的，但是也要问一两个golang设计哲学性的问题，比如对泛型怎么看之类的，主要还是对于系统架构和项目的管理的理解，顺便聊聊他之前做过的项目怎么管理，用了哪些技术选型，考量是什么，为什么最后选择了这个放弃了那个，然后碰到过什么坑，是怎么解决的。</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"Go-语言基础\"><a href=\"#Go-语言基础\" class=\"headerlink\" title=\"Go 语言基础\"></a>Go 语言基础</h1><h2 id=\"程序基础\"><a href=\"#程序基础\" class=\"headerlink\" title=\"程序基础\"></a>程序基础</h2><ol>\n<li><p>了解常量和遍历【const var 关键词】</p>\n</li>\n<li><p><code>:=</code> 初始化以及赋值</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 对变量 num 初始化,并赋值为 12</span></span><br><span class=\"line\"><span class=\"comment\">// 之后想修改值不能用 := ,要用 =</span></span><br><span class=\"line\">num := <span class=\"number\">12</span>; </span><br></pre></td></tr></table></figure>\n</li>\n<li><p>for 循环关键字的使用【源码: &#x3D;&#x3D;ScoteAI-book&#x2F;ch01&#x2F;1.4&#x2F;loop.go&#x3D;&#x3D;】</p>\n</li>\n<li><p>指针的使用 【源码: &#x3D;&#x3D;ScottAI-book&#x2F;ch01&#x2F;1.2&#x2F;pointer&#x2F;main.go&#x3D;&#x3D;】</p>\n</li>\n<li><p>net&#x2F;http 的使用 【源码: &#x3D;&#x3D;ScottAI-book&#x2F;ch01&#x2F;1.1&#x2F;helloserver&#x2F;main.go&#x3D;&#x3D;】</p>\n</li>\n<li><p>垃圾回收机制——三色标记法</p>\n<ol>\n<li>白色集合：可能会被垃圾回收</li>\n<li>黑色集合：保证存活</li>\n<li>灰色集合：过渡用的</li>\n</ol>\n<p><img src=\"/lingtan/../FILES/Go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80.md/image-20230823130355000.png\" alt=\"image-20230823130355000\"></p>\n</li>\n<li><p>包及作用域</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 调用其他包的变量</span></span><br><span class=\"line\">package1.num1</span><br><span class=\"line\">package2.num1</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><ol>\n<li><p>基本数据类型</p>\n<ol>\n<li>整型</li>\n<li>浮点型</li>\n<li>复数</li>\n<li>布尔类型</li>\n<li>常量</li>\n<li>字符串（可以看作复合数据类型）</li>\n</ol>\n</li>\n<li><p>复合数据类型</p>\n<ol>\n<li>结构体 （Struct）</li>\n<li>数组</li>\n</ol>\n</li>\n<li><p>引用数据类型</p>\n<ol>\n<li>切片（slice）：切片是对数组的引用，它提供了动态大小、灵活的操作和便捷的切片操作。切片在Go语言中被广泛用于处理和操作数据集合。</li>\n<li>映射（map）：映射是一种无序的键值对集合，也被称为字典或哈希表。它提供了快速的查找和检索操作，用于存储和管理键值对数据。</li>\n<li>通道（channel）：通道是用于在Goroutine之间进行通信和同步的管道。它允许Goroutine之间发送和接收数据，并确保并发安全。</li>\n<li>函数（function）：函数是一种引用类型，可以作为值传递给其他函数，也可以作为返回值。这使得在Go语言中可以灵活地使用函数来实现高阶函数和函数式编程的特性。</li>\n</ol>\n</li>\n<li><p>接口数据类型</p>\n</li>\n<li><p>格式化说明符</p>\n<ol>\n<li><span style=\"color: blue\">%d</span> : 用于格式化整型</li>\n<li><span style=\"color: blue\">%x|%X</span>：用于十六制数字</li>\n<li><span style=\"color: blue\">%0d</span>：用于规定输出定长的整型</li>\n<li><span style=\"color: blue\">%n.mg</span>：用户表示数字n，精确到小数点后 m 位。除了 g ，还有使用 e 和 f</li>\n</ol>\n</li>\n</ol>\n<blockquote>\n<p><span style=\"color: red\">注意：</span></p>\n<p>Go语言中的<strong>指针（pointer）</strong>也是一种&#x3D;&#x3D;引用类型&#x3D;&#x3D;，但它在语义上<span style=\"text-decoration: underline\">更接近于基本类型</span>。指针可以用于间接引用和修改变量的内存地址，但与切片、映射和通道等引用类型有所不同。</p>\n</blockquote>\n<p><strong style=\"color: red\"> 小提示：</strong> 引用类型引用传递，复合类型值传递！</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">类型</th>\n<th align=\"center\">长度</th>\n<th align=\"center\">默认值</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">bool</td>\n<td align=\"center\">1</td>\n<td align=\"center\">false</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">byte</td>\n<td align=\"center\">1</td>\n<td align=\"center\">0</td>\n<td align=\"center\">uint8</td>\n</tr>\n<tr>\n<td align=\"center\">rune</td>\n<td align=\"center\">4</td>\n<td align=\"center\">0</td>\n<td align=\"center\">uint32</td>\n</tr>\n<tr>\n<td align=\"center\">int、uint</td>\n<td align=\"center\">4或8</td>\n<td align=\"center\">0</td>\n<td align=\"center\">32或64</td>\n</tr>\n<tr>\n<td align=\"center\">int8、uint8</td>\n<td align=\"center\">1</td>\n<td align=\"center\">0</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">uint16、uint16</td>\n<td align=\"center\">2</td>\n<td align=\"center\">0</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">int32、uint32</td>\n<td align=\"center\">4</td>\n<td align=\"center\">0</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">int64、uint64</td>\n<td align=\"center\">8</td>\n<td align=\"center\">0</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">float32</td>\n<td align=\"center\">4</td>\n<td align=\"center\">0.0</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">float64</td>\n<td align=\"center\">8</td>\n<td align=\"center\">0.0</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">complex64</td>\n<td align=\"center\">8</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">complex128</td>\n<td align=\"center\">16</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">uSintptr</td>\n<td align=\"center\">4或8</td>\n<td align=\"center\"></td>\n<td align=\"center\">指针类型</td>\n</tr>\n</tbody></table>\n<h2 id=\"字符串与复合数据类型\"><a href=\"#字符串与复合数据类型\" class=\"headerlink\" title=\"字符串与复合数据类型\"></a>字符串与复合数据类型</h2><blockquote>\n<p><span style=\"color: red\">注意：</span> Go 语言中没有对象和类的概念，封装思想都是通过复合类型来实现，比如结构体</p>\n</blockquote>\n<ol>\n<li><p>数组</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 初始化数组</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a [<span class=\"number\">3</span>]<span class=\"type\">int</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b [<span class=\"number\">3</span>]<span class=\"type\">int</span> = [<span class=\"number\">3</span>]<span class=\"type\">int</span>&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;</span><br><span class=\"line\">c := [...]<span class=\"type\">int</span>&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">// 新语法（记一下）index : value</span></span><br><span class=\"line\">d := [...]<span class=\"type\">int</span>&#123;<span class=\"number\">4</span>,<span class=\"number\">4</span>:<span class=\"number\">1</span>,<span class=\"number\">1</span>:<span class=\"number\">2</span>&#125; <span class=\"comment\">// 等同于 [4 2 0 0 1]</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>切片 (slice)：相当于 python 切片</p>\n<ol>\n<li><p>创建切片：使用 make</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s := <span class=\"built_in\">make</span>([]<span class=\"type\">int</span>,<span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果要增加元素，建议采取 <code>append</code> 方法</p>\n</li>\n<li><p>如果要复制，采取 <code>copy</code> 方法【必须是切片，数组复制：<code>a[:]</code>】</p>\n</li>\n<li><p>多维切片可以通过嵌套切片来创建</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个二维切片</span></span><br><span class=\"line\">matrix := [][]<span class=\"type\">int</span>&#123;</span><br><span class=\"line\">  &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>&#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>在删除之前，将要删除元素置为 <code>nil</code> ，否则垃圾回收已删除元素，从而切片容量不会发生变化</p>\n</li>\n</ol>\n</li>\n<li><p>map：相当于python中字典，或者Java中Map</p>\n<ol>\n<li><p>创建 map ,使用 <code>make</code></p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">m := <span class=\"built_in\">make</span>(<span class=\"keyword\">map</span>[<span class=\"type\">string</span>] <span class=\"type\">int</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用其中元素</p>\n</li>\n</ol>\n   <figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">m := <span class=\"keyword\">map</span>[<span class=\"type\">string</span>] <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;k1&quot;</span>: <span class=\"number\">11</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;k2&quot;</span>: <span class=\"number\">22</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fmt.Println(<span class=\"string\">&quot;k1: &quot;</span>, m[<span class=\"string\">&quot;k1&quot;</span>])</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>删除其中元素：使用 <code>delete</code> 函数</li>\n</ol>\n   <figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">delete</span>(m, <span class=\"string\">&quot;k1&quot;</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>结构体（struct）</p>\n<ol>\n<li>定义</li>\n</ol>\n   <figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Person <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tName <span class=\"type\">string</span></span><br><span class=\"line\">\tGender,Age <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><p>同类型可以写在一行，并用 <code>,</code>号隔开</p>\n</li>\n<li><p>初始化结构体</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 初始值 nil</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> p *Person; </span><br><span class=\"line\"><span class=\"comment\">// 初始化结构体</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> pp = <span class=\"built_in\">new</span>(Person)</span><br><span class=\"line\">pp.Name = <span class=\"string\">&quot;张三&quot;</span></span><br><span class=\"line\"><span class=\"comment\">// 初始化并赋值</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> p1 = Person&#123;Name: <span class=\"string\">&quot;张三&quot;</span>, Gender: <span class=\"number\">1</span>, Age: <span class=\"number\">12</span>&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>封装性：属性名首字母大写（public），属性名首字母小写（private）</p>\n</li>\n<li><p>继承性：嵌套结构体（不可以是它自身，但可以有指针指向它自己）</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 父类 Person , 子类 Employee Student</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Person <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tName <span class=\"type\">string</span></span><br><span class=\"line\">\tGender,Age <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Employee <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tp Person</span><br><span class=\"line\">\tSalary <span class=\"type\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Student <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tPerson</span><br><span class=\"line\">\tSchool <span class=\"type\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 赋值操作</span></span><br><span class=\"line\">e := Employee&#123;p:Person&#123;<span class=\"string\">&quot;Scott&quot;</span>,<span class=\"number\">1</span>,<span class=\"number\">30</span>&#125;,Salary:<span class=\"number\">1000</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> s Student</span><br><span class=\"line\">s.Name = <span class=\"string\">&quot;Billy&quot;</span> \t<span class=\"comment\">//相当于 s.Person.Name = &quot;Billy&quot;</span></span><br><span class=\"line\">s.Gender = <span class=\"number\">1</span>\t\t\t<span class=\"comment\">//相当于 s.Person.Gender = 1</span></span><br><span class=\"line\">s.Age = <span class=\"number\">6</span>\t\t\t\t\t<span class=\"comment\">//相当于 s.Person.Age = 6</span></span><br><span class=\"line\">s.School = <span class=\"string\">&quot;xxx 大学&quot;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>JSON（encoding&#x2F;json、encoding&#x2F;xml、encoding&#x2F;asnl）</p>\n</li>\n<li><p>字符串操作常用包：</p>\n<ol>\n<li>strings：提供搜索、比较、切分与字符串连接等</li>\n<li>bytes：如果要对字符串的底层字节进行操作，可以使用 <code>[]bytes</code>类型后进行处理</li>\n<li>strconv：主要是字符串与其他类型的转换，比如整数和布尔</li>\n<li>unicode：主要对字符串中单个字符进行判断，比如：IsLetter、IsDigit、IsUpper等</li>\n</ol>\n</li>\n<li><p>对于参数传值</p>\n<ol>\n<li>形参为数组时，应该考虑指针【因为数组默认采取值传递方式】</li>\n<li>但是如果是切片，切片本质传递的是地址</li>\n</ol>\n</li>\n<li><p>make &amp; new 函数对比说明</p>\n<ol>\n<li>make 主要用于切片、map和chan进行内存分配，返回不是指针，而是类型本身</li>\n<li>new 主要用于结构体，返回类型的指针</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"函数、方法、接口和反射\"><a href=\"#函数、方法、接口和反射\" class=\"headerlink\" title=\"函数、方法、接口和反射\"></a>函数、方法、接口和反射</h2><ol>\n<li><p>函数</p>\n<ol>\n<li><p>定义</p>\n</li>\n<li><p>闭包（保留外部函数的变量）</p>\n</li>\n<li><p>作用域</p>\n</li>\n<li><p>返回值（可多个）</p>\n</li>\n<li><p>变长参数（…）</p>\n</li>\n<li><p>defer关键字：用于释放资源，按照后进先出规则（LIFO）</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f,err := os.Open(<span class=\"string\">&quot;filename&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">  fmt.Println(err)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 关闭资源</span></span><br><span class=\"line\"><span class=\"keyword\">defer</span> f.Close()</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>方法</p>\n<ol>\n<li><p>定义</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义1个结构体</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Rectangle <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">  w,h <span class=\"type\">float64</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 定义方法</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(r Rectangle)</span></span> area() <span class=\"type\">float64</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> r.w * r.h</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>接口</p>\n<ol>\n<li><p>定义</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> ShapeDesc <span class=\"keyword\">interface</span> &#123;</span><br><span class=\"line\">  Area() <span class=\"type\">float64</span></span><br><span class=\"line\">  Perimeter() <span class=\"type\">float64</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用</p>\n</li>\n</ol>\n   <figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 前提：结构体需要重写 Area() 和 Perimeter 方法</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> s1,s2 ShapeDesc</span><br><span class=\"line\"><span class=\"comment\">// 类型断言: x.(T),其中 x 相当于变量,T 相当于类型（此处是: type circle struct）</span></span><br><span class=\"line\">_,ok := s1.(circle)</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li><p>接口只能声明方法，没有实现</p>\n</li>\n<li><p>实现接口，必须实现接口内的所有方法（方法名、形参、返回值完全一致）</p>\n</li>\n<li><p>接口声明方法不可重名</p>\n</li>\n<li><p>接口可嵌套</p>\n</li>\n</ol>\n</li>\n<li><p>反射（reflect包）【源码: &#x3D;&#x3D;ScottAI-book&#x2F;ch04&#x2F;4.4&#x2F;main.go&#x3D;&#x3D;】</p>\n<ol>\n<li>reflect.ValueOf(&amp;x) 获取结构体变量地址</li>\n<li>reflect.Elem() 获取地址中的值</li>\n<li>reflect.Type() 获取变量类型</li>\n<li>还有更多用法在 reflect 包中</li>\n<li><span style=\"color: red\"><strong>缺陷：</strong></span>反射可读性较差，性能相对于差，而且是运行时才报错</li>\n</ol>\n</li>\n<li><p>总结</p>\n<ol>\n<li>方法和函数很像，方法在方法名之前加上接收器参数（一般为结构体）</li>\n<li>匿名函数和闭包用法要掌握</li>\n<li>反射一般用于通用函数，一般是框架所做的事情，了解即可</li>\n<li>了解前4部分，go 语言的基础部分已经结束</li>\n<li>go 语言优势在于多线程编程</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"并发编程（核心重点）\"><a href=\"#并发编程（核心重点）\" class=\"headerlink\" title=\"并发编程（核心重点）\"></a>并发编程（核心重点）</h2><blockquote>\n<p>高性能编程 &#x3D; 协程（goroutine）+ 通道 （channel）</p>\n<p>Go 语言将基于CSP（Communicating Sequential Process）模型的并发编程内置到语言中，即协程之间可以共享内存。</p>\n</blockquote>\n<ol>\n<li><p>goroutine 协程： 一种轻量级的线程，使用 Go 语言关键字启动。</p>\n</li>\n<li><p>goroutine 和 系统线程是不一样的</p>\n</li>\n<li><p>所有的 Go 语言都是通过 goroutine 运行的（包括 main 函数）</p>\n</li>\n<li><p>核心概念：进程、线程、goroutine</p>\n<img src=\"../FILES/Go语言基础.md/image-20230823130419796.png\" alt=\"image-20230823130419796\" style=\"zoom:50%;\" />\n</li>\n<li><p>如何运行一个协程？<strong>go 关键字</strong></p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">hello</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  fmt.Println(<span class=\"string\">&quot;Hello World!&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 使用关键字启动协程</span></span><br><span class=\"line\">  <span class=\"keyword\">go</span> hello()</span><br><span class=\"line\">  <span class=\"comment\">// 加上延时</span></span><br><span class=\"line\">  <span class=\"comment\">// 主线程结束会关闭所有协程,从而导致不输出 Hello World</span></span><br><span class=\"line\">  time.Sleep(<span class=\"number\">1</span>*time.Second)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>sync.WaitGroup 去除休眠方式等待协程结束</p>\n</li>\n<li><p>通道（channel）协程间的通信</p>\n<ol>\n<li><p>初始值 nil</p>\n</li>\n<li><p>开启通道关键字 chan</p>\n</li>\n<li><p>关闭通道：close 函数</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 初始化</span></span><br><span class=\"line\">c1 := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"type\">int</span>)</span><br><span class=\"line\"><span class=\"comment\">// 将通道带入协程中</span></span><br><span class=\"line\"><span class=\"keyword\">go</span> writeChan(c1, <span class=\"number\">666</span>)</span><br><span class=\"line\"><span class=\"comment\">// 接收通道数据</span></span><br><span class=\"line\">a := &lt;-c1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 协程中将值写入通道</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">writeChan</span><span class=\"params\">(c <span class=\"keyword\">chan</span> <span class=\"type\">int</span>, x <span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 写入通道该过程是阻塞的,必须有协程接收数据</span></span><br><span class=\"line\">  c &lt;- x</span><br><span class=\"line\">  <span class=\"comment\">// 关闭通道</span></span><br><span class=\"line\">  <span class=\"built_in\">close</span>(c)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>通道方向：单向 &amp; 双向（默认）</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 默认通道——双向</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">one</span><span class=\"params\">(c <span class=\"keyword\">chan</span> <span class=\"type\">int</span>,x <span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 向通道c写入数据x</span></span><br><span class=\"line\">  c &lt;- x</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// out 通道只写, in 通道只读</span></span><br><span class=\"line\"><span class=\"comment\">// 箭头流向: 指向chan是写,指向变量是读</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">two</span><span class=\"params\">(out <span class=\"keyword\">chan</span>&lt;- <span class=\"type\">int</span>, in&lt;-<span class=\"keyword\">chan</span> <span class=\"type\">int</span>)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 读取 in 通道,赋值给 v</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> v:= <span class=\"keyword\">range</span> in &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 将数据 v 写入 out 通道</span></span><br><span class=\"line\">    out &lt;- v</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>缓存通道【源码: &#x3D;&#x3D;ScottAI-book&#x2F;ch05&#x2F;5.2&#x2F;buffer&#x2F;main.go&#x3D;&#x3D;】</p>\n<ol>\n<li><p>在创建通道是可以指定队列最大长度</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 指定队列长度: 3</span></span><br><span class=\"line\">c := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"type\">int</span> <span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>尾部插入元素，头部获取元素</p>\n</li>\n<li><p>队列空，接收数据的协程阻塞，等待另一个协程向该通道发送数据</p>\n</li>\n</ol>\n</li>\n<li><p>切换通道 select （可以理解为 switch case）</p>\n<ol>\n<li><p>select 监听通道通信，有通信发生触发相应代码块</p>\n</li>\n<li><p>基本结构</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> &lt;- ch1:</span><br><span class=\"line\">  \tfmt.Println(<span class=\"string\">&quot;从通道1读取数据&quot;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">case</span> ch2 &lt;- <span class=\"number\">1</span>:</span><br><span class=\"line\">  \tfmt.Println(<span class=\"string\">&quot;向通道2写入数据&quot;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">default</span>:</span><br><span class=\"line\">  \tfmt.Println(<span class=\"string\">&quot;前面都不满足的情况&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>只能选择其中1个，都满足的情况会从中抽取1个</p>\n</li>\n<li><p>如果没有写 default，在没有向通道写入数据之前会阻塞</p>\n</li>\n</ol>\n</li>\n<li><p>select 超时问题解决【源码: &#x3D;&#x3D;ScottAI-book&#x2F;ch05&#x2F;5.2&#x2F;timeout1&#x2F;main.go&#x3D;&#x3D;】</p>\n<p><img src=\"/lingtan/../FILES/Go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80.md/image-20230823130507803.png\" alt=\"image-20230823130507803\"></p>\n<ol>\n<li><p>当某个协程向通道写入数据，没有协程接收时，将会死锁。【超时】</p>\n</li>\n<li><p>这时可以通过 select + time.After 去解决【检查】</p>\n</li>\n<li><p>如果可以通过随机数值代替具体数值</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 随机种子</span></span><br><span class=\"line\">rand.Seed(time.Now().UnixNano)</span><br><span class=\"line\"><span class=\"comment\">// 随机数</span></span><br><span class=\"line\">no := rand.Intn(<span class=\"number\">6</span>)</span><br><span class=\"line\"><span class=\"comment\">// 随机秒</span></span><br><span class=\"line\">no *= <span class=\"number\">1000</span></span><br><span class=\"line\">du := time.Duration(<span class=\"type\">int32</span>(no))*time.Millisecond</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ol>\n</li>\n<li><p>管道（pipeline）【源码: &#x3D;&#x3D;ScottAI-book&#x2F;ch05&#x2F;5.3&#x2F;main.go&#x3D;&#x3D;】</p>\n<ol>\n<li>概念：通道（channel）连接协程（goroutine），一个协程输出是另一个协程输入。</li>\n</ol>\n<p><img src=\"/lingtan/../FILES/Go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80.md/image-20230823130528192.png\" alt=\"image-20230823130528192\"></p>\n<ol start=\"2\">\n<li><p>使用管道好处（3点）：</p>\n<ol>\n<li>形成一个清晰的数据流，无需考虑协程和通道之间通信和状态问题</li>\n<li>管道内不需要将数据保存为变量，节省空间</li>\n<li>提高代码可维护度</li>\n</ol>\n</li>\n</ol>\n</li>\n<li><p>小结</p>\n<ol>\n<li>协程（goroutine）</li>\n<li>通道（channel）</li>\n<li>管道（pipeline）</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"包和代码测试\"><a href=\"#包和代码测试\" class=\"headerlink\" title=\"包和代码测试\"></a>包和代码测试</h2><p>前面总结：数据类型、函数、方法、接口、反射、协程、通道、管道。</p>\n<p>编译快原因：</p>\n<ul>\n<li>每个源文件显示声明导入包</li>\n<li>避免循环引用，即有向无环</li>\n<li>编译输出目标文件记录自己的导出信息，以及依赖包导出信息，在一个包内可以编译整个包的文件</li>\n</ul>\n<ol>\n<li><p>包（package）</p>\n<ol>\n<li><p>对于导入的包必须使用（IDE自动管理，无需人工操作）</p>\n</li>\n<li><p>如果是包名冲突，必须起别名【当前文件有效】</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\tcrand <span class=\"string\">&quot;crypto/rand&quot;</span></span><br><span class=\"line\">  <span class=\"string\">&quot;math/rand&quot;</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>可以同python导入全部（import * from xxx）一样，可以简写成 .</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> . <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"comment\">// 使用时, 无需 fmt.Println()</span></span><br><span class=\"line\">Println(<span class=\"string\">&quot;Hello World&quot;</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>空导入，只需要其中的 init 函数，即只编译导入文件但不使用其中函数</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;database/sql&quot;</span></span><br><span class=\"line\">  _ <span class=\"string\">&quot;github.com/go-sql-driver/mysql&quot;</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>包名的别名一般用复数形式，如 bytes、strings等</p>\n</li>\n</ol>\n</li>\n<li><p>Go 工具（Go Tool）: 下载、查询、构建、格式化、测试、安装代码包</p>\n<ol>\n<li><p>运行 <code>go help</code> 查看命令</p>\n</li>\n<li><p><code>GOPATH</code> 环境变量【重要】指定工作区间根目录，有3个子目录</p>\n<ol>\n<li><code>src</code> 存放源文件</li>\n<li><code>pkg</code> 存放编译后的包</li>\n<li><code>bin</code> 存放可执行文件</li>\n</ol>\n</li>\n<li><p><code>GOROOT</code> 环境变量，默认采取Go语言安装目录</p>\n</li>\n<li><p><code>GOOS</code> 和 <code>GOARCH</code> 指定目标操作系统，指定目标处理器（如arm、amd64），交叉编译时会遇到</p>\n</li>\n<li><p>运行 <code>go env</code> 查看各个环境变量及对应的值【太多，掌握 GOPATH 即可】</p>\n</li>\n<li><p>GO 命令</p>\n<ol>\n<li><p><code>go get</code> 从互联网下载包</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 下载mysql 驱动包</span></span><br><span class=\"line\"><span class=\"keyword\">go</span> get -u github.com/<span class=\"keyword\">go</span>-sql-driver/mysql</span><br></pre></td></tr></table></figure>\n\n<p>go-get 包含了安装（go install）和编译（go build）两个步骤</p>\n</li>\n<li><p><code>go build</code> 编译指定源文件，多个源文件用空格隔开</p>\n</li>\n<li><p><code>go install</code> 编译源文件</p>\n</li>\n<li><p><code>go list</code> 查看包信息，查看完整信息：<code>go list -json fmt</code></p>\n</li>\n<li><p><code>go doc</code> 打印输出文档信息</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">go</span> doc fmt.Println</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>godoc</code> 生成体系化的 Web 页面</p>\n</li>\n<li><p><code>go run</code> 运行 go 文件</p>\n</li>\n<li><p><code>go test</code> 测试，一般以 *_test.go 命名【方便 go build 不编译这些文件】，如 one_test.go 文件</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// one_test.go </span></span><br><span class=\"line\"><span class=\"keyword\">package</span> one</span><br><span class=\"line\"><span class=\"comment\">// 测试文件必须引入该包</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;testing&quot;</span></span><br><span class=\"line\"><span class=\"comment\">// 参数写 T</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">TestFun1</span><span class=\"params\">(t *testing.T)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 写测试代码...</span></span><br><span class=\"line\">  <span class=\"comment\">// t.Error(&quot;错误....&quot;)</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>基准测试（Benchmark）</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> final <span class=\"type\">int</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">benchmarkFun1</span><span class=\"params\">(b *testing.B)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> end <span class=\"type\">int</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; b.N; i++ &#123;</span><br><span class=\"line\">    end = fun()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  final = end</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ol>\n</li>\n<li><p>代码优化</p>\n<ol>\n<li>分析代码标准库：runtime&#x2F;pprof，生成性能分析报告</li>\n<li>通过 <code>go tool pprof -help</code> 了解相关用法</li>\n<li>常见问题<ol>\n<li>CPU 占用率高，高负荷运转</li>\n<li>线程（goroutine）死锁，占用资源</li>\n<li>垃圾回收占用时间</li>\n</ol>\n</li>\n</ol>\n</li>\n<li><p>小结</p>\n<ol>\n<li>包的命名</li>\n<li>包的导入【冲突起别名】</li>\n<li>Go 命令</li>\n<li>测试</li>\n<li>性能分析：go tool pprof 和 benchmark</li>\n<li>godoc 文档</li>\n<li>Example 示例函数【go test 命令运用】</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"综合实战案例\"><a href=\"#综合实战案例\" class=\"headerlink\" title=\"综合实战案例\"></a>综合实战案例</h2><p>基本类型、复合类型、函数、方法、接口、反射、协程、通道、管道，和包的管理，bug 定位，性能分析，对 *_test.go 文件的测试，使用 godoc 命令生成文档。基本上 Go 语言基础部分学完了。下一步进阶：竞态与并发、sync 包、context 包、工作池、Go Web 编程、net&#x2F;http 包、Web 框架（如基于httprouter的gin框架、MVC框架Beego）、Web底层服务（TCPSocket、UDPSocket、WebSocket）、中间介、数据库访问（database&#x2F;sql 接口）</p>\n<h2 id=\"框架部分\"><a href=\"#框架部分\" class=\"headerlink\" title=\"框架部分\"></a>框架部分</h2><ol>\n<li>gin: Web框架</li>\n<li>gorm: 数据库框架</li>\n<li>grpc: 远程调用</li>\n<li>etcd：目标是构建一个高可用的分布式键值(key-value)数据库</li>\n<li>go-micro：微服务框架</li>\n</ol>\n<p>微服务框架（对比）：</p>\n<table>\n<thead>\n<tr>\n<th>框架</th>\n<th>团队</th>\n<th>开源时间</th>\n<th>概述</th>\n<th>优势</th>\n<th>缺点</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>go-micro</td>\n<td>国外大佬Asim团队</td>\n<td>2015年</td>\n<td>是最早，最经典的Go微服务框架之一</td>\n<td>轻量级框架，入门简单，文档清晰</td>\n<td>版本兼容性差，社区活跃度一般</td>\n</tr>\n<tr>\n<td>go-zero</td>\n<td>国内大佬万俊峰团队</td>\n<td>2020</td>\n<td>提供了微服务框架需要具备的通用能力</td>\n<td>社区生态非常好，无论是文档更新还是技术群都很活跃</td>\n<td>相比于go-micro比较重，同时也只带一部分的强约束，学习门槛比go-micro略高</td>\n</tr>\n<tr>\n<td>go-kit</td>\n<td>国外大佬</td>\n<td>2015</td>\n<td>Go-kit将自己描述为微服务的标准库。像Go一样，go-kit为您提供可用于构建应用程序的单独包。</td>\n<td>极度轻量级框架</td>\n<td>社区建设一般</td>\n</tr>\n<tr>\n<td>tars-go</td>\n<td>腾讯开源</td>\n<td>2018</td>\n<td>tarsgo是tars这个大的C++重量级微服务框架下的go语言服务框架</td>\n<td>优势在于很多能力不用从头开始做起，直接依托母体tars</td>\n<td>缺点是独立性较差，要选用这个tarsgo的前提，就是要先选用tars这个C++的框架</td>\n</tr>\n<tr>\n<td>dubbo-go</td>\n<td>阿里开源</td>\n<td>2019</td>\n<td>dubbogo是dubbo这个Java重量级微服务框架下的go语言服务框架</td>\n<td>和腾讯开源项目类似</td>\n<td>和腾讯开源项目类似</td>\n</tr>\n<tr>\n<td>go-kratos</td>\n<td>B站开源</td>\n<td>2019</td>\n<td>轻量级的微服务框架，框架定位于解决微服务的核心诉求。</td>\n<td>暂无，后续补充</td>\n<td>暂无，后续补充</td>\n</tr>\n<tr>\n<td>jupiter</td>\n<td>斗鱼开源</td>\n<td>2020</td>\n<td>面向服务治理的Golang微服务框架</td>\n<td>暂无，后续补充</td>\n<td>暂无，后续补充</td>\n</tr>\n</tbody></table>\n<h2 id=\"探索深度\"><a href=\"#探索深度\" class=\"headerlink\" title=\"探索深度\"></a>探索深度</h2><ol>\n<li>操作系统</li>\n<li>数据结构</li>\n<li>分布式一致性</li>\n<li>服务网络</li>\n<li>Kubernetes &amp; Docker</li>\n<li>协程（goroutine） 实现原理</li>\n</ol>\n<hr>\n<p>go 的基本等级：</p>\n<p><strong>初级</strong></p>\n<p>初级呢，只要求掌握Golang的基本语法，懂几个流行的框架和库，能更删改查去做业务就行。一般我会问50%的golang知识点，一般集中在slice、map这块的；30%的数据库知识点，主要考察数据库的索引，事务的隔离，sql语句的优化之类的，也很基础；20%数据结构知识点，数据结构是编程的基础，这个怎么都逃不掉。一句话，能干活就行。</p>\n<p><strong>中级</strong></p>\n<p>中级呢，好歹也要知道一些底层的东西，或者是源码层的东西，什么goroutine的实现原理，什么内存逃逸，还有微服务相关的东西，另外docker和k8s也是必须要问的，主要考察知识的深度和广度，因为可能是小组的组长，要有一定的技术视野。</p>\n<p><strong>高级</strong></p>\n<p>高级呢，偏于项目管理和技术选型，golang应该也没有多少问的，但是也要问一两个golang设计哲学性的问题，比如对泛型怎么看之类的，主要还是对于系统架构和项目的管理的理解，顺便聊聊他之前做过的项目怎么管理，用了哪些技术选型，考量是什么，为什么最后选择了这个放弃了那个，然后碰到过什么坑，是怎么解决的。</p>\n"},{"title":"快速上手 VuePress","date":"2024-03-05T07:14:41.928Z","updated":"2024-03-05T07:14:06.296Z","cover":"https://vuepress.vuejs.org/hero.png","_content":"\n\n\n# 快速上手 VuePress\n\n## 依赖环境\n\n- pnpm 7.29.3\n- vue  3.3.4\n- vuepress 2.0.0-beta.62\n\n## 安装：\n\n- <b>步骤1: </b> 创建并进入一个目录\n\n- <b>步骤2:</b> 初始化项目\n\n  ```sh\n  pnpm init\n  ```\n\n- <b>步骤3:</b> 添加本地依赖\n\n  ```sh\n  pnpm add -D vuepress@next @vuepress/client@next vue\n  ```\n\n- <b>步骤4:</b> 在 `package.json` 文件中添加 script\n\n  ```json\n  {\n    \"scripts\": {\n      \"docs:dev\": \"vuepress dev docs\",\n      \"docs:build\": \"vuepress build docs\"\n    }\n  }\n  ```\n\n- <b>步骤5:</b> 创建第一篇文档\n\n  新建一个 docs 目录\n\n  ```sh\n  mkdir docs\n  ```\n\n  新建一个 markdown 文件，并写入内容\n\n  ![](../FILES/VuePress.md/image-20230823133339149.png)\n\n- <b>步骤6:</b> 在本地启动服务器\n\n  ```sh\n  pnpm docs:dev\n  ```\n\n{% note success %}\nVuePress 会在 `http://localhost:8080/` 启动一个热重载的开发服务器。当你修改你的 Markdown 文件时，浏览器中的内容也会自动更新。\n{% endnote %}\n\n整个 VuePress 搭建完成！","source":"_posts/VuePress.md","raw":"---\ntitle: 快速上手 VuePress\ndate: \nupdated:\ntags: vue\ncategories: 前端\ncover: https://vuepress.vuejs.org/hero.png\n---\n\n\n\n# 快速上手 VuePress\n\n## 依赖环境\n\n- pnpm 7.29.3\n- vue  3.3.4\n- vuepress 2.0.0-beta.62\n\n## 安装：\n\n- <b>步骤1: </b> 创建并进入一个目录\n\n- <b>步骤2:</b> 初始化项目\n\n  ```sh\n  pnpm init\n  ```\n\n- <b>步骤3:</b> 添加本地依赖\n\n  ```sh\n  pnpm add -D vuepress@next @vuepress/client@next vue\n  ```\n\n- <b>步骤4:</b> 在 `package.json` 文件中添加 script\n\n  ```json\n  {\n    \"scripts\": {\n      \"docs:dev\": \"vuepress dev docs\",\n      \"docs:build\": \"vuepress build docs\"\n    }\n  }\n  ```\n\n- <b>步骤5:</b> 创建第一篇文档\n\n  新建一个 docs 目录\n\n  ```sh\n  mkdir docs\n  ```\n\n  新建一个 markdown 文件，并写入内容\n\n  ![](../FILES/VuePress.md/image-20230823133339149.png)\n\n- <b>步骤6:</b> 在本地启动服务器\n\n  ```sh\n  pnpm docs:dev\n  ```\n\n{% note success %}\nVuePress 会在 `http://localhost:8080/` 启动一个热重载的开发服务器。当你修改你的 Markdown 文件时，浏览器中的内容也会自动更新。\n{% endnote %}\n\n整个 VuePress 搭建完成！","slug":"VuePress","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmod00091kv20ist24gp","content":"<h1 id=\"快速上手-VuePress\"><a href=\"#快速上手-VuePress\" class=\"headerlink\" title=\"快速上手 VuePress\"></a>快速上手 VuePress</h1><h2 id=\"依赖环境\"><a href=\"#依赖环境\" class=\"headerlink\" title=\"依赖环境\"></a>依赖环境</h2><ul>\n<li>pnpm 7.29.3</li>\n<li>vue  3.3.4</li>\n<li>vuepress 2.0.0-beta.62</li>\n</ul>\n<h2 id=\"安装：\"><a href=\"#安装：\" class=\"headerlink\" title=\"安装：\"></a>安装：</h2><ul>\n<li><p><b>步骤1: </b> 创建并进入一个目录</p>\n</li>\n<li><p><b>步骤2:</b> 初始化项目</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pnpm init</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><b>步骤3:</b> 添加本地依赖</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pnpm add -D vuepress@next @vuepress/client@next vue</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><b>步骤4:</b> 在 <code>package.json</code> 文件中添加 script</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;docs:dev&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;vuepress dev docs&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;docs:build&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;vuepress build docs&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><b>步骤5:</b> 创建第一篇文档</p>\n<p>新建一个 docs 目录</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> docs</span><br></pre></td></tr></table></figure>\n\n<p>新建一个 markdown 文件，并写入内容</p>\n<p><img src=\"/lingtan/../FILES/VuePress.md/image-20230823133339149.png\"></p>\n</li>\n<li><p><b>步骤6:</b> 在本地启动服务器</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pnpm docs:dev</span><br></pre></td></tr></table></figure></li>\n</ul>\n<div class=\"note success flat\"><p>VuePress 会在 <code>http://localhost:8080/</code> 启动一个热重载的开发服务器。当你修改你的 Markdown 文件时，浏览器中的内容也会自动更新。</p>\n</div>\n\n<p>整个 VuePress 搭建完成！</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"快速上手-VuePress\"><a href=\"#快速上手-VuePress\" class=\"headerlink\" title=\"快速上手 VuePress\"></a>快速上手 VuePress</h1><h2 id=\"依赖环境\"><a href=\"#依赖环境\" class=\"headerlink\" title=\"依赖环境\"></a>依赖环境</h2><ul>\n<li>pnpm 7.29.3</li>\n<li>vue  3.3.4</li>\n<li>vuepress 2.0.0-beta.62</li>\n</ul>\n<h2 id=\"安装：\"><a href=\"#安装：\" class=\"headerlink\" title=\"安装：\"></a>安装：</h2><ul>\n<li><p><b>步骤1: </b> 创建并进入一个目录</p>\n</li>\n<li><p><b>步骤2:</b> 初始化项目</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pnpm init</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><b>步骤3:</b> 添加本地依赖</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pnpm add -D vuepress@next @vuepress/client@next vue</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><b>步骤4:</b> 在 <code>package.json</code> 文件中添加 script</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;docs:dev&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;vuepress dev docs&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;docs:build&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;vuepress build docs&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><b>步骤5:</b> 创建第一篇文档</p>\n<p>新建一个 docs 目录</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> docs</span><br></pre></td></tr></table></figure>\n\n<p>新建一个 markdown 文件，并写入内容</p>\n<p><img src=\"/lingtan/../FILES/VuePress.md/image-20230823133339149.png\"></p>\n</li>\n<li><p><b>步骤6:</b> 在本地启动服务器</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pnpm docs:dev</span><br></pre></td></tr></table></figure></li>\n</ul>\n<div class=\"note success flat\"><p>VuePress 会在 <code>http://localhost:8080/</code> 启动一个热重载的开发服务器。当你修改你的 Markdown 文件时，浏览器中的内容也会自动更新。</p>\n</div>\n\n<p>整个 VuePress 搭建完成！</p>\n"},{"title":"docker","date":"2024-03-05T07:14:41.855Z","updated":"2024-03-05T07:14:06.296Z","cover":"./images/docker.png","_content":"# docker\n\n首先卸载掉旧版本\n\n```sh\nsudo apt-get remove docker docker-engine docker.io containerd runc\n```\n\n## 下载\n\n参考文章：http://www.taodudu.cc/news/show-5875688.html?action=onClick\n\n### 添加仓库\n\n文件: `/etc/apt/sources.list`\n\n通过 vim 打开文件，并在最后添加源\n\n```sh\nsudo vim /etc/apt/sources.list\n```\n\n![Img](../FILES/docker.md/img-20230617154152.png)\n\n### 安装\n\n```sh\nsudo apt-get install docker-ce docker-ce-cli containerd.io\n```\n\n![Img](../FILES/docker.md/img-20230617154328.png)\n\n等待安装完毕...(耗时46秒)\n\n### 启动 docker\n\n```sh\nsystemctl start docker\n```\n\n会提示输入密码，deepin 也可以人脸识别。\n\n### 查看 docker 版本\n\n```sh\ndocker --version\n```\n\n![Img](../FILES/docker.md/img-20230617154722.png)\n\ndocker-ce 查看\n\n```sh\ndocker version\n```\n\n\n![Img](../FILES/docker.md/img-20230617161038.png)\n\n### 切换国内加速器\n\n这里采取阿里云加速地址: https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors\n\n{%note success no-icon flat%} \n\ndetails 配置文件说明\n\n{% endnote %}\n\n1. 当你下载安装的Docker Version不低于1.10时，建议直接通过daemon config进行配置。\n2. 使用配置文件 <span style=\"background-color: yellow\">/etc/docker/daemon.json</span>（没有时新建该文件）\n    ```json\n    {\n        \"registry-mirrors\": [\"<your accelerate address>\"]\n    }\n    ```\n3. 重启 Docker Daemon\n\n{%note info no-icon flat%} \n\n具体操作如下：\n\n{% endnote %}\n\n需要管理员权限：sudo \n\n```sh\nsudo vim /etc/docker/daemon.json\n```\n\n![Img](../FILES/docker.md/img-20230617161249.png)\n\n重新启动 docker\n\n```sh\nsudo systemctl daemon-reload\n```\n\n```sh\nsudo systemctl restart docker\n```\n\n\n\n\n\n\n\n","source":"_posts/docker.md","raw":"---\ntitle: docker\ndate: \nupdated:\ntags: linux\ncategories: linux\ncover: ./images/docker.png\n---\n# docker\n\n首先卸载掉旧版本\n\n```sh\nsudo apt-get remove docker docker-engine docker.io containerd runc\n```\n\n## 下载\n\n参考文章：http://www.taodudu.cc/news/show-5875688.html?action=onClick\n\n### 添加仓库\n\n文件: `/etc/apt/sources.list`\n\n通过 vim 打开文件，并在最后添加源\n\n```sh\nsudo vim /etc/apt/sources.list\n```\n\n![Img](../FILES/docker.md/img-20230617154152.png)\n\n### 安装\n\n```sh\nsudo apt-get install docker-ce docker-ce-cli containerd.io\n```\n\n![Img](../FILES/docker.md/img-20230617154328.png)\n\n等待安装完毕...(耗时46秒)\n\n### 启动 docker\n\n```sh\nsystemctl start docker\n```\n\n会提示输入密码，deepin 也可以人脸识别。\n\n### 查看 docker 版本\n\n```sh\ndocker --version\n```\n\n![Img](../FILES/docker.md/img-20230617154722.png)\n\ndocker-ce 查看\n\n```sh\ndocker version\n```\n\n\n![Img](../FILES/docker.md/img-20230617161038.png)\n\n### 切换国内加速器\n\n这里采取阿里云加速地址: https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors\n\n{%note success no-icon flat%} \n\ndetails 配置文件说明\n\n{% endnote %}\n\n1. 当你下载安装的Docker Version不低于1.10时，建议直接通过daemon config进行配置。\n2. 使用配置文件 <span style=\"background-color: yellow\">/etc/docker/daemon.json</span>（没有时新建该文件）\n    ```json\n    {\n        \"registry-mirrors\": [\"<your accelerate address>\"]\n    }\n    ```\n3. 重启 Docker Daemon\n\n{%note info no-icon flat%} \n\n具体操作如下：\n\n{% endnote %}\n\n需要管理员权限：sudo \n\n```sh\nsudo vim /etc/docker/daemon.json\n```\n\n![Img](../FILES/docker.md/img-20230617161249.png)\n\n重新启动 docker\n\n```sh\nsudo systemctl daemon-reload\n```\n\n```sh\nsudo systemctl restart docker\n```\n\n\n\n\n\n\n\n","slug":"docker","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmoe000b1kv2dlmkh0zm","content":"<h1 id=\"docker\"><a href=\"#docker\" class=\"headerlink\" title=\"docker\"></a>docker</h1><p>首先卸载掉旧版本</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get remove docker docker-engine docker.io containerd runc</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>参考文章：<a href=\"http://www.taodudu.cc/news/show-5875688.html?action=onClick\">http://www.taodudu.cc/news/show-5875688.html?action=onClick</a></p>\n<h3 id=\"添加仓库\"><a href=\"#添加仓库\" class=\"headerlink\" title=\"添加仓库\"></a>添加仓库</h3><p>文件: <code>/etc/apt/sources.list</code></p>\n<p>通过 vim 打开文件，并在最后添加源</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/docker.md/img-20230617154152.png\" alt=\"Img\"></p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/docker.md/img-20230617154328.png\" alt=\"Img\"></p>\n<p>等待安装完毕…(耗时46秒)</p>\n<h3 id=\"启动-docker\"><a href=\"#启动-docker\" class=\"headerlink\" title=\"启动 docker\"></a>启动 docker</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start docker</span><br></pre></td></tr></table></figure>\n\n<p>会提示输入密码，deepin 也可以人脸识别。</p>\n<h3 id=\"查看-docker-版本\"><a href=\"#查看-docker-版本\" class=\"headerlink\" title=\"查看 docker 版本\"></a>查看 docker 版本</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker --version</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/docker.md/img-20230617154722.png\" alt=\"Img\"></p>\n<p>docker-ce 查看</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker version</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/lingtan/../FILES/docker.md/img-20230617161038.png\" alt=\"Img\"></p>\n<h3 id=\"切换国内加速器\"><a href=\"#切换国内加速器\" class=\"headerlink\" title=\"切换国内加速器\"></a>切换国内加速器</h3><p>这里采取阿里云加速地址: <a href=\"https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors\">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors</a></p>\n<div class=\"note success no-icon flat\"><p>details 配置文件说明</p>\n</div>\n\n<ol>\n<li>当你下载安装的Docker Version不低于1.10时，建议直接通过daemon config进行配置。</li>\n<li>使用配置文件 <span style=\"background-color: yellow\">&#x2F;etc&#x2F;docker&#x2F;daemon.json</span>（没有时新建该文件） <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;registry-mirrors&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;&lt;your accelerate address&gt;&quot;</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure></li>\n<li>重启 Docker Daemon</li>\n</ol>\n<div class=\"note info no-icon flat\"><p>具体操作如下：</p>\n</div>\n\n<p>需要管理员权限：sudo </p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/docker.md/img-20230617161249.png\" alt=\"Img\"></p>\n<p>重新启动 docker</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"docker\"><a href=\"#docker\" class=\"headerlink\" title=\"docker\"></a>docker</h1><p>首先卸载掉旧版本</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get remove docker docker-engine docker.io containerd runc</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>参考文章：<a href=\"http://www.taodudu.cc/news/show-5875688.html?action=onClick\">http://www.taodudu.cc/news/show-5875688.html?action=onClick</a></p>\n<h3 id=\"添加仓库\"><a href=\"#添加仓库\" class=\"headerlink\" title=\"添加仓库\"></a>添加仓库</h3><p>文件: <code>/etc/apt/sources.list</code></p>\n<p>通过 vim 打开文件，并在最后添加源</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/docker.md/img-20230617154152.png\" alt=\"Img\"></p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/docker.md/img-20230617154328.png\" alt=\"Img\"></p>\n<p>等待安装完毕…(耗时46秒)</p>\n<h3 id=\"启动-docker\"><a href=\"#启动-docker\" class=\"headerlink\" title=\"启动 docker\"></a>启动 docker</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start docker</span><br></pre></td></tr></table></figure>\n\n<p>会提示输入密码，deepin 也可以人脸识别。</p>\n<h3 id=\"查看-docker-版本\"><a href=\"#查看-docker-版本\" class=\"headerlink\" title=\"查看 docker 版本\"></a>查看 docker 版本</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker --version</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/docker.md/img-20230617154722.png\" alt=\"Img\"></p>\n<p>docker-ce 查看</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker version</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/lingtan/../FILES/docker.md/img-20230617161038.png\" alt=\"Img\"></p>\n<h3 id=\"切换国内加速器\"><a href=\"#切换国内加速器\" class=\"headerlink\" title=\"切换国内加速器\"></a>切换国内加速器</h3><p>这里采取阿里云加速地址: <a href=\"https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors\">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors</a></p>\n<div class=\"note success no-icon flat\"><p>details 配置文件说明</p>\n</div>\n\n<ol>\n<li>当你下载安装的Docker Version不低于1.10时，建议直接通过daemon config进行配置。</li>\n<li>使用配置文件 <span style=\"background-color: yellow\">&#x2F;etc&#x2F;docker&#x2F;daemon.json</span>（没有时新建该文件） <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;registry-mirrors&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;&lt;your accelerate address&gt;&quot;</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure></li>\n<li>重启 Docker Daemon</li>\n</ol>\n<div class=\"note info no-icon flat\"><p>具体操作如下：</p>\n</div>\n\n<p>需要管理员权限：sudo </p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/docker.md/img-20230617161249.png\" alt=\"Img\"></p>\n<p>重新启动 docker</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n"},{"title":"MongoDB 数据库","date":"2024-03-05T07:14:41.895Z","updated":"2024-03-05T07:14:06.296Z","cover":"https://s1.ax1x.com/2023/07/12/pCfbg0A.png","_content":"\n# 安装数据库\n\n1. 下载\n\n下载地址：[Download MongoDB Community Server | MongoDB](https://www.mongodb.com/try/download/community)\n\n![image-20230712185247305](../FILES/MongoDB数据库.md/image-20230712185247305.png)\n\n根据提示选择不同的版本、平台以及安装形式，在这里采取{% label 默认 orange %} 即可。\n\n点击绿色按钮 Download 即可下载。\n\n文件较大，请耐心等待...\n\n> 安装包信息：\n>\n> 文件大小： 482.433MB\n>\n> 下载耗时：5~8分钟（根据自己的情况而定）\n\n2. 安装\n\n双击下载的文件：mongodb-windows-x86_64-6.0.7-signed.msi\n\n![image-20230712190525028](../FILES/MongoDB数据库.md/image-20230712190525028.png)\n\n选择自定义安装。\n\n![image-20230712190603575](../FILES/MongoDB数据库.md/image-20230712190603575.png)\n\n选择 {% label D盘 blue %} ，建议。\n\n![image-20230712190710947](../FILES/MongoDB数据库.md/image-20230712190710947.png)\n\n默认即可，数据目录（Data Directory）和日志目录（Log Directory）记住。\n\n剩下的，全部下一步（Next > ）即可。\n\n![image-20230712190915728](../FILES/MongoDB数据库.md/image-20230712190915728.png)\n\n等待安装完毕！安装完后，会自动弹出 Compass (一个可视化数据库管理页面)。\n\n# 基本命令\n\n## 数据库的创建\n\n切换数据库（如果没有，会在内存中创建一个新的数据库）\n\n```shell\nuse fly_articleDb;\n```\n\n使用 db 查看当前数据库\n\n```shell\ndb\n```\n\n删除当前数据库\n\n```shell\ndb.dropDatabase();\n```\n\n## 集合的相关操作\n\n> Collection 在数据库中的集合，里面可以有多条记录（Json数据）\n\n可以等同于 Mysql 中的数据表。\n\n{% note success %}\n\n通常我们一般隐式创建，我们不需要关注集合是如何创建的。\n\n{% endnote %}\n\n创建一个集合\n\n```shell\ndb.createCollection(\"test\")\n```\n\n查看当前数据库下的集合\n\n```shell\nshow collections\n```\n\n删除集合（这里以 {% label test orange %} 为例）,这里的 test 应该换成响应的集合名称。\n\n```shell\ndb.test.drop();\n```\n\n## 文档的相关操作\n\n> 都是以 JSON 为主。集合名可以存在，也可以不存在（隐式创建）。\n\n增加数据。\n\n```shell\ndb.集合名.insertOne(传入json数据)\n```\n\n查找数据\n\n```shell\ndb.集合名.find()\ndb.集合名.findOne(); # 只查询一条记录\ndb.集合名.find(传入json数据进行筛选)\ndb.集合名.find(传入json数据, {字段: 1, 字段: 0}) # 其中1表示显示,0表示隐藏\n```\n\n插入多条数据\n\n```shell\ndb.集合名.insertMany(传入json数据) # 其中传入的 json 数据，以 [] 开头和结尾\n```\n\n修改数据。其中 $set 还有 $inc 等...\n\n对于要将字符串转变成数字，可以采取 {% label NumberInt blue %} 进行包裹。\n\n```shell\ndb.集合名.updateOne({查询条件}, {$set: {修改数据部分}})\n```\n\n其余方法可以尝试：\n\n- updateMany\n- updateOne\n- updateSearchIndex\n\n删除数据\n\n```shell\ndb.集合名.remove(查询条件)\n```\n\n删除所有数据\n\n```shell\ndb.集合名.remove({})\n```\n\n## 文档的分页查询\n\n查询总个数\n\n```shell\ndb.集合名.countDocuments()\n```\n\n分页查询：limit 和 skip\n\n- limit 限制查询条数，等同于每页显示多少条\n- skip 跳过前面条数\n\n```shell\ndb.集合名.find().limit(数字)\ndb.集合名.find().limit(数字).skip(数字)\n```\n\n排序：sort，根据传入的字段决定是升序（1）还是倒序（-1）\n\n```shell\ndb.集合.find().sort({传入json数据})\n```\n\n## 文档的其他查询\n\n正则查询。\n\n基本格式如下：\n\n```shell\ndb.集合名.find({字段: /正则表达式/})\n```\n\n查询的其他方式：\n\n- $gt 大于\n- $lt 小于\n- $gte 大于等于\n- $lte 小于等于\n- $ne 不等于\n- $in 包含查询，等同于 mysql 的 in 查询\n\n```shell\ndb.集合名.find({userId: {$in: [1,2]}})\n```\n\n- $nin 不包含查询\n- $and 并列运算\n\n```shell\ndb.集合名.find({$and: [{}, {}]})\n```\n\n- $or 或运算，和 $and 类似\n\n# 索引\n\n索引有 单索引、复合索引以及其他索引。\n\n查看索引\n\n```shell\ndb.集合名.getIndexes()\n```\n\n创建索引\n\n```shell\ndb.集合名.createIndex({字段: 1}) # 1 表示升序 , -1 表示降序\n```\n\n删除索引\n\n```shell\ndb.集合名.dropIndex(索引名称)\n```\n\n删除所有索引\n\n```shell\ndb.集合名.dropIndexes()\n```\n\n# NodeJs 操作 Mongodb \n\n安装 npm 包\n\n```shell\nnpm i mongodb\n```\n\n基本模板，操作 mongodb。一般情况下都是异步获取\n\n```js\nconst MongoClient = require('mongodb').MongoClient;\n// 数据库可以更改\nconst db_name = \"fly_articleDb\";\nconst url = 'mongodb://127.0.0.1:27017';\n\n(async function () {\n    const client = new MongoClient(url);\n\n    try {\n        // 1. 连接 mongodb 数据库\n        await client.connect();\n        console.log(\"连接成功...\");\n        // 2. 使用数据库fly_articleDb\n        const db = client.db(db_name);\n        // 3. 通过数据库得到相应的集合test【这里也可以操作自己的集合】\n        const test = db.collection(\"test\");\n        // 4. 查询 test 集合中的文档【这里只是查询，其他方法跟mongodb类似】\n        const test_list = test.find();\n        // 判断是否有文档\n        while (await test_list.hasNext()) {\n            // 获取该条数据\n            const currentData = await test_list.next();\n            console.log(currentData);\n        }\n    } catch (e) {\n        console.log(e);\n    }\n    await client.close();\n    console.log(\"mongodb已关闭...\");\n})();\n```\n\n![image-20230713123234366](../FILES/MongoDB数据库.md/image-20230713123234366.png)\n\n# SpringBoot 操作 mongodb\n\n创建 springboot ，并且添加依赖。\n\n```xml\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-data-mongodb</artifactId>\n</dependency>\n```\n\n配置文件 application.yml\n\n```yaml\nspring:\n  data:\n    mongodb:\n      host: 127.0.0.1\n      database: fly_articleDb\n      port: 27017\n      # 可以采取 mysql 写法\n      # uri: mongodb://127.0.0.1/fly_articleDb\n```\n\n运行 SpringBoot ，查看是否连接成功。\n\n连接成功后，SpringBoot 日志会显示下面红线部分，成功连接 mongodb。\n\n![image-20230713130049546](../FILES/MongoDB数据库.md/image-20230713130049546.png)\n\n## 创建实体类\n\nbean 包下创建 Comment 类\n\n```java\n@Data\n// comment 集合（类名相同时,可以省略）\n@Document(collection = \"comment\")\n// 复合索引\n//@CompoundIndex(def = \"{'userId': 1, 'nickname': -1}\")\npublic class Comment {\n    // @Id // 可以省略,当变量名为 id\n    private String id;\n    // @Field(\"content\") 变量名相同时可以省略\n    // 评论内容\n    private String content;\n    // 发布时间\n    private Date publishTime;\n    // 添加单字段索引\n    // 发布人id\n    @Indexed\n    private String userId;\n    // 昵称\n    private String nickname;\n    // 评论的日期时间\n    private LocalDateTime createDatetime;\n    // 点赞数\n    private Integer likeNum;\n    // 回复数\n    private Integer replyNum;\n    // 状态\n    private String state;\n    // 上级id: 具体回复那个用户\n    private String parentId;\n    // 文章id\n    private String articleId;\n}\n```\n\nDAO 接口\n\n```java\npublic interface CommentRepository extends MongoRepository<Comment, String> {\n}\n```\n\n然后写 Service 层和 Controller 层，具体的调用方法和 Mysql 类似。本文不再阐述。\n\n## 测试\n\n查询所有评论\n\n```java\n@Test\npublic void find() {\n  List<Comment> comments = commentService.findComments();\n  System.out.println(comments);\n}\n```\n\n![image-20230713142753307](../FILES/MongoDB数据库.md/image-20230713142753307.png)\n\n## 点赞功能\n\n类似于 mongodb 的 $inc，需要借助 `MongoTemplate`\n\n```java\n@Autowired\nprivate MongoTemplate mongoTemplate;\n\n/**\n * 更新点赞\n */\npublic void updateLikeNum(String id) {\n  Query query = Query.query(Criteria.where(\"_id\").is(id));\n  Update update = new Update();\n  update.inc(\"likeNum\");\n  mongoTemplate.updateFirst(query,update,Comment.class);\n}\n```\n\n更新前：\n\n![image-20230713145628439](../FILES/MongoDB数据库.md/image-20230713145628439.png)\n\n更新后：\n\n![image-20230713145713176](../FILES/MongoDB数据库.md/image-20230713145713176.png)\n","source":"_posts/MongoDB数据库.md","raw":"---\ntitle: MongoDB 数据库\ndate: \nupdated:\ntags: [typescript, javascript, python]\ncategories: 数据库\ncover: https://s1.ax1x.com/2023/07/12/pCfbg0A.png \n---\n\n# 安装数据库\n\n1. 下载\n\n下载地址：[Download MongoDB Community Server | MongoDB](https://www.mongodb.com/try/download/community)\n\n![image-20230712185247305](../FILES/MongoDB数据库.md/image-20230712185247305.png)\n\n根据提示选择不同的版本、平台以及安装形式，在这里采取{% label 默认 orange %} 即可。\n\n点击绿色按钮 Download 即可下载。\n\n文件较大，请耐心等待...\n\n> 安装包信息：\n>\n> 文件大小： 482.433MB\n>\n> 下载耗时：5~8分钟（根据自己的情况而定）\n\n2. 安装\n\n双击下载的文件：mongodb-windows-x86_64-6.0.7-signed.msi\n\n![image-20230712190525028](../FILES/MongoDB数据库.md/image-20230712190525028.png)\n\n选择自定义安装。\n\n![image-20230712190603575](../FILES/MongoDB数据库.md/image-20230712190603575.png)\n\n选择 {% label D盘 blue %} ，建议。\n\n![image-20230712190710947](../FILES/MongoDB数据库.md/image-20230712190710947.png)\n\n默认即可，数据目录（Data Directory）和日志目录（Log Directory）记住。\n\n剩下的，全部下一步（Next > ）即可。\n\n![image-20230712190915728](../FILES/MongoDB数据库.md/image-20230712190915728.png)\n\n等待安装完毕！安装完后，会自动弹出 Compass (一个可视化数据库管理页面)。\n\n# 基本命令\n\n## 数据库的创建\n\n切换数据库（如果没有，会在内存中创建一个新的数据库）\n\n```shell\nuse fly_articleDb;\n```\n\n使用 db 查看当前数据库\n\n```shell\ndb\n```\n\n删除当前数据库\n\n```shell\ndb.dropDatabase();\n```\n\n## 集合的相关操作\n\n> Collection 在数据库中的集合，里面可以有多条记录（Json数据）\n\n可以等同于 Mysql 中的数据表。\n\n{% note success %}\n\n通常我们一般隐式创建，我们不需要关注集合是如何创建的。\n\n{% endnote %}\n\n创建一个集合\n\n```shell\ndb.createCollection(\"test\")\n```\n\n查看当前数据库下的集合\n\n```shell\nshow collections\n```\n\n删除集合（这里以 {% label test orange %} 为例）,这里的 test 应该换成响应的集合名称。\n\n```shell\ndb.test.drop();\n```\n\n## 文档的相关操作\n\n> 都是以 JSON 为主。集合名可以存在，也可以不存在（隐式创建）。\n\n增加数据。\n\n```shell\ndb.集合名.insertOne(传入json数据)\n```\n\n查找数据\n\n```shell\ndb.集合名.find()\ndb.集合名.findOne(); # 只查询一条记录\ndb.集合名.find(传入json数据进行筛选)\ndb.集合名.find(传入json数据, {字段: 1, 字段: 0}) # 其中1表示显示,0表示隐藏\n```\n\n插入多条数据\n\n```shell\ndb.集合名.insertMany(传入json数据) # 其中传入的 json 数据，以 [] 开头和结尾\n```\n\n修改数据。其中 $set 还有 $inc 等...\n\n对于要将字符串转变成数字，可以采取 {% label NumberInt blue %} 进行包裹。\n\n```shell\ndb.集合名.updateOne({查询条件}, {$set: {修改数据部分}})\n```\n\n其余方法可以尝试：\n\n- updateMany\n- updateOne\n- updateSearchIndex\n\n删除数据\n\n```shell\ndb.集合名.remove(查询条件)\n```\n\n删除所有数据\n\n```shell\ndb.集合名.remove({})\n```\n\n## 文档的分页查询\n\n查询总个数\n\n```shell\ndb.集合名.countDocuments()\n```\n\n分页查询：limit 和 skip\n\n- limit 限制查询条数，等同于每页显示多少条\n- skip 跳过前面条数\n\n```shell\ndb.集合名.find().limit(数字)\ndb.集合名.find().limit(数字).skip(数字)\n```\n\n排序：sort，根据传入的字段决定是升序（1）还是倒序（-1）\n\n```shell\ndb.集合.find().sort({传入json数据})\n```\n\n## 文档的其他查询\n\n正则查询。\n\n基本格式如下：\n\n```shell\ndb.集合名.find({字段: /正则表达式/})\n```\n\n查询的其他方式：\n\n- $gt 大于\n- $lt 小于\n- $gte 大于等于\n- $lte 小于等于\n- $ne 不等于\n- $in 包含查询，等同于 mysql 的 in 查询\n\n```shell\ndb.集合名.find({userId: {$in: [1,2]}})\n```\n\n- $nin 不包含查询\n- $and 并列运算\n\n```shell\ndb.集合名.find({$and: [{}, {}]})\n```\n\n- $or 或运算，和 $and 类似\n\n# 索引\n\n索引有 单索引、复合索引以及其他索引。\n\n查看索引\n\n```shell\ndb.集合名.getIndexes()\n```\n\n创建索引\n\n```shell\ndb.集合名.createIndex({字段: 1}) # 1 表示升序 , -1 表示降序\n```\n\n删除索引\n\n```shell\ndb.集合名.dropIndex(索引名称)\n```\n\n删除所有索引\n\n```shell\ndb.集合名.dropIndexes()\n```\n\n# NodeJs 操作 Mongodb \n\n安装 npm 包\n\n```shell\nnpm i mongodb\n```\n\n基本模板，操作 mongodb。一般情况下都是异步获取\n\n```js\nconst MongoClient = require('mongodb').MongoClient;\n// 数据库可以更改\nconst db_name = \"fly_articleDb\";\nconst url = 'mongodb://127.0.0.1:27017';\n\n(async function () {\n    const client = new MongoClient(url);\n\n    try {\n        // 1. 连接 mongodb 数据库\n        await client.connect();\n        console.log(\"连接成功...\");\n        // 2. 使用数据库fly_articleDb\n        const db = client.db(db_name);\n        // 3. 通过数据库得到相应的集合test【这里也可以操作自己的集合】\n        const test = db.collection(\"test\");\n        // 4. 查询 test 集合中的文档【这里只是查询，其他方法跟mongodb类似】\n        const test_list = test.find();\n        // 判断是否有文档\n        while (await test_list.hasNext()) {\n            // 获取该条数据\n            const currentData = await test_list.next();\n            console.log(currentData);\n        }\n    } catch (e) {\n        console.log(e);\n    }\n    await client.close();\n    console.log(\"mongodb已关闭...\");\n})();\n```\n\n![image-20230713123234366](../FILES/MongoDB数据库.md/image-20230713123234366.png)\n\n# SpringBoot 操作 mongodb\n\n创建 springboot ，并且添加依赖。\n\n```xml\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-data-mongodb</artifactId>\n</dependency>\n```\n\n配置文件 application.yml\n\n```yaml\nspring:\n  data:\n    mongodb:\n      host: 127.0.0.1\n      database: fly_articleDb\n      port: 27017\n      # 可以采取 mysql 写法\n      # uri: mongodb://127.0.0.1/fly_articleDb\n```\n\n运行 SpringBoot ，查看是否连接成功。\n\n连接成功后，SpringBoot 日志会显示下面红线部分，成功连接 mongodb。\n\n![image-20230713130049546](../FILES/MongoDB数据库.md/image-20230713130049546.png)\n\n## 创建实体类\n\nbean 包下创建 Comment 类\n\n```java\n@Data\n// comment 集合（类名相同时,可以省略）\n@Document(collection = \"comment\")\n// 复合索引\n//@CompoundIndex(def = \"{'userId': 1, 'nickname': -1}\")\npublic class Comment {\n    // @Id // 可以省略,当变量名为 id\n    private String id;\n    // @Field(\"content\") 变量名相同时可以省略\n    // 评论内容\n    private String content;\n    // 发布时间\n    private Date publishTime;\n    // 添加单字段索引\n    // 发布人id\n    @Indexed\n    private String userId;\n    // 昵称\n    private String nickname;\n    // 评论的日期时间\n    private LocalDateTime createDatetime;\n    // 点赞数\n    private Integer likeNum;\n    // 回复数\n    private Integer replyNum;\n    // 状态\n    private String state;\n    // 上级id: 具体回复那个用户\n    private String parentId;\n    // 文章id\n    private String articleId;\n}\n```\n\nDAO 接口\n\n```java\npublic interface CommentRepository extends MongoRepository<Comment, String> {\n}\n```\n\n然后写 Service 层和 Controller 层，具体的调用方法和 Mysql 类似。本文不再阐述。\n\n## 测试\n\n查询所有评论\n\n```java\n@Test\npublic void find() {\n  List<Comment> comments = commentService.findComments();\n  System.out.println(comments);\n}\n```\n\n![image-20230713142753307](../FILES/MongoDB数据库.md/image-20230713142753307.png)\n\n## 点赞功能\n\n类似于 mongodb 的 $inc，需要借助 `MongoTemplate`\n\n```java\n@Autowired\nprivate MongoTemplate mongoTemplate;\n\n/**\n * 更新点赞\n */\npublic void updateLikeNum(String id) {\n  Query query = Query.query(Criteria.where(\"_id\").is(id));\n  Update update = new Update();\n  update.inc(\"likeNum\");\n  mongoTemplate.updateFirst(query,update,Comment.class);\n}\n```\n\n更新前：\n\n![image-20230713145628439](../FILES/MongoDB数据库.md/image-20230713145628439.png)\n\n更新后：\n\n![image-20230713145713176](../FILES/MongoDB数据库.md/image-20230713145713176.png)\n","slug":"MongoDB数据库","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmof000g1kv293432llf","content":"<h1 id=\"安装数据库\"><a href=\"#安装数据库\" class=\"headerlink\" title=\"安装数据库\"></a>安装数据库</h1><ol>\n<li>下载</li>\n</ol>\n<p>下载地址：<a href=\"https://www.mongodb.com/try/download/community\">Download MongoDB Community Server | MongoDB</a></p>\n<p><img src=\"/lingtan/../FILES/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.md/image-20230712185247305.png\" alt=\"image-20230712185247305\"></p>\n<p>根据提示选择不同的版本、平台以及安装形式，在这里采取<mark class=\"hl-label orange\">默认</mark>  即可。</p>\n<p>点击绿色按钮 Download 即可下载。</p>\n<p>文件较大，请耐心等待…</p>\n<blockquote>\n<p>安装包信息：</p>\n<p>文件大小： 482.433MB</p>\n<p>下载耗时：5~8分钟（根据自己的情况而定）</p>\n</blockquote>\n<ol start=\"2\">\n<li>安装</li>\n</ol>\n<p>双击下载的文件：mongodb-windows-x86_64-6.0.7-signed.msi</p>\n<p><img src=\"/lingtan/../FILES/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.md/image-20230712190525028.png\" alt=\"image-20230712190525028\"></p>\n<p>选择自定义安装。</p>\n<p><img src=\"/lingtan/../FILES/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.md/image-20230712190603575.png\" alt=\"image-20230712190603575\"></p>\n<p>选择 <mark class=\"hl-label blue\">D盘</mark>  ，建议。</p>\n<p><img src=\"/lingtan/../FILES/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.md/image-20230712190710947.png\" alt=\"image-20230712190710947\"></p>\n<p>默认即可，数据目录（Data Directory）和日志目录（Log Directory）记住。</p>\n<p>剩下的，全部下一步（Next &gt; ）即可。</p>\n<p><img src=\"/lingtan/../FILES/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.md/image-20230712190915728.png\" alt=\"image-20230712190915728\"></p>\n<p>等待安装完毕！安装完后，会自动弹出 Compass (一个可视化数据库管理页面)。</p>\n<h1 id=\"基本命令\"><a href=\"#基本命令\" class=\"headerlink\" title=\"基本命令\"></a>基本命令</h1><h2 id=\"数据库的创建\"><a href=\"#数据库的创建\" class=\"headerlink\" title=\"数据库的创建\"></a>数据库的创建</h2><p>切换数据库（如果没有，会在内存中创建一个新的数据库）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use fly_articleDb;</span><br></pre></td></tr></table></figure>\n\n<p>使用 db 查看当前数据库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db</span><br></pre></td></tr></table></figure>\n\n<p>删除当前数据库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.dropDatabase();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"集合的相关操作\"><a href=\"#集合的相关操作\" class=\"headerlink\" title=\"集合的相关操作\"></a>集合的相关操作</h2><blockquote>\n<p>Collection 在数据库中的集合，里面可以有多条记录（Json数据）</p>\n</blockquote>\n<p>可以等同于 Mysql 中的数据表。</p>\n<div class=\"note success flat\"><p>通常我们一般隐式创建，我们不需要关注集合是如何创建的。</p>\n</div>\n\n<p>创建一个集合</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.createCollection(&quot;test&quot;)</span><br></pre></td></tr></table></figure>\n\n<p>查看当前数据库下的集合</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show collections</span><br></pre></td></tr></table></figure>\n\n<p>删除集合（这里以 <mark class=\"hl-label orange\">test</mark>  为例）,这里的 test 应该换成响应的集合名称。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.test.drop();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文档的相关操作\"><a href=\"#文档的相关操作\" class=\"headerlink\" title=\"文档的相关操作\"></a>文档的相关操作</h2><blockquote>\n<p>都是以 JSON 为主。集合名可以存在，也可以不存在（隐式创建）。</p>\n</blockquote>\n<p>增加数据。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.insertOne(传入json数据)</span><br></pre></td></tr></table></figure>\n\n<p>查找数据</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.find()</span><br><span class=\"line\">db.集合名.findOne(); # 只查询一条记录</span><br><span class=\"line\">db.集合名.find(传入json数据进行筛选)</span><br><span class=\"line\">db.集合名.find(传入json数据, &#123;字段: 1, 字段: 0&#125;) # 其中1表示显示,0表示隐藏</span><br></pre></td></tr></table></figure>\n\n<p>插入多条数据</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.insertMany(传入json数据) # 其中传入的 json 数据，以 [] 开头和结尾</span><br></pre></td></tr></table></figure>\n\n<p>修改数据。其中 $set 还有 $inc 等…</p>\n<p>对于要将字符串转变成数字，可以采取 <mark class=\"hl-label blue\">NumberInt</mark>  进行包裹。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.updateOne(&#123;查询条件&#125;, &#123;$set: &#123;修改数据部分&#125;&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>其余方法可以尝试：</p>\n<ul>\n<li>updateMany</li>\n<li>updateOne</li>\n<li>updateSearchIndex</li>\n</ul>\n<p>删除数据</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.remove(查询条件)</span><br></pre></td></tr></table></figure>\n\n<p>删除所有数据</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.remove(&#123;&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文档的分页查询\"><a href=\"#文档的分页查询\" class=\"headerlink\" title=\"文档的分页查询\"></a>文档的分页查询</h2><p>查询总个数</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.countDocuments()</span><br></pre></td></tr></table></figure>\n\n<p>分页查询：limit 和 skip</p>\n<ul>\n<li>limit 限制查询条数，等同于每页显示多少条</li>\n<li>skip 跳过前面条数</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.find().limit(数字)</span><br><span class=\"line\">db.集合名.find().limit(数字).skip(数字)</span><br></pre></td></tr></table></figure>\n\n<p>排序：sort，根据传入的字段决定是升序（1）还是倒序（-1）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合.find().sort(&#123;传入json数据&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文档的其他查询\"><a href=\"#文档的其他查询\" class=\"headerlink\" title=\"文档的其他查询\"></a>文档的其他查询</h2><p>正则查询。</p>\n<p>基本格式如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.find(&#123;字段: /正则表达式/&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>查询的其他方式：</p>\n<ul>\n<li>$gt 大于</li>\n<li>$lt 小于</li>\n<li>$gte 大于等于</li>\n<li>$lte 小于等于</li>\n<li>$ne 不等于</li>\n<li>$in 包含查询，等同于 mysql 的 in 查询</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.find(&#123;userId: &#123;$in: [1,2]&#125;&#125;)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>$nin 不包含查询</li>\n<li>$and 并列运算</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.find(&#123;$and: [&#123;&#125;, &#123;&#125;]&#125;)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>$or 或运算，和 $and 类似</li>\n</ul>\n<h1 id=\"索引\"><a href=\"#索引\" class=\"headerlink\" title=\"索引\"></a>索引</h1><p>索引有 单索引、复合索引以及其他索引。</p>\n<p>查看索引</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.getIndexes()</span><br></pre></td></tr></table></figure>\n\n<p>创建索引</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.createIndex(&#123;字段: 1&#125;) # 1 表示升序 , -1 表示降序</span><br></pre></td></tr></table></figure>\n\n<p>删除索引</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.dropIndex(索引名称)</span><br></pre></td></tr></table></figure>\n\n<p>删除所有索引</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.dropIndexes()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"NodeJs-操作-Mongodb\"><a href=\"#NodeJs-操作-Mongodb\" class=\"headerlink\" title=\"NodeJs 操作 Mongodb\"></a>NodeJs 操作 Mongodb</h1><p>安装 npm 包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i mongodb</span><br></pre></td></tr></table></figure>\n\n<p>基本模板，操作 mongodb。一般情况下都是异步获取</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">MongoClient</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongodb&#x27;</span>).<span class=\"property\">MongoClient</span>;</span><br><span class=\"line\"><span class=\"comment\">// 数据库可以更改</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> db_name = <span class=\"string\">&quot;fly_articleDb&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> url = <span class=\"string\">&#x27;mongodb://127.0.0.1:27017&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">(<span class=\"keyword\">async</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> client = <span class=\"keyword\">new</span> <span class=\"title class_\">MongoClient</span>(url);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 1. 连接 mongodb 数据库</span></span><br><span class=\"line\">        <span class=\"keyword\">await</span> client.<span class=\"title function_\">connect</span>();</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;连接成功...&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 2. 使用数据库fly_articleDb</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> db = client.<span class=\"title function_\">db</span>(db_name);</span><br><span class=\"line\">        <span class=\"comment\">// 3. 通过数据库得到相应的集合test【这里也可以操作自己的集合】</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> test = db.<span class=\"title function_\">collection</span>(<span class=\"string\">&quot;test&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 4. 查询 test 集合中的文档【这里只是查询，其他方法跟mongodb类似】</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> test_list = test.<span class=\"title function_\">find</span>();</span><br><span class=\"line\">        <span class=\"comment\">// 判断是否有文档</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">await</span> test_list.<span class=\"title function_\">hasNext</span>()) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 获取该条数据</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> currentData = <span class=\"keyword\">await</span> test_list.<span class=\"title function_\">next</span>();</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(currentData);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> client.<span class=\"title function_\">close</span>();</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;mongodb已关闭...&quot;</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.md/image-20230713123234366.png\" alt=\"image-20230713123234366\"></p>\n<h1 id=\"SpringBoot-操作-mongodb\"><a href=\"#SpringBoot-操作-mongodb\" class=\"headerlink\" title=\"SpringBoot 操作 mongodb\"></a>SpringBoot 操作 mongodb</h1><p>创建 springboot ，并且添加依赖。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-data-mongodb<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>配置文件 application.yml</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">data:</span></span><br><span class=\"line\">    <span class=\"attr\">mongodb:</span></span><br><span class=\"line\">      <span class=\"attr\">host:</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span></span><br><span class=\"line\">      <span class=\"attr\">database:</span> <span class=\"string\">fly_articleDb</span></span><br><span class=\"line\">      <span class=\"attr\">port:</span> <span class=\"number\">27017</span></span><br><span class=\"line\">      <span class=\"comment\"># 可以采取 mysql 写法</span></span><br><span class=\"line\">      <span class=\"comment\"># uri: mongodb://127.0.0.1/fly_articleDb</span></span><br></pre></td></tr></table></figure>\n\n<p>运行 SpringBoot ，查看是否连接成功。</p>\n<p>连接成功后，SpringBoot 日志会显示下面红线部分，成功连接 mongodb。</p>\n<p><img src=\"/lingtan/../FILES/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.md/image-20230713130049546.png\" alt=\"image-20230713130049546\"></p>\n<h2 id=\"创建实体类\"><a href=\"#创建实体类\" class=\"headerlink\" title=\"创建实体类\"></a>创建实体类</h2><p>bean 包下创建 Comment 类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"comment\">// comment 集合（类名相同时,可以省略）</span></span><br><span class=\"line\"><span class=\"meta\">@Document(collection = &quot;comment&quot;)</span></span><br><span class=\"line\"><span class=\"comment\">// 复合索引</span></span><br><span class=\"line\"><span class=\"comment\">//@CompoundIndex(def = &quot;&#123;&#x27;userId&#x27;: 1, &#x27;nickname&#x27;: -1&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Comment</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// @Id // 可以省略,当变量名为 id</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String id;</span><br><span class=\"line\">    <span class=\"comment\">// @Field(&quot;content&quot;) 变量名相同时可以省略</span></span><br><span class=\"line\">    <span class=\"comment\">// 评论内容</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String content;</span><br><span class=\"line\">    <span class=\"comment\">// 发布时间</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date publishTime;</span><br><span class=\"line\">    <span class=\"comment\">// 添加单字段索引</span></span><br><span class=\"line\">    <span class=\"comment\">// 发布人id</span></span><br><span class=\"line\">    <span class=\"meta\">@Indexed</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String userId;</span><br><span class=\"line\">    <span class=\"comment\">// 昵称</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String nickname;</span><br><span class=\"line\">    <span class=\"comment\">// 评论的日期时间</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> LocalDateTime createDatetime;</span><br><span class=\"line\">    <span class=\"comment\">// 点赞数</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer likeNum;</span><br><span class=\"line\">    <span class=\"comment\">// 回复数</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer replyNum;</span><br><span class=\"line\">    <span class=\"comment\">// 状态</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String state;</span><br><span class=\"line\">    <span class=\"comment\">// 上级id: 具体回复那个用户</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String parentId;</span><br><span class=\"line\">    <span class=\"comment\">// 文章id</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String articleId;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>DAO 接口</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">CommentRepository</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">MongoRepository</span>&lt;Comment, String&gt; &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后写 Service 层和 Controller 层，具体的调用方法和 Mysql 类似。本文不再阐述。</p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>查询所有评论</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">find</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  List&lt;Comment&gt; comments = commentService.findComments();</span><br><span class=\"line\">  System.out.println(comments);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.md/image-20230713142753307.png\" alt=\"image-20230713142753307\"></p>\n<h2 id=\"点赞功能\"><a href=\"#点赞功能\" class=\"headerlink\" title=\"点赞功能\"></a>点赞功能</h2><p>类似于 mongodb 的 $inc，需要借助 <code>MongoTemplate</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> MongoTemplate mongoTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 更新点赞</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">updateLikeNum</span><span class=\"params\">(String id)</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">Query</span> <span class=\"variable\">query</span> <span class=\"operator\">=</span> Query.query(Criteria.where(<span class=\"string\">&quot;_id&quot;</span>).is(id));</span><br><span class=\"line\">  <span class=\"type\">Update</span> <span class=\"variable\">update</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Update</span>();</span><br><span class=\"line\">  update.inc(<span class=\"string\">&quot;likeNum&quot;</span>);</span><br><span class=\"line\">  mongoTemplate.updateFirst(query,update,Comment.class);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>更新前：</p>\n<p><img src=\"/lingtan/../FILES/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.md/image-20230713145628439.png\" alt=\"image-20230713145628439\"></p>\n<p>更新后：</p>\n<p><img src=\"/lingtan/../FILES/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.md/image-20230713145713176.png\" alt=\"image-20230713145713176\"></p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"安装数据库\"><a href=\"#安装数据库\" class=\"headerlink\" title=\"安装数据库\"></a>安装数据库</h1><ol>\n<li>下载</li>\n</ol>\n<p>下载地址：<a href=\"https://www.mongodb.com/try/download/community\">Download MongoDB Community Server | MongoDB</a></p>\n<p><img src=\"/lingtan/../FILES/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.md/image-20230712185247305.png\" alt=\"image-20230712185247305\"></p>\n<p>根据提示选择不同的版本、平台以及安装形式，在这里采取<mark class=\"hl-label orange\">默认</mark>  即可。</p>\n<p>点击绿色按钮 Download 即可下载。</p>\n<p>文件较大，请耐心等待…</p>\n<blockquote>\n<p>安装包信息：</p>\n<p>文件大小： 482.433MB</p>\n<p>下载耗时：5~8分钟（根据自己的情况而定）</p>\n</blockquote>\n<ol start=\"2\">\n<li>安装</li>\n</ol>\n<p>双击下载的文件：mongodb-windows-x86_64-6.0.7-signed.msi</p>\n<p><img src=\"/lingtan/../FILES/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.md/image-20230712190525028.png\" alt=\"image-20230712190525028\"></p>\n<p>选择自定义安装。</p>\n<p><img src=\"/lingtan/../FILES/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.md/image-20230712190603575.png\" alt=\"image-20230712190603575\"></p>\n<p>选择 <mark class=\"hl-label blue\">D盘</mark>  ，建议。</p>\n<p><img src=\"/lingtan/../FILES/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.md/image-20230712190710947.png\" alt=\"image-20230712190710947\"></p>\n<p>默认即可，数据目录（Data Directory）和日志目录（Log Directory）记住。</p>\n<p>剩下的，全部下一步（Next &gt; ）即可。</p>\n<p><img src=\"/lingtan/../FILES/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.md/image-20230712190915728.png\" alt=\"image-20230712190915728\"></p>\n<p>等待安装完毕！安装完后，会自动弹出 Compass (一个可视化数据库管理页面)。</p>\n<h1 id=\"基本命令\"><a href=\"#基本命令\" class=\"headerlink\" title=\"基本命令\"></a>基本命令</h1><h2 id=\"数据库的创建\"><a href=\"#数据库的创建\" class=\"headerlink\" title=\"数据库的创建\"></a>数据库的创建</h2><p>切换数据库（如果没有，会在内存中创建一个新的数据库）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use fly_articleDb;</span><br></pre></td></tr></table></figure>\n\n<p>使用 db 查看当前数据库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db</span><br></pre></td></tr></table></figure>\n\n<p>删除当前数据库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.dropDatabase();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"集合的相关操作\"><a href=\"#集合的相关操作\" class=\"headerlink\" title=\"集合的相关操作\"></a>集合的相关操作</h2><blockquote>\n<p>Collection 在数据库中的集合，里面可以有多条记录（Json数据）</p>\n</blockquote>\n<p>可以等同于 Mysql 中的数据表。</p>\n<div class=\"note success flat\"><p>通常我们一般隐式创建，我们不需要关注集合是如何创建的。</p>\n</div>\n\n<p>创建一个集合</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.createCollection(&quot;test&quot;)</span><br></pre></td></tr></table></figure>\n\n<p>查看当前数据库下的集合</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show collections</span><br></pre></td></tr></table></figure>\n\n<p>删除集合（这里以 <mark class=\"hl-label orange\">test</mark>  为例）,这里的 test 应该换成响应的集合名称。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.test.drop();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文档的相关操作\"><a href=\"#文档的相关操作\" class=\"headerlink\" title=\"文档的相关操作\"></a>文档的相关操作</h2><blockquote>\n<p>都是以 JSON 为主。集合名可以存在，也可以不存在（隐式创建）。</p>\n</blockquote>\n<p>增加数据。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.insertOne(传入json数据)</span><br></pre></td></tr></table></figure>\n\n<p>查找数据</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.find()</span><br><span class=\"line\">db.集合名.findOne(); # 只查询一条记录</span><br><span class=\"line\">db.集合名.find(传入json数据进行筛选)</span><br><span class=\"line\">db.集合名.find(传入json数据, &#123;字段: 1, 字段: 0&#125;) # 其中1表示显示,0表示隐藏</span><br></pre></td></tr></table></figure>\n\n<p>插入多条数据</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.insertMany(传入json数据) # 其中传入的 json 数据，以 [] 开头和结尾</span><br></pre></td></tr></table></figure>\n\n<p>修改数据。其中 $set 还有 $inc 等…</p>\n<p>对于要将字符串转变成数字，可以采取 <mark class=\"hl-label blue\">NumberInt</mark>  进行包裹。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.updateOne(&#123;查询条件&#125;, &#123;$set: &#123;修改数据部分&#125;&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>其余方法可以尝试：</p>\n<ul>\n<li>updateMany</li>\n<li>updateOne</li>\n<li>updateSearchIndex</li>\n</ul>\n<p>删除数据</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.remove(查询条件)</span><br></pre></td></tr></table></figure>\n\n<p>删除所有数据</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.remove(&#123;&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文档的分页查询\"><a href=\"#文档的分页查询\" class=\"headerlink\" title=\"文档的分页查询\"></a>文档的分页查询</h2><p>查询总个数</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.countDocuments()</span><br></pre></td></tr></table></figure>\n\n<p>分页查询：limit 和 skip</p>\n<ul>\n<li>limit 限制查询条数，等同于每页显示多少条</li>\n<li>skip 跳过前面条数</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.find().limit(数字)</span><br><span class=\"line\">db.集合名.find().limit(数字).skip(数字)</span><br></pre></td></tr></table></figure>\n\n<p>排序：sort，根据传入的字段决定是升序（1）还是倒序（-1）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合.find().sort(&#123;传入json数据&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文档的其他查询\"><a href=\"#文档的其他查询\" class=\"headerlink\" title=\"文档的其他查询\"></a>文档的其他查询</h2><p>正则查询。</p>\n<p>基本格式如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.find(&#123;字段: /正则表达式/&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>查询的其他方式：</p>\n<ul>\n<li>$gt 大于</li>\n<li>$lt 小于</li>\n<li>$gte 大于等于</li>\n<li>$lte 小于等于</li>\n<li>$ne 不等于</li>\n<li>$in 包含查询，等同于 mysql 的 in 查询</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.find(&#123;userId: &#123;$in: [1,2]&#125;&#125;)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>$nin 不包含查询</li>\n<li>$and 并列运算</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.find(&#123;$and: [&#123;&#125;, &#123;&#125;]&#125;)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>$or 或运算，和 $and 类似</li>\n</ul>\n<h1 id=\"索引\"><a href=\"#索引\" class=\"headerlink\" title=\"索引\"></a>索引</h1><p>索引有 单索引、复合索引以及其他索引。</p>\n<p>查看索引</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.getIndexes()</span><br></pre></td></tr></table></figure>\n\n<p>创建索引</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.createIndex(&#123;字段: 1&#125;) # 1 表示升序 , -1 表示降序</span><br></pre></td></tr></table></figure>\n\n<p>删除索引</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.dropIndex(索引名称)</span><br></pre></td></tr></table></figure>\n\n<p>删除所有索引</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.dropIndexes()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"NodeJs-操作-Mongodb\"><a href=\"#NodeJs-操作-Mongodb\" class=\"headerlink\" title=\"NodeJs 操作 Mongodb\"></a>NodeJs 操作 Mongodb</h1><p>安装 npm 包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i mongodb</span><br></pre></td></tr></table></figure>\n\n<p>基本模板，操作 mongodb。一般情况下都是异步获取</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">MongoClient</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongodb&#x27;</span>).<span class=\"property\">MongoClient</span>;</span><br><span class=\"line\"><span class=\"comment\">// 数据库可以更改</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> db_name = <span class=\"string\">&quot;fly_articleDb&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> url = <span class=\"string\">&#x27;mongodb://127.0.0.1:27017&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">(<span class=\"keyword\">async</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> client = <span class=\"keyword\">new</span> <span class=\"title class_\">MongoClient</span>(url);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 1. 连接 mongodb 数据库</span></span><br><span class=\"line\">        <span class=\"keyword\">await</span> client.<span class=\"title function_\">connect</span>();</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;连接成功...&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 2. 使用数据库fly_articleDb</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> db = client.<span class=\"title function_\">db</span>(db_name);</span><br><span class=\"line\">        <span class=\"comment\">// 3. 通过数据库得到相应的集合test【这里也可以操作自己的集合】</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> test = db.<span class=\"title function_\">collection</span>(<span class=\"string\">&quot;test&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 4. 查询 test 集合中的文档【这里只是查询，其他方法跟mongodb类似】</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> test_list = test.<span class=\"title function_\">find</span>();</span><br><span class=\"line\">        <span class=\"comment\">// 判断是否有文档</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">await</span> test_list.<span class=\"title function_\">hasNext</span>()) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 获取该条数据</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> currentData = <span class=\"keyword\">await</span> test_list.<span class=\"title function_\">next</span>();</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(currentData);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> client.<span class=\"title function_\">close</span>();</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;mongodb已关闭...&quot;</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.md/image-20230713123234366.png\" alt=\"image-20230713123234366\"></p>\n<h1 id=\"SpringBoot-操作-mongodb\"><a href=\"#SpringBoot-操作-mongodb\" class=\"headerlink\" title=\"SpringBoot 操作 mongodb\"></a>SpringBoot 操作 mongodb</h1><p>创建 springboot ，并且添加依赖。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-data-mongodb<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>配置文件 application.yml</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">data:</span></span><br><span class=\"line\">    <span class=\"attr\">mongodb:</span></span><br><span class=\"line\">      <span class=\"attr\">host:</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span></span><br><span class=\"line\">      <span class=\"attr\">database:</span> <span class=\"string\">fly_articleDb</span></span><br><span class=\"line\">      <span class=\"attr\">port:</span> <span class=\"number\">27017</span></span><br><span class=\"line\">      <span class=\"comment\"># 可以采取 mysql 写法</span></span><br><span class=\"line\">      <span class=\"comment\"># uri: mongodb://127.0.0.1/fly_articleDb</span></span><br></pre></td></tr></table></figure>\n\n<p>运行 SpringBoot ，查看是否连接成功。</p>\n<p>连接成功后，SpringBoot 日志会显示下面红线部分，成功连接 mongodb。</p>\n<p><img src=\"/lingtan/../FILES/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.md/image-20230713130049546.png\" alt=\"image-20230713130049546\"></p>\n<h2 id=\"创建实体类\"><a href=\"#创建实体类\" class=\"headerlink\" title=\"创建实体类\"></a>创建实体类</h2><p>bean 包下创建 Comment 类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"comment\">// comment 集合（类名相同时,可以省略）</span></span><br><span class=\"line\"><span class=\"meta\">@Document(collection = &quot;comment&quot;)</span></span><br><span class=\"line\"><span class=\"comment\">// 复合索引</span></span><br><span class=\"line\"><span class=\"comment\">//@CompoundIndex(def = &quot;&#123;&#x27;userId&#x27;: 1, &#x27;nickname&#x27;: -1&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Comment</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// @Id // 可以省略,当变量名为 id</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String id;</span><br><span class=\"line\">    <span class=\"comment\">// @Field(&quot;content&quot;) 变量名相同时可以省略</span></span><br><span class=\"line\">    <span class=\"comment\">// 评论内容</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String content;</span><br><span class=\"line\">    <span class=\"comment\">// 发布时间</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date publishTime;</span><br><span class=\"line\">    <span class=\"comment\">// 添加单字段索引</span></span><br><span class=\"line\">    <span class=\"comment\">// 发布人id</span></span><br><span class=\"line\">    <span class=\"meta\">@Indexed</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String userId;</span><br><span class=\"line\">    <span class=\"comment\">// 昵称</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String nickname;</span><br><span class=\"line\">    <span class=\"comment\">// 评论的日期时间</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> LocalDateTime createDatetime;</span><br><span class=\"line\">    <span class=\"comment\">// 点赞数</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer likeNum;</span><br><span class=\"line\">    <span class=\"comment\">// 回复数</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer replyNum;</span><br><span class=\"line\">    <span class=\"comment\">// 状态</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String state;</span><br><span class=\"line\">    <span class=\"comment\">// 上级id: 具体回复那个用户</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String parentId;</span><br><span class=\"line\">    <span class=\"comment\">// 文章id</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String articleId;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>DAO 接口</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">CommentRepository</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">MongoRepository</span>&lt;Comment, String&gt; &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后写 Service 层和 Controller 层，具体的调用方法和 Mysql 类似。本文不再阐述。</p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>查询所有评论</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">find</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  List&lt;Comment&gt; comments = commentService.findComments();</span><br><span class=\"line\">  System.out.println(comments);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.md/image-20230713142753307.png\" alt=\"image-20230713142753307\"></p>\n<h2 id=\"点赞功能\"><a href=\"#点赞功能\" class=\"headerlink\" title=\"点赞功能\"></a>点赞功能</h2><p>类似于 mongodb 的 $inc，需要借助 <code>MongoTemplate</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> MongoTemplate mongoTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 更新点赞</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">updateLikeNum</span><span class=\"params\">(String id)</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">Query</span> <span class=\"variable\">query</span> <span class=\"operator\">=</span> Query.query(Criteria.where(<span class=\"string\">&quot;_id&quot;</span>).is(id));</span><br><span class=\"line\">  <span class=\"type\">Update</span> <span class=\"variable\">update</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Update</span>();</span><br><span class=\"line\">  update.inc(<span class=\"string\">&quot;likeNum&quot;</span>);</span><br><span class=\"line\">  mongoTemplate.updateFirst(query,update,Comment.class);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>更新前：</p>\n<p><img src=\"/lingtan/../FILES/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.md/image-20230713145628439.png\" alt=\"image-20230713145628439\"></p>\n<p>更新后：</p>\n<p><img src=\"/lingtan/../FILES/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.md/image-20230713145713176.png\" alt=\"image-20230713145713176\"></p>\n"},{"title":"dpkg","date":"2024-03-05T07:14:41.867Z","updated":"2024-03-05T07:14:06.296Z","cover":"https://s1.ax1x.com/2023/06/20/pC8Zzk9.png","_content":"\n\n\n# 卸载\n\n删除软件包，并保留.postrm和.list文件.\n\n```sh\nsudo dpkg -r ${名称}\n```\n\n清除所有文件，包括.postrm和.list文件.\n\n```sh\nsudo dpkg -P ${名称}\n```\n\n查看是否卸载完毕\n\n```sh\nsudo dpkg -l ${名称}\n```\n\n","source":"_posts/dpkg.md","raw":"---\ntitle: dpkg\ndate: \nupdated:\ntags: [linux, 包管理器]\ncategories: linux\ncover: https://s1.ax1x.com/2023/06/20/pC8Zzk9.png\n---\n\n\n\n# 卸载\n\n删除软件包，并保留.postrm和.list文件.\n\n```sh\nsudo dpkg -r ${名称}\n```\n\n清除所有文件，包括.postrm和.list文件.\n\n```sh\nsudo dpkg -P ${名称}\n```\n\n查看是否卸载完毕\n\n```sh\nsudo dpkg -l ${名称}\n```\n\n","slug":"dpkg","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmog000i1kv21mhjh1up","content":"<h1 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h1><p>删除软件包，并保留.postrm和.list文件.</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -r <span class=\"variable\">$&#123;名称&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>清除所有文件，包括.postrm和.list文件.</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -P <span class=\"variable\">$&#123;名称&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>查看是否卸载完毕</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -l <span class=\"variable\">$&#123;名称&#125;</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h1><p>删除软件包，并保留.postrm和.list文件.</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -r <span class=\"variable\">$&#123;名称&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>清除所有文件，包括.postrm和.list文件.</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -P <span class=\"variable\">$&#123;名称&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>查看是否卸载完毕</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -l <span class=\"variable\">$&#123;名称&#125;</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"JavaScript 基础","date":"2024-03-05T07:14:41.891Z","updated":"2024-03-05T07:14:06.291Z","cover":"https://s1.ax1x.com/2023/06/20/pC8UDRf.png","_content":"\n\n\n# JS 基础\n\nJavaScript 包含很多内容，如类、期约、迭代器、代理、客户端检测、事件、动画、表单、错误处理以及JSON等。\n\n## 1. JavaScript 概念\n\n完整的 Javascript 包含3部分：\n\n- 核心（ECMAScript）\n\n- 文档对象模型（DOM）\n- 浏览器对象模型（BOM）\n\n![image-20230605092717715](../FILES/JavaScript基础.md/image-20230605092717715.png)\n\nscript 标签属性：\n\n- async 立即开始下载脚本【外部脚本】\n- charset 字符集\n- crossorigin CORS 跨域资源共享\n- defer 脚本可以延迟到文档完全被解析和显示之后再执行（最好只包含一个这样的脚本）【外部脚本】\n- src <b style=\"color: red\">重要！！</b>\n- type 脚本类型 type=\"text/javascript\"\n\nnoscript 标签：满足以下两个条件，都会被浏览器渲染。否则不会渲染 noscript 标签里内容\n\n- 不支持 JavaScript\n- 禁用 JavaScript\n\n```html\n<!DOCTYPE html> \n<html> \n <head> \n <title>Example HTML Page</title> \n <script defer=\"defer\" src=\"example1.js\"></script> \n <script defer=\"defer\" src=\"example2.js\"></script> \n </head> \n <body> \n <noscript> \n <p>该页面不支持或者禁用JavaScript.</p> \n </noscript> \n </body> \n</html>\n```\n\n注意：对不推迟执行的脚本，浏览器必须解释完位于`<script>`元素中的代码，然后才能继续渲染页面\n\n## 2. 语法基础\n\n### 2.1 变量\n\n标识符组成：（变量名建议：驼峰命名）\n\n- 第一个字符必须是一个字母、下划线（_）或美元符号（$）\n- 标识符由字母、下划线、$或数字组成\n\n```javascript\n// 有效名称 ： 合法名称\nfirstSecond \nmyCar \ndoSomethingImportant\n```\n\n开启严格模式：==\"use strict\"==。对于不安全的活动将抛出错误\n\n```javascript\nfunction doSomething() { \n \"use strict\"; \n // 函数体 \n}\n```\n\n在 JavaScript 中建议 ==加分号（;）==，压缩代码不容易出现语法错误，在某些情况下可能会提升性能，因为解析器会尝试在合适的位置补上分号以纠正语法错误。\n\n关键字如下：\n\n| break    | do       | in         | typeof |\n| -------- | -------- | ---------- | ------ |\n| case     | else     | instanceof | var    |\n| catch    | export   | new        | void   |\n| class    | extends  | return     | while  |\n| const    | finally  | super      | with   |\n| continue | for      | switch     | yield  |\n| debugger | function | this       | enum   |\n| default  | if       | throw      | 等等   |\n| delete   | import   | try        |        |\n\n**var 声明提升**：都拉到函数作用域的顶部【let 声明的变量不会被提升，即必须先声明再使用，即“暂时性死区”】\n\n```javascript\nfunction foo() {\n  console.log(age)\n  // 变量声明在下面，不报错\n  var age = 10\n}\n```\n\nlet 声明的范围是块作用域，而 var 声明的范围是函数作用域。\n\n> ✨<span style=\"color: red\">小技巧：</span>\n> 建议使用 let 声明变量，如果变量确定不会发生变化，建议使用 const 声明变量。\n\n全局声明时，let 声明变量不会成为 window 对象属性\n\n```javascript\nvar name = \"张三\"\nconsole.log(window.name); // \"张三\"\nlet age = 12\nconsole.log(window.age); // undefined\n```\n\n{%note success %}\n\n总结：const 优先，let 次之\n\n{%endnote%}\n\n### 2.2 数据类型（7种）\n\n6中简单数据类型（原始类型）：\n\n- Undefined（\"undefined\"）只有1个值 undefined\n- Null（\"\"）\n- Boolean（\"boolean\"）\n- Number（\"number\"）\n- String（\"string\"）\n- Symbol（符合）\n\n还有复杂数据类型：Object（\"object\" 或 null）（键值对的集合）\n\n确定变量类型： typeof 【操作符】，区分函数和其他对象\n\n````javascript\nlet message = \"some string\"; \nconsole.log(typeof message); // \"string\" \nconsole.log(typeof(message)); // \"string\" \nconsole.log(typeof 95); // \"number\"\n````\n\n> ✨<span style=\"color: red\">小技巧：</span>\n> 声明变量时，建议初始化，避免不必要的错误\n\n== 的使用：这个操作符会为了比较而转换它的操作数\n\n```javascript\nconsole.log(null == undefined); // true\n```\n\n一般来讲，不必显示声明为 undefined，要使用 void(0)\n\n不同类型与布尔值之间转换规则：if 等流控制语句会自动执行其他类型值到布尔值的转换（经常用！！）\n\n| 数据类型  |  转换为true的值  | 转换为false的值 |\n| :-------: | :--------------: | :-------------: |\n|  Boolean  |       true       |      false      |\n|  String   |    非空字符串    | \"\"（空字符串）  |\n|  Number   | 非零数值（无穷） |     0、NaN      |\n|  Object   |     任意对象     |      null       |\n| Undefined |  N/A（不存在）   |    undefined    |\n\nNumber最大：Number.MAX_VALUE\n\nNumber最小：Number.MIN_VALUE\n\n超出范围：Infinity 无穷 【Number.NEGATIVE_INFINITY 和 Number.POSITIVE_INFINITY 也可以获取正、负 Infinity。】\n\n确定一个值是不是无穷大：isFinite 函数\n\nNaN （非数值）：console.log(0/0); // NaN \n\n判断是否为非数值：isNaN\n\n> isNaN()可以用于测试对象。此时，首先会调用对象的 valueOf()方法，然后再确定返回的值是否可以转换为数值。如果不能，再调用 toString()方法，并测试其返回值\n\n```javascript\nconsole.log(isNaN(NaN)); // true \nconsole.log(isNaN(10)); // false，10 是数值\nconsole.log(isNaN(\"10\")); // false，可以转换为数值 10 \nconsole.log(isNaN(\"blue\")); // true，不可以转换为数值\nconsole.log(isNaN(true)); // false，可以转换为数值 1\n```\n\n将非数值转换为数值：Number()、parseInt()和 parseFloat()\n\nNumber函数转换规则：\n\n- 布尔值 true为1\n- 数值，直接返回\n- null 返回0\n- undefined 返回NaN\n- 字符串【isNaN 为 true】\n- 对象，调用 valueOf 方法，如果结果为 NaN，调用 toString() 方法\n\n```javascript\nlet num1 = Number(\"Hello world!\"); // NaN \nlet num2 = Number(\"\"); // 0 \nlet num3 = Number(\"000011\"); // 11 \nlet num4 = Number(true); // 1\n```\n\n字符串转数字有专门的函数处理：parseInt和parseFloat\n\nString 类型\n\n字符字面量：\n\n| 字面量 | 含义               |\n| ------ | ------------------ |\n| \\n     | 换行               |\n| \\t     | 制表               |\n| \\b     | 退格               |\n| \\r     | 回车               |\n| \\f     | 换页               |\n| \\\\ \\   | 反斜杠             |\n| \\\\'    | 单引号             |\n| \\\\\"    | 双引号             |\n| \\\\`    | 反引号             |\n| \\xnn   | \\x41 等于 \"A\"      |\n| \\unnnn | \\u03a3 等于字符\"Σ\" |\n\n转换为字符串：toString()\n\n模板字面量：由反引号括起来（`123`）,允许支持字符串插值（${}）\n\n模板字面量会保持反引号内部的空格\n\n模板字面量：标签函数\n\n```javascript\nfunction simpleTag(strings, aValExpression, bValExpression, sumExpression) {}\nsimpleTag`${ a } + ${ b } = ${ a + b }`;\n```\n\n获取原始字符：.raw\n\n为什么要获取原始字符：不要转义后的 © ，要 `\\u00A9`\n\n示例代码：\n\n```javascript\nfunction printRaw(strings) { \n   console.log('Actual characters:'); \n   for (const string of strings) { \n   \t\tconsole.log(string); \n   } \n   console.log('Escaped characters;'); \n   for (const rawString of strings.raw) { \n   \t\tconsole.log(rawString); \n   } \n} \nprintRaw`\\u00A9${ 'and' }\\n`; \n// Actual characters: \n// © \n//（换行符）\n// Escaped characters: \n// \\u00A9 \n// \\n\n```\n\nSymbol 类型【了解，该内容属于进阶知识，可跳过】\n\n是确保对象属性使用唯一标识符，不会发生属性冲突的危险。\n\n```javascript\nlet sym = Symbol(); \nconsole.log(typeof sym); // symbol\n```\n\n凡是可以使用字符串或数值作为属性的地方，都可以使用符号\n\n**Symbol.asyncIterator**：由 for-await-of 使用，异步迭代器API\n\n```javascript\nclass Emitter { \n   constructor(max) { \n     this.max = max; \n     this.asyncIdx = 0; \n   } \n   async *[Symbol.asyncIterator]() { \n     while(this.asyncIdx < this.max) {\n       yield new Promise((resolve) => resolve(this.asyncIdx++)); \n     } \n   } \n} \nasync function asyncCount() { \n   let emitter = new Emitter(5); \n   for await(const x of emitter) { \n    \tconsole.log(x); \n   } \n} \nasyncCount();\n```\n\n**Symbol.hasInstance** 由 instanchof 使用。确定一个对象实例的原型链上是否有原型。\n\n```javascript\nfunction Foo() {} \nlet f = new Foo(); \nconsole.log(f instanceof Foo); // true\n```\n\n重新定义原型：\n\n```javascript\nclass Bar {} \nclass Baz extends Bar { \n   static [Symbol.hasInstance]() { \n      return false; \n   } \n}\n```\n\n**Symbol.isConcatSpreadable** 了解即可\n\n**Symbol.iterator** 使用 for-of 遍历\n\n**Symbol.match** 正则表达式需要\n\n**Symbol.replace** 替换字符。 String.prototype.replace()方法使用\n\n**Symbol.search** 匹配正则表达式索引\n\n**Symbol.species** 该函数作为创建派生对象的构造函数\n\n**Symbol.split** 拆分字符串\n\n**Symbol.toPrimitive** 将对象转换为相应的原始值\n\n**Symbol.toStringTag** 默认字符串\n\n**Symbol.unscopables** 了解，不深入探究\n\nObject 类型\n\n创建对象\n\n```javascript\nlet o = new Object()\n```\n\n每个Object都有的方法：\n\n- constructor\n- hasOwnProperty(属性名)\n- isPrototypeof(object)\n- propertyIsEnumerable(*propertyName*)\n- toLocaleString\n- toString\n- valueOf\n\nObject 是所有对象的基类，所以任何对象都有这些属性和方法。\n\nBOM 和 DOM 可能会出现例外情况\n\n### 2.3 操作符\n\n操作符通常会调用 valueOf()和/或 toString()方法来取得可以计算的值。\n\n一元操作符：\n\n- 递增/递减操作符 ++/--\n\n- 一元加/减，如 s1 = +s1;\n\n- 位操作符\n\n  - 按位非 ~\n  - 按位与 &\n  - 按位或 |\n  - 按位异或 ^\n  - 左移 <<\n  - 有符号右移 >>\n  - 无符号右移 >>>\n\n- 布尔操作符\n\n  - 逻辑非 !【同时使用两个叹号（!!），相当于调用了转型函\n\n    数 Boolean()】\n\n    ```javascript\n    console.log(!false); // true \n    console.log(!\"blue\"); // false \n    console.log(!0); // true \n    console.log(!NaN); // true \n    console.log(!\"\"); // true \n    console.log(!12345); // false\n    ```\n\n  - 逻辑与 &&\n\n  - 逻辑或 ||\n\n- 乘性操作符\n\n  - 乘法 *\n  - 除法 /\n  - 取模 %\n\n- 指数操作符 ** Math.pow()\n\n- 关系操作符（大于>，等等）\n\n- 相等操作符\n\n  - 等于（==）或不等于（!=）\n  - 全等（===）或不全等（`!==`）\n\n- 条件操作符 flag ? true : false\n\n- 赋值操作符 =\n\n- 逗号操作符\n\n  ```javascript\n  let num1 = 1,num2 = 0\n  ```\n\n### 2.4 语句\n\n- if 语句\n\n- do-while语句\n\n- while 语句\n\n- for 语句\n\n- for-in 语句\n\n- for-of 语句\n\n- 标签语句 常用于内部循环跳出外部循环 break start;\n\n  ```javascript\n  start: for (let i = 0; i < count; i++) { \n   console.log(i); \n  }\n  ```\n\n- break 和 continue\n\n- with 语句 【不建议使用，严格模式报错】\n\n  ```javascript\n  let qs = location.search.substring(1); \n  let hostName = location.hostname; \n  let url = location.href;\n  // 使用 with 简化\n  with(location) { \n   let qs = search.substring(1); \n   let hostName = hostname; \n   let url = href; \n  }\n  ```\n\n- switch 语句\n\n### 2.5 函数（Function）\n\n它属于引用类型\n\n基本语法：\n\n```javascript\nfunction functionName(arg0, arg1,...,argN) { \n statements \n}\n```\n\n## 3. 变量、作用域与内存\n\n### 3.1 变量\n\n变量可以包含两种不同类型的数据：原始值和引用值\n\n原始值：简单数据类型。（typeof有效），保存在栈上\n\n引用值：多个值构成的对象。（instanceof 判断类型），保存在堆上。（引用值对象实际是指向对象的指针）\n\n### 3.2 作用域\n\n作用域链：各级上下文中的代码在访问变量和函数时的顺序。（更多资料可百度）\n\n上下文是函数，其活动对象用作变量对象加入作用域链中。\n\n对于过滤链举个简单例子方便理解：\n\n```javascript\nlet color = \"blue\"; \nfunction changeColor() { \n if (color === \"blue\") { \n \tcolor = \"red\"; \n } else { \n \tcolor = \"blue\"; \n } \n} \nchangeColor();\n```\n\n在该函数 changeColor 的作用域链中包含两个对象：\n\n1. arguments 自身变量对象【具体可百度】\n2. 全局上下文变量对象\n\n作用域链增强： catch 语句 和 with 语句\n\n作用域链中查找指定标识符，找到搜索结束，全局上下文仍然没有找到相应标识符，则其说明未定义。\n\n![image-20230605123626540](../FILES/JavaScript基础.md/image-20230605123626540.png)\n\n### 3.3 垃圾回收（进阶知识）\n\n1. 标记清理【任何上下文都无法访问，将会打上标记】\n2. 引用计数。声明变量时引用数为1，当被其他值覆盖，引用数减去1，当引用数为0，则可删除。（不建议，循环引用不适用）\n\n3. 性能问题（合适的时机删除变量）\n4. 内存管理，建议不用的变量，手动赋值 null，释放其引用\n\n### 3.4 小结\n\n1. 执行上下文分全局上下文、函数上下文和块级上下文。\n2. 代码执行流每进入一个新上下文，都会创建一个作用域链，用于搜索变量和函数。\n3. 全局上下文只能访问全局上下文中的变量和函数，不能直接访问局部上下文中的任何数据。\n4. 离开作用域的值会被自动标记为可回收，然后在垃圾回收期间被删除。\n5. 主流的垃圾回收算法是标记清理，即先给当前不使用的值加上标记，再回来回收它们的内存。\n\n## 4. 基本引用类型\n\n❤ 小提示：前面内容没有太多有用信息。\n\n### 4.1 Date\n\n#### 4.1.1 创建日期对象\n\n1. 创建一个 Date 的实例对象\n\n```javascript\nlet now = new Date(); // 2023-06-05T06:02:04.276Z\n```\n\n2. 通过 Date.parse 创建对象\n\n```javascript\nlet someDate = new Date(Date.parse(\"6/5/2023\")); // 2023-06-05T16:00:00.000Z\n```\n\nDate.parse 参数支持的格式：\n\n- 月/日/年 如: 6/5/2023\n- 月名 日, 年 如：June 5, 2023\n- 周几 月名 日 年 时:分:秒 时区 如\"Mon June 5 2032 00:00:00 GMT-0700\"\n- 【推荐】YYYY-MM-DDTHH:mm:ss.sssZ 如2019-05-23T00:00:00\n\n3. 通过 Date.UTC 创建对象 （月份应该要减去1）\n\n```javascript\n// 参数内容从左到右: 年月日时分秒\nlet utcDate = new Date(Date.UTC(2023, 6, 5, 14, 14, 55));// 2023-07-05T14:14:55.000Z\n```\n\n4. 返回当前日期 Date.now()\n\n```javascript\nlet start = Date.now(); \ndoSomething();\nlet end = Date.now();\nresult = end - start; // 用时: 2014毫秒\n```\n\n#### 4.1.2 日期格式化\n\n- toDateString 显示周几、年月日\n- toTimeString 显示时区、时分秒\n- toLocaleDateString \n- toLocaleTimeString\n- toUTCString 显示完整的UTC日期\n\n```javascript\nlet now = new Date()\nconsole.log(\"toDateString\", now.toDateString());\nconsole.log(\"toTImeString\", now.toTimeString());\nconsole.log(\"toLocaleDateString\", now.toLocaleDateString());\nconsole.log(\"toLocaleTimeString\", now.toLocaleTimeString());\nconsole.log(\"toUTCString\", now.toUTCString());\n\n// 输出结果\ntoDateString Mon Jun 05 2023\ntoTImeString 14:32:00 GMT+0800 (中国标准时间)\ntoLocaleDateString 2023/6/5\ntoLocaleTimeString 14:32:00\ntoUTCString Mon, 05 Jun 2023 06:32:00 GMT\n```\n\n#### 4.1.3 Date 类型具体方法\n\ngetTime()  返回日期的毫秒表示；与 valueOf()相同\n\nsetTime(*milliseconds*) 设置日期的毫秒表示，从而修改整个日期\n\n更多方法，访问 MDN\n\n### 4.2 RegExp 正则\n\n基本格式：\n\n```js\nlet expression = /pattern/flags;\n```\n\npattern 模式：包括字符类、限定符、分组、向前查找和反向引用\n\nflags 标记：0 个或多个，一般有6种模式\n\n- g 全局模式，查找字符串全部内容\n- i 不区分大小写\n- m 多行模式\n- y 粘附模式，只查找从 lastIndex 开始以及之后字符串\n- u Unicode 模式\n- s dotAll 模式 表示元字符`.` 匹配任何字符（包括\\n 和 \\r）】\n\n```js\nlet patter = /123/g\nlet result = patter.exec(\"a123bc\")// [ '123', index: 1, input: 'a123bc', groups: undefined ]\nlet result = patter.exec(\"abc\")// null\nlet result = patter.test(\"a123bc\");// true\n```\n\n更多资料参考菜鸟教程，多使用正则。\n\n### 4.3 原始值包含类型\n\n基本使用：\n\n```js\n// 将字符串转成数字\nlet value = Number(\"123\")\n```\n\n### 4.4 内置对象\n\n不用显示实例化内置对象，开箱即用\n\n1. Global 对象\n\n   1. isNaN 函数\n\n   2. isFinite 函数\n\n   3. parseInt 函数\n\n   4. parseFloat 函数\n\n   5. encodeURI() 用于编码URI 【类似encodeURIComponent】\n\n      ```js\n      let url = encodeURI(\"https://www.baidu.com/s?wd=菜鸟\")\n      console.log(url); // https://www.baidu.com/s?wd=%E8%8F%9C%E9%B8%9F\n      ```\n\n   6. decodeURI()和 decodeURIComponent()\n\n      ```js\n      let d = decodeURI(\"https://www.baidu.com/s?wd=%E8%8F%9C%E9%B8%9F\")\n      console.log(d); // https://www.baidu.com/s?wd=菜鸟\n      ```\n\n   7. <span style=\"color: red\"> **[强大]** </span> eval 函数，执行 JS 语句 [==容易被 XSS 利用，谨慎！！==]\n\n      ```js\n      const str = `\n          let a = 1;\n          let b = 2;\n          console.log(a + b);\n      `\n      eval(str); // 3\n      ```\n\n   8. Global 对象属性，请翻阅MDN\n\n   9. Window 属性\n\n      所有全局作用域中声明的变量和函数都变成了 window 的属性\n\n      当然： 仅限 var 声明变量 和 函数\n\n   ```js\n   var color = \"red\"; \n   function sayColor() { \n    console.log(window.color); \n   } \n   window.sayColor(); // \"red\"\n   ```\n\n2. Math 对象： 数学公式\n\n   更多资料请翻阅 MDN\n\n### 4.5 小结\n\n当代码开始执行时，全局上下文中会存在两个内置对象：Global 和 Math。\n\n## 5. 集合引用类型\n\n内容：对象、数组、定型数组、Map、WeakMap、Set和WeekSet\n\n### 5.1 Object\n\n1. 对象创建：\n\n① new 操作符\n\n```js\nlet p = new Object() // 也可以 let p = {}\np.name = \"张三\"\n```\n\n② 对象字面量\n\n```js\nlet person = { \n name: \"Nicholas\", \n age: 29 \n};\n```\n\n2. 获取属性\n\n```js\nperson[\"name\"]\nperson.name\n```\n\n### 5.2 Array\n\n1. 数组创建\n\n```js\nlet colors = new Array(); // Array(20) Array(\"1\",\"2\")\n// 字面量创建\nlet colors = [\"red\", \"green\"]\n```\n\n2. 数组拆分\n\n```js\nArray.from(\"Matt\"); // [ 'M', 'a', 't', 't' ]\n```\n\n3. 将集合映射成新数组\n\n```js\nconst m = new Map().set(1, 2) .set(3, 4); \nconst s = new Set().add(1) .add(2) .add(3) .add(4); \nconsole.log(Array.from(m)); // [[1, 2], [3, 4]] \nconsole.log(Array.from(s)); // [1, 2, 3, 4]\n```\n\n4. 浅复制当前数组\n\n```js\nconst a1 = [1, 2, 3, 4];\nconst a2 = Array.from(a1);\nconsole.log(a1 === a2);// false\n```\n\n5. 可以使用任何可迭代对象\n\n```js\nconst iter = { \n *[Symbol.iterator]() { \n yield 1; \n yield 2; \n yield 3; \n yield 4; \n } \n}; \nconsole.log(Array.from(iter)); // [1, 2, 3, 4]\n```\n\n6. arguments 转为数组\n\n```js\nfunction getArgsArray() { \n return Array.from(arguments); \n}\n```\n\n7. 换带有必要属性的自定义对象\n\n```js\nconst arrayLikeObject = { \n 0: 1, \n 1: 2, \n 2: 3, \n 3: 4, \n length: 4 \n}; \nconsole.log(Array.from(arrayLikeObject)); // [1, 2, 3, 4]\n```\n\n8. Array.of 函数\n\n```js\nArray.of(1,2,3,4); // [1,2,3,4]\n```\n\n9. 数组空位 let arr = [,,,]  { % label 不建议 orange%}\n10. 数组索引从0开始，到 length - 1结束\n11. 判断是否为数组 \n    1. instanchof\n    2. Array.isArray\n12. 迭代器方法：keys() values() 和 entries()\n13. 复制和填充方法  copyWithin 和 fill\n14. 栈方法 push 和 pop\n15. 队列方法 \n    1. shift 方法： 删除第一项并返回它，数组长度减去1\n    2. push\n    3. unshift 方法：数组开头添加，数组长度加1，返回新的数组长度\n    4. pop\n16. 排序方法 reverse 和 sort，返回数组的引用\n17. 操作方法\n    1. concat 函数 拼接数组\n    2. slice 函数 相当于切片\n    3. splice 函数，实现删除、插入、替换【<span style=\"color: red\">**常用**</span>】\n18. 搜索 \n    1. indexOf 、lastIndexOf 和 includes 【严格相等】\n    2. find、findIndex 【断言函数】\n19. 迭代方法\n    1. every 每项函数必须返回 true\n    2. filter 每项函数返回 true 组成新数组\n    3. forEach 遍历每一项\n    4. map 返回由每项函数调用的结果组成的数组\n    5. some 如果有一项返回 true\n20. 归并方法\n    1. reduce \n    2. reduceRight\n\n> 注意 如果数组中某一项是 null 或 undefined，则在 join()、toLocaleString()、\n>\n> toString()和 valueOf()返回的结果中会以空字符串表示。\n\n### 5.3 定型数组\n\n1. ArrayBuffer：可用于在内存中分配特定数量的字节空间【类似C++ 的 malloc】【定型数组及视图引用的基本单位】\n\n```js\n// 在内存中分配 16 字节\nconst buf = new ArrayBuffer(16);\nconsole.log(buf.byteLength); // 16\n```\n\nslice 方法：复制全部或部分到新数组\n\n注意：\n\n- 分配内存失败，报错\n- 分配内存不能超过 Number.MAX_SAFE_INTEGER\n- 初始成功后，将所有二进制位初始化为0\n- 可以被垃圾回收\n\n> 要读取或写入 ArrayBuffer，就必须通过视图\n\n2. DataView 允许读写 ArrayBuffer 的视图\n\n","source":"_posts/JavaScript基础.md","raw":"---\ntitle: JavaScript 基础\ndate: \nupdated:\ntags: javascript\ncategories: 前端\ncover: https://s1.ax1x.com/2023/06/20/pC8UDRf.png\n---\n\n\n\n# JS 基础\n\nJavaScript 包含很多内容，如类、期约、迭代器、代理、客户端检测、事件、动画、表单、错误处理以及JSON等。\n\n## 1. JavaScript 概念\n\n完整的 Javascript 包含3部分：\n\n- 核心（ECMAScript）\n\n- 文档对象模型（DOM）\n- 浏览器对象模型（BOM）\n\n![image-20230605092717715](../FILES/JavaScript基础.md/image-20230605092717715.png)\n\nscript 标签属性：\n\n- async 立即开始下载脚本【外部脚本】\n- charset 字符集\n- crossorigin CORS 跨域资源共享\n- defer 脚本可以延迟到文档完全被解析和显示之后再执行（最好只包含一个这样的脚本）【外部脚本】\n- src <b style=\"color: red\">重要！！</b>\n- type 脚本类型 type=\"text/javascript\"\n\nnoscript 标签：满足以下两个条件，都会被浏览器渲染。否则不会渲染 noscript 标签里内容\n\n- 不支持 JavaScript\n- 禁用 JavaScript\n\n```html\n<!DOCTYPE html> \n<html> \n <head> \n <title>Example HTML Page</title> \n <script defer=\"defer\" src=\"example1.js\"></script> \n <script defer=\"defer\" src=\"example2.js\"></script> \n </head> \n <body> \n <noscript> \n <p>该页面不支持或者禁用JavaScript.</p> \n </noscript> \n </body> \n</html>\n```\n\n注意：对不推迟执行的脚本，浏览器必须解释完位于`<script>`元素中的代码，然后才能继续渲染页面\n\n## 2. 语法基础\n\n### 2.1 变量\n\n标识符组成：（变量名建议：驼峰命名）\n\n- 第一个字符必须是一个字母、下划线（_）或美元符号（$）\n- 标识符由字母、下划线、$或数字组成\n\n```javascript\n// 有效名称 ： 合法名称\nfirstSecond \nmyCar \ndoSomethingImportant\n```\n\n开启严格模式：==\"use strict\"==。对于不安全的活动将抛出错误\n\n```javascript\nfunction doSomething() { \n \"use strict\"; \n // 函数体 \n}\n```\n\n在 JavaScript 中建议 ==加分号（;）==，压缩代码不容易出现语法错误，在某些情况下可能会提升性能，因为解析器会尝试在合适的位置补上分号以纠正语法错误。\n\n关键字如下：\n\n| break    | do       | in         | typeof |\n| -------- | -------- | ---------- | ------ |\n| case     | else     | instanceof | var    |\n| catch    | export   | new        | void   |\n| class    | extends  | return     | while  |\n| const    | finally  | super      | with   |\n| continue | for      | switch     | yield  |\n| debugger | function | this       | enum   |\n| default  | if       | throw      | 等等   |\n| delete   | import   | try        |        |\n\n**var 声明提升**：都拉到函数作用域的顶部【let 声明的变量不会被提升，即必须先声明再使用，即“暂时性死区”】\n\n```javascript\nfunction foo() {\n  console.log(age)\n  // 变量声明在下面，不报错\n  var age = 10\n}\n```\n\nlet 声明的范围是块作用域，而 var 声明的范围是函数作用域。\n\n> ✨<span style=\"color: red\">小技巧：</span>\n> 建议使用 let 声明变量，如果变量确定不会发生变化，建议使用 const 声明变量。\n\n全局声明时，let 声明变量不会成为 window 对象属性\n\n```javascript\nvar name = \"张三\"\nconsole.log(window.name); // \"张三\"\nlet age = 12\nconsole.log(window.age); // undefined\n```\n\n{%note success %}\n\n总结：const 优先，let 次之\n\n{%endnote%}\n\n### 2.2 数据类型（7种）\n\n6中简单数据类型（原始类型）：\n\n- Undefined（\"undefined\"）只有1个值 undefined\n- Null（\"\"）\n- Boolean（\"boolean\"）\n- Number（\"number\"）\n- String（\"string\"）\n- Symbol（符合）\n\n还有复杂数据类型：Object（\"object\" 或 null）（键值对的集合）\n\n确定变量类型： typeof 【操作符】，区分函数和其他对象\n\n````javascript\nlet message = \"some string\"; \nconsole.log(typeof message); // \"string\" \nconsole.log(typeof(message)); // \"string\" \nconsole.log(typeof 95); // \"number\"\n````\n\n> ✨<span style=\"color: red\">小技巧：</span>\n> 声明变量时，建议初始化，避免不必要的错误\n\n== 的使用：这个操作符会为了比较而转换它的操作数\n\n```javascript\nconsole.log(null == undefined); // true\n```\n\n一般来讲，不必显示声明为 undefined，要使用 void(0)\n\n不同类型与布尔值之间转换规则：if 等流控制语句会自动执行其他类型值到布尔值的转换（经常用！！）\n\n| 数据类型  |  转换为true的值  | 转换为false的值 |\n| :-------: | :--------------: | :-------------: |\n|  Boolean  |       true       |      false      |\n|  String   |    非空字符串    | \"\"（空字符串）  |\n|  Number   | 非零数值（无穷） |     0、NaN      |\n|  Object   |     任意对象     |      null       |\n| Undefined |  N/A（不存在）   |    undefined    |\n\nNumber最大：Number.MAX_VALUE\n\nNumber最小：Number.MIN_VALUE\n\n超出范围：Infinity 无穷 【Number.NEGATIVE_INFINITY 和 Number.POSITIVE_INFINITY 也可以获取正、负 Infinity。】\n\n确定一个值是不是无穷大：isFinite 函数\n\nNaN （非数值）：console.log(0/0); // NaN \n\n判断是否为非数值：isNaN\n\n> isNaN()可以用于测试对象。此时，首先会调用对象的 valueOf()方法，然后再确定返回的值是否可以转换为数值。如果不能，再调用 toString()方法，并测试其返回值\n\n```javascript\nconsole.log(isNaN(NaN)); // true \nconsole.log(isNaN(10)); // false，10 是数值\nconsole.log(isNaN(\"10\")); // false，可以转换为数值 10 \nconsole.log(isNaN(\"blue\")); // true，不可以转换为数值\nconsole.log(isNaN(true)); // false，可以转换为数值 1\n```\n\n将非数值转换为数值：Number()、parseInt()和 parseFloat()\n\nNumber函数转换规则：\n\n- 布尔值 true为1\n- 数值，直接返回\n- null 返回0\n- undefined 返回NaN\n- 字符串【isNaN 为 true】\n- 对象，调用 valueOf 方法，如果结果为 NaN，调用 toString() 方法\n\n```javascript\nlet num1 = Number(\"Hello world!\"); // NaN \nlet num2 = Number(\"\"); // 0 \nlet num3 = Number(\"000011\"); // 11 \nlet num4 = Number(true); // 1\n```\n\n字符串转数字有专门的函数处理：parseInt和parseFloat\n\nString 类型\n\n字符字面量：\n\n| 字面量 | 含义               |\n| ------ | ------------------ |\n| \\n     | 换行               |\n| \\t     | 制表               |\n| \\b     | 退格               |\n| \\r     | 回车               |\n| \\f     | 换页               |\n| \\\\ \\   | 反斜杠             |\n| \\\\'    | 单引号             |\n| \\\\\"    | 双引号             |\n| \\\\`    | 反引号             |\n| \\xnn   | \\x41 等于 \"A\"      |\n| \\unnnn | \\u03a3 等于字符\"Σ\" |\n\n转换为字符串：toString()\n\n模板字面量：由反引号括起来（`123`）,允许支持字符串插值（${}）\n\n模板字面量会保持反引号内部的空格\n\n模板字面量：标签函数\n\n```javascript\nfunction simpleTag(strings, aValExpression, bValExpression, sumExpression) {}\nsimpleTag`${ a } + ${ b } = ${ a + b }`;\n```\n\n获取原始字符：.raw\n\n为什么要获取原始字符：不要转义后的 © ，要 `\\u00A9`\n\n示例代码：\n\n```javascript\nfunction printRaw(strings) { \n   console.log('Actual characters:'); \n   for (const string of strings) { \n   \t\tconsole.log(string); \n   } \n   console.log('Escaped characters;'); \n   for (const rawString of strings.raw) { \n   \t\tconsole.log(rawString); \n   } \n} \nprintRaw`\\u00A9${ 'and' }\\n`; \n// Actual characters: \n// © \n//（换行符）\n// Escaped characters: \n// \\u00A9 \n// \\n\n```\n\nSymbol 类型【了解，该内容属于进阶知识，可跳过】\n\n是确保对象属性使用唯一标识符，不会发生属性冲突的危险。\n\n```javascript\nlet sym = Symbol(); \nconsole.log(typeof sym); // symbol\n```\n\n凡是可以使用字符串或数值作为属性的地方，都可以使用符号\n\n**Symbol.asyncIterator**：由 for-await-of 使用，异步迭代器API\n\n```javascript\nclass Emitter { \n   constructor(max) { \n     this.max = max; \n     this.asyncIdx = 0; \n   } \n   async *[Symbol.asyncIterator]() { \n     while(this.asyncIdx < this.max) {\n       yield new Promise((resolve) => resolve(this.asyncIdx++)); \n     } \n   } \n} \nasync function asyncCount() { \n   let emitter = new Emitter(5); \n   for await(const x of emitter) { \n    \tconsole.log(x); \n   } \n} \nasyncCount();\n```\n\n**Symbol.hasInstance** 由 instanchof 使用。确定一个对象实例的原型链上是否有原型。\n\n```javascript\nfunction Foo() {} \nlet f = new Foo(); \nconsole.log(f instanceof Foo); // true\n```\n\n重新定义原型：\n\n```javascript\nclass Bar {} \nclass Baz extends Bar { \n   static [Symbol.hasInstance]() { \n      return false; \n   } \n}\n```\n\n**Symbol.isConcatSpreadable** 了解即可\n\n**Symbol.iterator** 使用 for-of 遍历\n\n**Symbol.match** 正则表达式需要\n\n**Symbol.replace** 替换字符。 String.prototype.replace()方法使用\n\n**Symbol.search** 匹配正则表达式索引\n\n**Symbol.species** 该函数作为创建派生对象的构造函数\n\n**Symbol.split** 拆分字符串\n\n**Symbol.toPrimitive** 将对象转换为相应的原始值\n\n**Symbol.toStringTag** 默认字符串\n\n**Symbol.unscopables** 了解，不深入探究\n\nObject 类型\n\n创建对象\n\n```javascript\nlet o = new Object()\n```\n\n每个Object都有的方法：\n\n- constructor\n- hasOwnProperty(属性名)\n- isPrototypeof(object)\n- propertyIsEnumerable(*propertyName*)\n- toLocaleString\n- toString\n- valueOf\n\nObject 是所有对象的基类，所以任何对象都有这些属性和方法。\n\nBOM 和 DOM 可能会出现例外情况\n\n### 2.3 操作符\n\n操作符通常会调用 valueOf()和/或 toString()方法来取得可以计算的值。\n\n一元操作符：\n\n- 递增/递减操作符 ++/--\n\n- 一元加/减，如 s1 = +s1;\n\n- 位操作符\n\n  - 按位非 ~\n  - 按位与 &\n  - 按位或 |\n  - 按位异或 ^\n  - 左移 <<\n  - 有符号右移 >>\n  - 无符号右移 >>>\n\n- 布尔操作符\n\n  - 逻辑非 !【同时使用两个叹号（!!），相当于调用了转型函\n\n    数 Boolean()】\n\n    ```javascript\n    console.log(!false); // true \n    console.log(!\"blue\"); // false \n    console.log(!0); // true \n    console.log(!NaN); // true \n    console.log(!\"\"); // true \n    console.log(!12345); // false\n    ```\n\n  - 逻辑与 &&\n\n  - 逻辑或 ||\n\n- 乘性操作符\n\n  - 乘法 *\n  - 除法 /\n  - 取模 %\n\n- 指数操作符 ** Math.pow()\n\n- 关系操作符（大于>，等等）\n\n- 相等操作符\n\n  - 等于（==）或不等于（!=）\n  - 全等（===）或不全等（`!==`）\n\n- 条件操作符 flag ? true : false\n\n- 赋值操作符 =\n\n- 逗号操作符\n\n  ```javascript\n  let num1 = 1,num2 = 0\n  ```\n\n### 2.4 语句\n\n- if 语句\n\n- do-while语句\n\n- while 语句\n\n- for 语句\n\n- for-in 语句\n\n- for-of 语句\n\n- 标签语句 常用于内部循环跳出外部循环 break start;\n\n  ```javascript\n  start: for (let i = 0; i < count; i++) { \n   console.log(i); \n  }\n  ```\n\n- break 和 continue\n\n- with 语句 【不建议使用，严格模式报错】\n\n  ```javascript\n  let qs = location.search.substring(1); \n  let hostName = location.hostname; \n  let url = location.href;\n  // 使用 with 简化\n  with(location) { \n   let qs = search.substring(1); \n   let hostName = hostname; \n   let url = href; \n  }\n  ```\n\n- switch 语句\n\n### 2.5 函数（Function）\n\n它属于引用类型\n\n基本语法：\n\n```javascript\nfunction functionName(arg0, arg1,...,argN) { \n statements \n}\n```\n\n## 3. 变量、作用域与内存\n\n### 3.1 变量\n\n变量可以包含两种不同类型的数据：原始值和引用值\n\n原始值：简单数据类型。（typeof有效），保存在栈上\n\n引用值：多个值构成的对象。（instanceof 判断类型），保存在堆上。（引用值对象实际是指向对象的指针）\n\n### 3.2 作用域\n\n作用域链：各级上下文中的代码在访问变量和函数时的顺序。（更多资料可百度）\n\n上下文是函数，其活动对象用作变量对象加入作用域链中。\n\n对于过滤链举个简单例子方便理解：\n\n```javascript\nlet color = \"blue\"; \nfunction changeColor() { \n if (color === \"blue\") { \n \tcolor = \"red\"; \n } else { \n \tcolor = \"blue\"; \n } \n} \nchangeColor();\n```\n\n在该函数 changeColor 的作用域链中包含两个对象：\n\n1. arguments 自身变量对象【具体可百度】\n2. 全局上下文变量对象\n\n作用域链增强： catch 语句 和 with 语句\n\n作用域链中查找指定标识符，找到搜索结束，全局上下文仍然没有找到相应标识符，则其说明未定义。\n\n![image-20230605123626540](../FILES/JavaScript基础.md/image-20230605123626540.png)\n\n### 3.3 垃圾回收（进阶知识）\n\n1. 标记清理【任何上下文都无法访问，将会打上标记】\n2. 引用计数。声明变量时引用数为1，当被其他值覆盖，引用数减去1，当引用数为0，则可删除。（不建议，循环引用不适用）\n\n3. 性能问题（合适的时机删除变量）\n4. 内存管理，建议不用的变量，手动赋值 null，释放其引用\n\n### 3.4 小结\n\n1. 执行上下文分全局上下文、函数上下文和块级上下文。\n2. 代码执行流每进入一个新上下文，都会创建一个作用域链，用于搜索变量和函数。\n3. 全局上下文只能访问全局上下文中的变量和函数，不能直接访问局部上下文中的任何数据。\n4. 离开作用域的值会被自动标记为可回收，然后在垃圾回收期间被删除。\n5. 主流的垃圾回收算法是标记清理，即先给当前不使用的值加上标记，再回来回收它们的内存。\n\n## 4. 基本引用类型\n\n❤ 小提示：前面内容没有太多有用信息。\n\n### 4.1 Date\n\n#### 4.1.1 创建日期对象\n\n1. 创建一个 Date 的实例对象\n\n```javascript\nlet now = new Date(); // 2023-06-05T06:02:04.276Z\n```\n\n2. 通过 Date.parse 创建对象\n\n```javascript\nlet someDate = new Date(Date.parse(\"6/5/2023\")); // 2023-06-05T16:00:00.000Z\n```\n\nDate.parse 参数支持的格式：\n\n- 月/日/年 如: 6/5/2023\n- 月名 日, 年 如：June 5, 2023\n- 周几 月名 日 年 时:分:秒 时区 如\"Mon June 5 2032 00:00:00 GMT-0700\"\n- 【推荐】YYYY-MM-DDTHH:mm:ss.sssZ 如2019-05-23T00:00:00\n\n3. 通过 Date.UTC 创建对象 （月份应该要减去1）\n\n```javascript\n// 参数内容从左到右: 年月日时分秒\nlet utcDate = new Date(Date.UTC(2023, 6, 5, 14, 14, 55));// 2023-07-05T14:14:55.000Z\n```\n\n4. 返回当前日期 Date.now()\n\n```javascript\nlet start = Date.now(); \ndoSomething();\nlet end = Date.now();\nresult = end - start; // 用时: 2014毫秒\n```\n\n#### 4.1.2 日期格式化\n\n- toDateString 显示周几、年月日\n- toTimeString 显示时区、时分秒\n- toLocaleDateString \n- toLocaleTimeString\n- toUTCString 显示完整的UTC日期\n\n```javascript\nlet now = new Date()\nconsole.log(\"toDateString\", now.toDateString());\nconsole.log(\"toTImeString\", now.toTimeString());\nconsole.log(\"toLocaleDateString\", now.toLocaleDateString());\nconsole.log(\"toLocaleTimeString\", now.toLocaleTimeString());\nconsole.log(\"toUTCString\", now.toUTCString());\n\n// 输出结果\ntoDateString Mon Jun 05 2023\ntoTImeString 14:32:00 GMT+0800 (中国标准时间)\ntoLocaleDateString 2023/6/5\ntoLocaleTimeString 14:32:00\ntoUTCString Mon, 05 Jun 2023 06:32:00 GMT\n```\n\n#### 4.1.3 Date 类型具体方法\n\ngetTime()  返回日期的毫秒表示；与 valueOf()相同\n\nsetTime(*milliseconds*) 设置日期的毫秒表示，从而修改整个日期\n\n更多方法，访问 MDN\n\n### 4.2 RegExp 正则\n\n基本格式：\n\n```js\nlet expression = /pattern/flags;\n```\n\npattern 模式：包括字符类、限定符、分组、向前查找和反向引用\n\nflags 标记：0 个或多个，一般有6种模式\n\n- g 全局模式，查找字符串全部内容\n- i 不区分大小写\n- m 多行模式\n- y 粘附模式，只查找从 lastIndex 开始以及之后字符串\n- u Unicode 模式\n- s dotAll 模式 表示元字符`.` 匹配任何字符（包括\\n 和 \\r）】\n\n```js\nlet patter = /123/g\nlet result = patter.exec(\"a123bc\")// [ '123', index: 1, input: 'a123bc', groups: undefined ]\nlet result = patter.exec(\"abc\")// null\nlet result = patter.test(\"a123bc\");// true\n```\n\n更多资料参考菜鸟教程，多使用正则。\n\n### 4.3 原始值包含类型\n\n基本使用：\n\n```js\n// 将字符串转成数字\nlet value = Number(\"123\")\n```\n\n### 4.4 内置对象\n\n不用显示实例化内置对象，开箱即用\n\n1. Global 对象\n\n   1. isNaN 函数\n\n   2. isFinite 函数\n\n   3. parseInt 函数\n\n   4. parseFloat 函数\n\n   5. encodeURI() 用于编码URI 【类似encodeURIComponent】\n\n      ```js\n      let url = encodeURI(\"https://www.baidu.com/s?wd=菜鸟\")\n      console.log(url); // https://www.baidu.com/s?wd=%E8%8F%9C%E9%B8%9F\n      ```\n\n   6. decodeURI()和 decodeURIComponent()\n\n      ```js\n      let d = decodeURI(\"https://www.baidu.com/s?wd=%E8%8F%9C%E9%B8%9F\")\n      console.log(d); // https://www.baidu.com/s?wd=菜鸟\n      ```\n\n   7. <span style=\"color: red\"> **[强大]** </span> eval 函数，执行 JS 语句 [==容易被 XSS 利用，谨慎！！==]\n\n      ```js\n      const str = `\n          let a = 1;\n          let b = 2;\n          console.log(a + b);\n      `\n      eval(str); // 3\n      ```\n\n   8. Global 对象属性，请翻阅MDN\n\n   9. Window 属性\n\n      所有全局作用域中声明的变量和函数都变成了 window 的属性\n\n      当然： 仅限 var 声明变量 和 函数\n\n   ```js\n   var color = \"red\"; \n   function sayColor() { \n    console.log(window.color); \n   } \n   window.sayColor(); // \"red\"\n   ```\n\n2. Math 对象： 数学公式\n\n   更多资料请翻阅 MDN\n\n### 4.5 小结\n\n当代码开始执行时，全局上下文中会存在两个内置对象：Global 和 Math。\n\n## 5. 集合引用类型\n\n内容：对象、数组、定型数组、Map、WeakMap、Set和WeekSet\n\n### 5.1 Object\n\n1. 对象创建：\n\n① new 操作符\n\n```js\nlet p = new Object() // 也可以 let p = {}\np.name = \"张三\"\n```\n\n② 对象字面量\n\n```js\nlet person = { \n name: \"Nicholas\", \n age: 29 \n};\n```\n\n2. 获取属性\n\n```js\nperson[\"name\"]\nperson.name\n```\n\n### 5.2 Array\n\n1. 数组创建\n\n```js\nlet colors = new Array(); // Array(20) Array(\"1\",\"2\")\n// 字面量创建\nlet colors = [\"red\", \"green\"]\n```\n\n2. 数组拆分\n\n```js\nArray.from(\"Matt\"); // [ 'M', 'a', 't', 't' ]\n```\n\n3. 将集合映射成新数组\n\n```js\nconst m = new Map().set(1, 2) .set(3, 4); \nconst s = new Set().add(1) .add(2) .add(3) .add(4); \nconsole.log(Array.from(m)); // [[1, 2], [3, 4]] \nconsole.log(Array.from(s)); // [1, 2, 3, 4]\n```\n\n4. 浅复制当前数组\n\n```js\nconst a1 = [1, 2, 3, 4];\nconst a2 = Array.from(a1);\nconsole.log(a1 === a2);// false\n```\n\n5. 可以使用任何可迭代对象\n\n```js\nconst iter = { \n *[Symbol.iterator]() { \n yield 1; \n yield 2; \n yield 3; \n yield 4; \n } \n}; \nconsole.log(Array.from(iter)); // [1, 2, 3, 4]\n```\n\n6. arguments 转为数组\n\n```js\nfunction getArgsArray() { \n return Array.from(arguments); \n}\n```\n\n7. 换带有必要属性的自定义对象\n\n```js\nconst arrayLikeObject = { \n 0: 1, \n 1: 2, \n 2: 3, \n 3: 4, \n length: 4 \n}; \nconsole.log(Array.from(arrayLikeObject)); // [1, 2, 3, 4]\n```\n\n8. Array.of 函数\n\n```js\nArray.of(1,2,3,4); // [1,2,3,4]\n```\n\n9. 数组空位 let arr = [,,,]  { % label 不建议 orange%}\n10. 数组索引从0开始，到 length - 1结束\n11. 判断是否为数组 \n    1. instanchof\n    2. Array.isArray\n12. 迭代器方法：keys() values() 和 entries()\n13. 复制和填充方法  copyWithin 和 fill\n14. 栈方法 push 和 pop\n15. 队列方法 \n    1. shift 方法： 删除第一项并返回它，数组长度减去1\n    2. push\n    3. unshift 方法：数组开头添加，数组长度加1，返回新的数组长度\n    4. pop\n16. 排序方法 reverse 和 sort，返回数组的引用\n17. 操作方法\n    1. concat 函数 拼接数组\n    2. slice 函数 相当于切片\n    3. splice 函数，实现删除、插入、替换【<span style=\"color: red\">**常用**</span>】\n18. 搜索 \n    1. indexOf 、lastIndexOf 和 includes 【严格相等】\n    2. find、findIndex 【断言函数】\n19. 迭代方法\n    1. every 每项函数必须返回 true\n    2. filter 每项函数返回 true 组成新数组\n    3. forEach 遍历每一项\n    4. map 返回由每项函数调用的结果组成的数组\n    5. some 如果有一项返回 true\n20. 归并方法\n    1. reduce \n    2. reduceRight\n\n> 注意 如果数组中某一项是 null 或 undefined，则在 join()、toLocaleString()、\n>\n> toString()和 valueOf()返回的结果中会以空字符串表示。\n\n### 5.3 定型数组\n\n1. ArrayBuffer：可用于在内存中分配特定数量的字节空间【类似C++ 的 malloc】【定型数组及视图引用的基本单位】\n\n```js\n// 在内存中分配 16 字节\nconst buf = new ArrayBuffer(16);\nconsole.log(buf.byteLength); // 16\n```\n\nslice 方法：复制全部或部分到新数组\n\n注意：\n\n- 分配内存失败，报错\n- 分配内存不能超过 Number.MAX_SAFE_INTEGER\n- 初始成功后，将所有二进制位初始化为0\n- 可以被垃圾回收\n\n> 要读取或写入 ArrayBuffer，就必须通过视图\n\n2. DataView 允许读写 ArrayBuffer 的视图\n\n","slug":"JavaScript基础","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmoo001e1kv25ct3ck9g","content":"<h1 id=\"JS-基础\"><a href=\"#JS-基础\" class=\"headerlink\" title=\"JS 基础\"></a>JS 基础</h1><p>JavaScript 包含很多内容，如类、期约、迭代器、代理、客户端检测、事件、动画、表单、错误处理以及JSON等。</p>\n<h2 id=\"1-JavaScript-概念\"><a href=\"#1-JavaScript-概念\" class=\"headerlink\" title=\"1. JavaScript 概念\"></a>1. JavaScript 概念</h2><p>完整的 Javascript 包含3部分：</p>\n<ul>\n<li><p>核心（ECMAScript）</p>\n</li>\n<li><p>文档对象模型（DOM）</p>\n</li>\n<li><p>浏览器对象模型（BOM）</p>\n</li>\n</ul>\n<p><img src=\"/lingtan/../FILES/JavaScript%E5%9F%BA%E7%A1%80.md/image-20230605092717715.png\" alt=\"image-20230605092717715\"></p>\n<p>script 标签属性：</p>\n<ul>\n<li>async 立即开始下载脚本【外部脚本】</li>\n<li>charset 字符集</li>\n<li>crossorigin CORS 跨域资源共享</li>\n<li>defer 脚本可以延迟到文档完全被解析和显示之后再执行（最好只包含一个这样的脚本）【外部脚本】</li>\n<li>src <b style=\"color: red\">重要！！</b></li>\n<li>type 脚本类型 type&#x3D;”text&#x2F;javascript”</li>\n</ul>\n<p>noscript 标签：满足以下两个条件，都会被浏览器渲染。否则不会渲染 noscript 标签里内容</p>\n<ul>\n<li>不支持 JavaScript</li>\n<li>禁用 JavaScript</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Example HTML Page<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">defer</span>=<span class=\"string\">&quot;defer&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;example1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">defer</span>=<span class=\"string\">&quot;defer&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;example2.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">noscript</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>该页面不支持或者禁用JavaScript.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">noscript</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>注意：对不推迟执行的脚本，浏览器必须解释完位于<code>&lt;script&gt;</code>元素中的代码，然后才能继续渲染页面</p>\n<h2 id=\"2-语法基础\"><a href=\"#2-语法基础\" class=\"headerlink\" title=\"2. 语法基础\"></a>2. 语法基础</h2><h3 id=\"2-1-变量\"><a href=\"#2-1-变量\" class=\"headerlink\" title=\"2.1 变量\"></a>2.1 变量</h3><p>标识符组成：（变量名建议：驼峰命名）</p>\n<ul>\n<li>第一个字符必须是一个字母、下划线（_）或美元符号（$）</li>\n<li>标识符由字母、下划线、$或数字组成</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 有效名称 ： 合法名称</span></span><br><span class=\"line\">firstSecond </span><br><span class=\"line\">myCar </span><br><span class=\"line\">doSomethingImportant</span><br></pre></td></tr></table></figure>\n\n<p>开启严格模式：&#x3D;&#x3D;”use strict”&#x3D;&#x3D;。对于不安全的活动将抛出错误</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">doSomething</span>(<span class=\"params\"></span>) &#123; </span><br><span class=\"line\"> <span class=\"string\">&quot;use strict&quot;</span>; </span><br><span class=\"line\"> <span class=\"comment\">// 函数体 </span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在 JavaScript 中建议 &#x3D;&#x3D;加分号（;）&#x3D;&#x3D;，压缩代码不容易出现语法错误，在某些情况下可能会提升性能，因为解析器会尝试在合适的位置补上分号以纠正语法错误。</p>\n<p>关键字如下：</p>\n<table>\n<thead>\n<tr>\n<th>break</th>\n<th>do</th>\n<th>in</th>\n<th>typeof</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>case</td>\n<td>else</td>\n<td>instanceof</td>\n<td>var</td>\n</tr>\n<tr>\n<td>catch</td>\n<td>export</td>\n<td>new</td>\n<td>void</td>\n</tr>\n<tr>\n<td>class</td>\n<td>extends</td>\n<td>return</td>\n<td>while</td>\n</tr>\n<tr>\n<td>const</td>\n<td>finally</td>\n<td>super</td>\n<td>with</td>\n</tr>\n<tr>\n<td>continue</td>\n<td>for</td>\n<td>switch</td>\n<td>yield</td>\n</tr>\n<tr>\n<td>debugger</td>\n<td>function</td>\n<td>this</td>\n<td>enum</td>\n</tr>\n<tr>\n<td>default</td>\n<td>if</td>\n<td>throw</td>\n<td>等等</td>\n</tr>\n<tr>\n<td>delete</td>\n<td>import</td>\n<td>try</td>\n<td></td>\n</tr>\n</tbody></table>\n<p><strong>var 声明提升</strong>：都拉到函数作用域的顶部【let 声明的变量不会被提升，即必须先声明再使用，即“暂时性死区”】</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(age)</span><br><span class=\"line\">  <span class=\"comment\">// 变量声明在下面，不报错</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> age = <span class=\"number\">10</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>let 声明的范围是块作用域，而 var 声明的范围是函数作用域。</p>\n<blockquote>\n<p>✨<span style=\"color: red\">小技巧：</span><br>建议使用 let 声明变量，如果变量确定不会发生变化，建议使用 const 声明变量。</p>\n</blockquote>\n<p>全局声明时，let 声明变量不会成为 window 对象属性</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&quot;张三&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">name</span>); <span class=\"comment\">// &quot;张三&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> age = <span class=\"number\">12</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">age</span>); <span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note success flat\"><p>总结：const 优先，let 次之</p>\n</div>\n\n<h3 id=\"2-2-数据类型（7种）\"><a href=\"#2-2-数据类型（7种）\" class=\"headerlink\" title=\"2.2 数据类型（7种）\"></a>2.2 数据类型（7种）</h3><p>6中简单数据类型（原始类型）：</p>\n<ul>\n<li>Undefined（”undefined”）只有1个值 undefined</li>\n<li>Null（””）</li>\n<li>Boolean（”boolean”）</li>\n<li>Number（”number”）</li>\n<li>String（”string”）</li>\n<li>Symbol（符合）</li>\n</ul>\n<p>还有复杂数据类型：Object（”object” 或 null）（键值对的集合）</p>\n<p>确定变量类型： typeof 【操作符】，区分函数和其他对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> message = <span class=\"string\">&quot;some string&quot;</span>; </span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> message); <span class=\"comment\">// &quot;string&quot; </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">typeof</span>(message)); <span class=\"comment\">// &quot;string&quot; </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"number\">95</span>); <span class=\"comment\">// &quot;number&quot;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>✨<span style=\"color: red\">小技巧：</span><br>声明变量时，建议初始化，避免不必要的错误</p>\n</blockquote>\n<p>&#x3D;&#x3D; 的使用：这个操作符会为了比较而转换它的操作数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">null</span> == <span class=\"literal\">undefined</span>); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<p>一般来讲，不必显示声明为 undefined，要使用 void(0)</p>\n<p>不同类型与布尔值之间转换规则：if 等流控制语句会自动执行其他类型值到布尔值的转换（经常用！！）</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">数据类型</th>\n<th align=\"center\">转换为true的值</th>\n<th align=\"center\">转换为false的值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Boolean</td>\n<td align=\"center\">true</td>\n<td align=\"center\">false</td>\n</tr>\n<tr>\n<td align=\"center\">String</td>\n<td align=\"center\">非空字符串</td>\n<td align=\"center\">“”（空字符串）</td>\n</tr>\n<tr>\n<td align=\"center\">Number</td>\n<td align=\"center\">非零数值（无穷）</td>\n<td align=\"center\">0、NaN</td>\n</tr>\n<tr>\n<td align=\"center\">Object</td>\n<td align=\"center\">任意对象</td>\n<td align=\"center\">null</td>\n</tr>\n<tr>\n<td align=\"center\">Undefined</td>\n<td align=\"center\">N&#x2F;A（不存在）</td>\n<td align=\"center\">undefined</td>\n</tr>\n</tbody></table>\n<p>Number最大：Number.MAX_VALUE</p>\n<p>Number最小：Number.MIN_VALUE</p>\n<p>超出范围：Infinity 无穷 【Number.NEGATIVE_INFINITY 和 Number.POSITIVE_INFINITY 也可以获取正、负 Infinity。】</p>\n<p>确定一个值是不是无穷大：isFinite 函数</p>\n<p>NaN （非数值）：console.log(0&#x2F;0); &#x2F;&#x2F; NaN </p>\n<p>判断是否为非数值：isNaN</p>\n<blockquote>\n<p>isNaN()可以用于测试对象。此时，首先会调用对象的 valueOf()方法，然后再确定返回的值是否可以转换为数值。如果不能，再调用 toString()方法，并测试其返回值</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">isNaN</span>(<span class=\"title class_\">NaN</span>)); <span class=\"comment\">// true </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">isNaN</span>(<span class=\"number\">10</span>)); <span class=\"comment\">// false，10 是数值</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">isNaN</span>(<span class=\"string\">&quot;10&quot;</span>)); <span class=\"comment\">// false，可以转换为数值 10 </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">isNaN</span>(<span class=\"string\">&quot;blue&quot;</span>)); <span class=\"comment\">// true，不可以转换为数值</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">isNaN</span>(<span class=\"literal\">true</span>)); <span class=\"comment\">// false，可以转换为数值 1</span></span><br></pre></td></tr></table></figure>\n\n<p>将非数值转换为数值：Number()、parseInt()和 parseFloat()</p>\n<p>Number函数转换规则：</p>\n<ul>\n<li>布尔值 true为1</li>\n<li>数值，直接返回</li>\n<li>null 返回0</li>\n<li>undefined 返回NaN</li>\n<li>字符串【isNaN 为 true】</li>\n<li>对象，调用 valueOf 方法，如果结果为 NaN，调用 toString() 方法</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> num1 = <span class=\"title class_\">Number</span>(<span class=\"string\">&quot;Hello world!&quot;</span>); <span class=\"comment\">// NaN </span></span><br><span class=\"line\"><span class=\"keyword\">let</span> num2 = <span class=\"title class_\">Number</span>(<span class=\"string\">&quot;&quot;</span>); <span class=\"comment\">// 0 </span></span><br><span class=\"line\"><span class=\"keyword\">let</span> num3 = <span class=\"title class_\">Number</span>(<span class=\"string\">&quot;000011&quot;</span>); <span class=\"comment\">// 11 </span></span><br><span class=\"line\"><span class=\"keyword\">let</span> num4 = <span class=\"title class_\">Number</span>(<span class=\"literal\">true</span>); <span class=\"comment\">// 1</span></span><br></pre></td></tr></table></figure>\n\n<p>字符串转数字有专门的函数处理：parseInt和parseFloat</p>\n<p>String 类型</p>\n<p>字符字面量：</p>\n<table>\n<thead>\n<tr>\n<th>字面量</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>\\n</td>\n<td>换行</td>\n</tr>\n<tr>\n<td>\\t</td>\n<td>制表</td>\n</tr>\n<tr>\n<td>\\b</td>\n<td>退格</td>\n</tr>\n<tr>\n<td>\\r</td>\n<td>回车</td>\n</tr>\n<tr>\n<td>\\f</td>\n<td>换页</td>\n</tr>\n<tr>\n<td>\\ \\</td>\n<td>反斜杠</td>\n</tr>\n<tr>\n<td>\\‘</td>\n<td>单引号</td>\n</tr>\n<tr>\n<td>\\“</td>\n<td>双引号</td>\n</tr>\n<tr>\n<td>\\&#96;</td>\n<td>反引号</td>\n</tr>\n<tr>\n<td>\\xnn</td>\n<td>\\x41 等于 “A”</td>\n</tr>\n<tr>\n<td>\\unnnn</td>\n<td>\\u03a3 等于字符”Σ”</td>\n</tr>\n</tbody></table>\n<p>转换为字符串：toString()</p>\n<p>模板字面量：由反引号括起来（<code>123</code>）,允许支持字符串插值（${}）</p>\n<p>模板字面量会保持反引号内部的空格</p>\n<p>模板字面量：标签函数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">simpleTag</span>(<span class=\"params\">strings, aValExpression, bValExpression, sumExpression</span>) &#123;&#125;</span><br><span class=\"line\">simpleTag<span class=\"string\">`<span class=\"subst\">$&#123; a &#125;</span> + <span class=\"subst\">$&#123; b &#125;</span> = <span class=\"subst\">$&#123; a + b &#125;</span>`</span>;</span><br></pre></td></tr></table></figure>\n\n<p>获取原始字符：.raw</p>\n<p>为什么要获取原始字符：不要转义后的 © ，要 <code>\\u00A9</code></p>\n<p>示例代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">printRaw</span>(<span class=\"params\">strings</span>) &#123; </span><br><span class=\"line\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Actual characters:&#x27;</span>); </span><br><span class=\"line\">   <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> string <span class=\"keyword\">of</span> strings) &#123; </span><br><span class=\"line\">   \t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(string); </span><br><span class=\"line\">   &#125; </span><br><span class=\"line\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Escaped characters;&#x27;</span>); </span><br><span class=\"line\">   <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> rawString <span class=\"keyword\">of</span> strings.<span class=\"property\">raw</span>) &#123; </span><br><span class=\"line\">   \t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(rawString); </span><br><span class=\"line\">   &#125; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\">printRaw<span class=\"string\">`\\u00A9<span class=\"subst\">$&#123; <span class=\"string\">&#x27;and&#x27;</span> &#125;</span>\\n`</span>; </span><br><span class=\"line\"><span class=\"comment\">// Actual characters: </span></span><br><span class=\"line\"><span class=\"comment\">// © </span></span><br><span class=\"line\"><span class=\"comment\">//（换行符）</span></span><br><span class=\"line\"><span class=\"comment\">// Escaped characters: </span></span><br><span class=\"line\"><span class=\"comment\">// \\u00A9 </span></span><br><span class=\"line\"><span class=\"comment\">// \\n</span></span><br></pre></td></tr></table></figure>\n\n<p>Symbol 类型【了解，该内容属于进阶知识，可跳过】</p>\n<p>是确保对象属性使用唯一标识符，不会发生属性冲突的危险。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> sym = <span class=\"title class_\">Symbol</span>(); </span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> sym); <span class=\"comment\">// symbol</span></span><br></pre></td></tr></table></figure>\n\n<p>凡是可以使用字符串或数值作为属性的地方，都可以使用符号</p>\n<p><strong>Symbol.asyncIterator</strong>：由 for-await-of 使用，异步迭代器API</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Emitter</span> &#123; </span><br><span class=\"line\">   <span class=\"title function_\">constructor</span>(<span class=\"params\">max</span>) &#123; </span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">max</span> = max; </span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">asyncIdx</span> = <span class=\"number\">0</span>; </span><br><span class=\"line\">   &#125; </span><br><span class=\"line\">   <span class=\"keyword\">async</span> *[<span class=\"title class_\">Symbol</span>.<span class=\"property\">asyncIterator</span>]() &#123; </span><br><span class=\"line\">     <span class=\"keyword\">while</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">asyncIdx</span> &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">max</span>) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">yield</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve</span>) =&gt;</span> <span class=\"title function_\">resolve</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">asyncIdx</span>++)); </span><br><span class=\"line\">     &#125; </span><br><span class=\"line\">   &#125; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">asyncCount</span>(<span class=\"params\"></span>) &#123; </span><br><span class=\"line\">   <span class=\"keyword\">let</span> emitter = <span class=\"keyword\">new</span> <span class=\"title class_\">Emitter</span>(<span class=\"number\">5</span>); </span><br><span class=\"line\">   <span class=\"keyword\">for</span> <span class=\"title function_\">await</span>(<span class=\"params\"><span class=\"keyword\">const</span> x <span class=\"keyword\">of</span> emitter</span>) &#123; </span><br><span class=\"line\">    \t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x); </span><br><span class=\"line\">   &#125; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"title function_\">asyncCount</span>();</span><br></pre></td></tr></table></figure>\n\n<p><strong>Symbol.hasInstance</strong> 由 instanchof 使用。确定一个对象实例的原型链上是否有原型。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Foo</span>(<span class=\"params\"></span>) &#123;&#125; </span><br><span class=\"line\"><span class=\"keyword\">let</span> f = <span class=\"keyword\">new</span> <span class=\"title class_\">Foo</span>(); </span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(f <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Foo</span>); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<p>重新定义原型：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Bar</span> &#123;&#125; </span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Baz</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Bar</span> &#123; </span><br><span class=\"line\">   <span class=\"keyword\">static</span> [<span class=\"title class_\">Symbol</span>.<span class=\"property\">hasInstance</span>]() &#123; </span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>; </span><br><span class=\"line\">   &#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Symbol.isConcatSpreadable</strong> 了解即可</p>\n<p><strong>Symbol.iterator</strong> 使用 for-of 遍历</p>\n<p><strong>Symbol.match</strong> 正则表达式需要</p>\n<p><strong>Symbol.replace</strong> 替换字符。 String.prototype.replace()方法使用</p>\n<p><strong>Symbol.search</strong> 匹配正则表达式索引</p>\n<p><strong>Symbol.species</strong> 该函数作为创建派生对象的构造函数</p>\n<p><strong>Symbol.split</strong> 拆分字符串</p>\n<p><strong>Symbol.toPrimitive</strong> 将对象转换为相应的原始值</p>\n<p><strong>Symbol.toStringTag</strong> 默认字符串</p>\n<p><strong>Symbol.unscopables</strong> 了解，不深入探究</p>\n<p>Object 类型</p>\n<p>创建对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> o = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>()</span><br></pre></td></tr></table></figure>\n\n<p>每个Object都有的方法：</p>\n<ul>\n<li>constructor</li>\n<li>hasOwnProperty(属性名)</li>\n<li>isPrototypeof(object)</li>\n<li>propertyIsEnumerable(<em>propertyName</em>)</li>\n<li>toLocaleString</li>\n<li>toString</li>\n<li>valueOf</li>\n</ul>\n<p>Object 是所有对象的基类，所以任何对象都有这些属性和方法。</p>\n<p>BOM 和 DOM 可能会出现例外情况</p>\n<h3 id=\"2-3-操作符\"><a href=\"#2-3-操作符\" class=\"headerlink\" title=\"2.3 操作符\"></a>2.3 操作符</h3><p>操作符通常会调用 valueOf()和&#x2F;或 toString()方法来取得可以计算的值。</p>\n<p>一元操作符：</p>\n<ul>\n<li><p>递增&#x2F;递减操作符 ++&#x2F;–</p>\n</li>\n<li><p>一元加&#x2F;减，如 s1 &#x3D; +s1;</p>\n</li>\n<li><p>位操作符</p>\n<ul>\n<li>按位非 ~</li>\n<li>按位与 &amp;</li>\n<li>按位或 |</li>\n<li>按位异或 ^</li>\n<li>左移 &lt;&lt;</li>\n<li>有符号右移 &gt;&gt;</li>\n<li>无符号右移 &gt;&gt;&gt;</li>\n</ul>\n</li>\n<li><p>布尔操作符</p>\n<ul>\n<li><p>逻辑非 !【同时使用两个叹号（!!），相当于调用了转型函</p>\n<p>数 Boolean()】</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(!<span class=\"literal\">false</span>); <span class=\"comment\">// true </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(!<span class=\"string\">&quot;blue&quot;</span>); <span class=\"comment\">// false </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(!<span class=\"number\">0</span>); <span class=\"comment\">// true </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(!<span class=\"title class_\">NaN</span>); <span class=\"comment\">// true </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(!<span class=\"string\">&quot;&quot;</span>); <span class=\"comment\">// true </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(!<span class=\"number\">12345</span>); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>逻辑与 &amp;&amp;</p>\n</li>\n<li><p>逻辑或 ||</p>\n</li>\n</ul>\n</li>\n<li><p>乘性操作符</p>\n<ul>\n<li>乘法 *</li>\n<li>除法 &#x2F;</li>\n<li>取模 %</li>\n</ul>\n</li>\n<li><p>指数操作符 ** Math.pow()</p>\n</li>\n<li><p>关系操作符（大于&gt;，等等）</p>\n</li>\n<li><p>相等操作符</p>\n<ul>\n<li>等于（&#x3D;&#x3D;）或不等于（!&#x3D;）</li>\n<li>全等（&#x3D;&#x3D;&#x3D;）或不全等（<code>!==</code>）</li>\n</ul>\n</li>\n<li><p>条件操作符 flag ? true : false</p>\n</li>\n<li><p>赋值操作符 &#x3D;</p>\n</li>\n<li><p>逗号操作符</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> num1 = <span class=\"number\">1</span>,num2 = <span class=\"number\">0</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"2-4-语句\"><a href=\"#2-4-语句\" class=\"headerlink\" title=\"2.4 语句\"></a>2.4 语句</h3><ul>\n<li><p>if 语句</p>\n</li>\n<li><p>do-while语句</p>\n</li>\n<li><p>while 语句</p>\n</li>\n<li><p>for 语句</p>\n</li>\n<li><p>for-in 语句</p>\n</li>\n<li><p>for-of 语句</p>\n</li>\n<li><p>标签语句 常用于内部循环跳出外部循环 break start;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">start</span>: <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; count; i++) &#123; </span><br><span class=\"line\"> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>break 和 continue</p>\n</li>\n<li><p>with 语句 【不建议使用，严格模式报错】</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> qs = location.<span class=\"property\">search</span>.<span class=\"title function_\">substring</span>(<span class=\"number\">1</span>); </span><br><span class=\"line\"><span class=\"keyword\">let</span> hostName = location.<span class=\"property\">hostname</span>; </span><br><span class=\"line\"><span class=\"keyword\">let</span> url = location.<span class=\"property\">href</span>;</span><br><span class=\"line\"><span class=\"comment\">// 使用 with 简化</span></span><br><span class=\"line\"><span class=\"title function_\">with</span>(<span class=\"params\">location</span>) &#123; </span><br><span class=\"line\"> <span class=\"keyword\">let</span> qs = search.<span class=\"title function_\">substring</span>(<span class=\"number\">1</span>); </span><br><span class=\"line\"> <span class=\"keyword\">let</span> hostName = hostname; </span><br><span class=\"line\"> <span class=\"keyword\">let</span> url = href; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>switch 语句</p>\n</li>\n</ul>\n<h3 id=\"2-5-函数（Function）\"><a href=\"#2-5-函数（Function）\" class=\"headerlink\" title=\"2.5 函数（Function）\"></a>2.5 函数（Function）</h3><p>它属于引用类型</p>\n<p>基本语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">functionName</span>(<span class=\"params\">arg0, arg1,...,argN</span>) &#123; </span><br><span class=\"line\"> statements </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-变量、作用域与内存\"><a href=\"#3-变量、作用域与内存\" class=\"headerlink\" title=\"3. 变量、作用域与内存\"></a>3. 变量、作用域与内存</h2><h3 id=\"3-1-变量\"><a href=\"#3-1-变量\" class=\"headerlink\" title=\"3.1 变量\"></a>3.1 变量</h3><p>变量可以包含两种不同类型的数据：原始值和引用值</p>\n<p>原始值：简单数据类型。（typeof有效），保存在栈上</p>\n<p>引用值：多个值构成的对象。（instanceof 判断类型），保存在堆上。（引用值对象实际是指向对象的指针）</p>\n<h3 id=\"3-2-作用域\"><a href=\"#3-2-作用域\" class=\"headerlink\" title=\"3.2 作用域\"></a>3.2 作用域</h3><p>作用域链：各级上下文中的代码在访问变量和函数时的顺序。（更多资料可百度）</p>\n<p>上下文是函数，其活动对象用作变量对象加入作用域链中。</p>\n<p>对于过滤链举个简单例子方便理解：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> color = <span class=\"string\">&quot;blue&quot;</span>; </span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeColor</span>(<span class=\"params\"></span>) &#123; </span><br><span class=\"line\"> <span class=\"keyword\">if</span> (color === <span class=\"string\">&quot;blue&quot;</span>) &#123; </span><br><span class=\"line\"> \tcolor = <span class=\"string\">&quot;red&quot;</span>; </span><br><span class=\"line\"> &#125; <span class=\"keyword\">else</span> &#123; </span><br><span class=\"line\"> \tcolor = <span class=\"string\">&quot;blue&quot;</span>; </span><br><span class=\"line\"> &#125; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"title function_\">changeColor</span>();</span><br></pre></td></tr></table></figure>\n\n<p>在该函数 changeColor 的作用域链中包含两个对象：</p>\n<ol>\n<li>arguments 自身变量对象【具体可百度】</li>\n<li>全局上下文变量对象</li>\n</ol>\n<p>作用域链增强： catch 语句 和 with 语句</p>\n<p>作用域链中查找指定标识符，找到搜索结束，全局上下文仍然没有找到相应标识符，则其说明未定义。</p>\n<p><img src=\"/lingtan/../FILES/JavaScript%E5%9F%BA%E7%A1%80.md/image-20230605123626540.png\" alt=\"image-20230605123626540\"></p>\n<h3 id=\"3-3-垃圾回收（进阶知识）\"><a href=\"#3-3-垃圾回收（进阶知识）\" class=\"headerlink\" title=\"3.3 垃圾回收（进阶知识）\"></a>3.3 垃圾回收（进阶知识）</h3><ol>\n<li><p>标记清理【任何上下文都无法访问，将会打上标记】</p>\n</li>\n<li><p>引用计数。声明变量时引用数为1，当被其他值覆盖，引用数减去1，当引用数为0，则可删除。（不建议，循环引用不适用）</p>\n</li>\n<li><p>性能问题（合适的时机删除变量）</p>\n</li>\n<li><p>内存管理，建议不用的变量，手动赋值 null，释放其引用</p>\n</li>\n</ol>\n<h3 id=\"3-4-小结\"><a href=\"#3-4-小结\" class=\"headerlink\" title=\"3.4 小结\"></a>3.4 小结</h3><ol>\n<li>执行上下文分全局上下文、函数上下文和块级上下文。</li>\n<li>代码执行流每进入一个新上下文，都会创建一个作用域链，用于搜索变量和函数。</li>\n<li>全局上下文只能访问全局上下文中的变量和函数，不能直接访问局部上下文中的任何数据。</li>\n<li>离开作用域的值会被自动标记为可回收，然后在垃圾回收期间被删除。</li>\n<li>主流的垃圾回收算法是标记清理，即先给当前不使用的值加上标记，再回来回收它们的内存。</li>\n</ol>\n<h2 id=\"4-基本引用类型\"><a href=\"#4-基本引用类型\" class=\"headerlink\" title=\"4. 基本引用类型\"></a>4. 基本引用类型</h2><p>❤ 小提示：前面内容没有太多有用信息。</p>\n<h3 id=\"4-1-Date\"><a href=\"#4-1-Date\" class=\"headerlink\" title=\"4.1 Date\"></a>4.1 Date</h3><h4 id=\"4-1-1-创建日期对象\"><a href=\"#4-1-1-创建日期对象\" class=\"headerlink\" title=\"4.1.1 创建日期对象\"></a>4.1.1 创建日期对象</h4><ol>\n<li>创建一个 Date 的实例对象</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> now = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(); <span class=\"comment\">// 2023-06-05T06:02:04.276Z</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>通过 Date.parse 创建对象</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> someDate = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"title class_\">Date</span>.<span class=\"title function_\">parse</span>(<span class=\"string\">&quot;6/5/2023&quot;</span>)); <span class=\"comment\">// 2023-06-05T16:00:00.000Z</span></span><br></pre></td></tr></table></figure>\n\n<p>Date.parse 参数支持的格式：</p>\n<ul>\n<li>月&#x2F;日&#x2F;年 如: 6&#x2F;5&#x2F;2023</li>\n<li>月名 日, 年 如：June 5, 2023</li>\n<li>周几 月名 日 年 时:分:秒 时区 如”Mon June 5 2032 00:00:00 GMT-0700”</li>\n<li>【推荐】YYYY-MM-DDTHH:mm:ss.sssZ 如2019-05-23T00:00:00</li>\n</ul>\n<ol start=\"3\">\n<li>通过 Date.UTC 创建对象 （月份应该要减去1）</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 参数内容从左到右: 年月日时分秒</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> utcDate = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"title class_\">Date</span>.<span class=\"title function_\">UTC</span>(<span class=\"number\">2023</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">14</span>, <span class=\"number\">14</span>, <span class=\"number\">55</span>));<span class=\"comment\">// 2023-07-05T14:14:55.000Z</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>返回当前日期 Date.now()</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> start = <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>(); </span><br><span class=\"line\"><span class=\"title function_\">doSomething</span>();</span><br><span class=\"line\"><span class=\"keyword\">let</span> end = <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>();</span><br><span class=\"line\">result = end - start; <span class=\"comment\">// 用时: 2014毫秒</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-1-2-日期格式化\"><a href=\"#4-1-2-日期格式化\" class=\"headerlink\" title=\"4.1.2 日期格式化\"></a>4.1.2 日期格式化</h4><ul>\n<li>toDateString 显示周几、年月日</li>\n<li>toTimeString 显示时区、时分秒</li>\n<li>toLocaleDateString </li>\n<li>toLocaleTimeString</li>\n<li>toUTCString 显示完整的UTC日期</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> now = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;toDateString&quot;</span>, now.<span class=\"title function_\">toDateString</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;toTImeString&quot;</span>, now.<span class=\"title function_\">toTimeString</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;toLocaleDateString&quot;</span>, now.<span class=\"title function_\">toLocaleDateString</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;toLocaleTimeString&quot;</span>, now.<span class=\"title function_\">toLocaleTimeString</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;toUTCString&quot;</span>, now.<span class=\"title function_\">toUTCString</span>());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出结果</span></span><br><span class=\"line\">toDateString <span class=\"title class_\">Mon</span> <span class=\"title class_\">Jun</span> <span class=\"number\">05</span> <span class=\"number\">2023</span></span><br><span class=\"line\">toTImeString <span class=\"number\">14</span>:<span class=\"number\">32</span>:<span class=\"number\">00</span> <span class=\"variable constant_\">GMT</span>+<span class=\"number\">0800</span> (中国标准时间)</span><br><span class=\"line\">toLocaleDateString <span class=\"number\">2023</span>/<span class=\"number\">6</span>/<span class=\"number\">5</span></span><br><span class=\"line\">toLocaleTimeString <span class=\"number\">14</span>:<span class=\"number\">32</span>:<span class=\"number\">00</span></span><br><span class=\"line\">toUTCString <span class=\"title class_\">Mon</span>, <span class=\"number\">05</span> <span class=\"title class_\">Jun</span> <span class=\"number\">2023</span> <span class=\"number\">06</span>:<span class=\"number\">32</span>:<span class=\"number\">00</span> <span class=\"variable constant_\">GMT</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-1-3-Date-类型具体方法\"><a href=\"#4-1-3-Date-类型具体方法\" class=\"headerlink\" title=\"4.1.3 Date 类型具体方法\"></a>4.1.3 Date 类型具体方法</h4><p>getTime()  返回日期的毫秒表示；与 valueOf()相同</p>\n<p>setTime(<em>milliseconds</em>) 设置日期的毫秒表示，从而修改整个日期</p>\n<p>更多方法，访问 MDN</p>\n<h3 id=\"4-2-RegExp-正则\"><a href=\"#4-2-RegExp-正则\" class=\"headerlink\" title=\"4.2 RegExp 正则\"></a>4.2 RegExp 正则</h3><p>基本格式：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> expression = <span class=\"regexp\">/pattern/</span>flags;</span><br></pre></td></tr></table></figure>\n\n<p>pattern 模式：包括字符类、限定符、分组、向前查找和反向引用</p>\n<p>flags 标记：0 个或多个，一般有6种模式</p>\n<ul>\n<li>g 全局模式，查找字符串全部内容</li>\n<li>i 不区分大小写</li>\n<li>m 多行模式</li>\n<li>y 粘附模式，只查找从 lastIndex 开始以及之后字符串</li>\n<li>u Unicode 模式</li>\n<li>s dotAll 模式 表示元字符<code>.</code> 匹配任何字符（包括\\n 和 \\r）】</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> patter = <span class=\"regexp\">/123/g</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> result = patter.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;a123bc&quot;</span>)<span class=\"comment\">// [ &#x27;123&#x27;, index: 1, input: &#x27;a123bc&#x27;, groups: undefined ]</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> result = patter.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;abc&quot;</span>)<span class=\"comment\">// null</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> result = patter.<span class=\"title function_\">test</span>(<span class=\"string\">&quot;a123bc&quot;</span>);<span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<p>更多资料参考菜鸟教程，多使用正则。</p>\n<h3 id=\"4-3-原始值包含类型\"><a href=\"#4-3-原始值包含类型\" class=\"headerlink\" title=\"4.3 原始值包含类型\"></a>4.3 原始值包含类型</h3><p>基本使用：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 将字符串转成数字</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> value = <span class=\"title class_\">Number</span>(<span class=\"string\">&quot;123&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-4-内置对象\"><a href=\"#4-4-内置对象\" class=\"headerlink\" title=\"4.4 内置对象\"></a>4.4 内置对象</h3><p>不用显示实例化内置对象，开箱即用</p>\n<ol>\n<li><p>Global 对象</p>\n<ol>\n<li><p>isNaN 函数</p>\n</li>\n<li><p>isFinite 函数</p>\n</li>\n<li><p>parseInt 函数</p>\n</li>\n<li><p>parseFloat 函数</p>\n</li>\n<li><p>encodeURI() 用于编码URI 【类似encodeURIComponent】</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> url = <span class=\"built_in\">encodeURI</span>(<span class=\"string\">&quot;https://www.baidu.com/s?wd=菜鸟&quot;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(url); <span class=\"comment\">// https://www.baidu.com/s?wd=%E8%8F%9C%E9%B8%9F</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>decodeURI()和 decodeURIComponent()</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> d = <span class=\"built_in\">decodeURI</span>(<span class=\"string\">&quot;https://www.baidu.com/s?wd=%E8%8F%9C%E9%B8%9F&quot;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(d); <span class=\"comment\">// https://www.baidu.com/s?wd=菜鸟</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><span style=\"color: red\"> <strong>[强大]</strong> </span> eval 函数，执行 JS 语句 [&#x3D;&#x3D;容易被 XSS 利用，谨慎！！&#x3D;&#x3D;]</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> str = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">    let a = 1;</span></span><br><span class=\"line\"><span class=\"string\">    let b = 2;</span></span><br><span class=\"line\"><span class=\"string\">    console.log(a + b);</span></span><br><span class=\"line\"><span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"built_in\">eval</span>(str); <span class=\"comment\">// 3</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Global 对象属性，请翻阅MDN</p>\n</li>\n<li><p>Window 属性</p>\n<p>所有全局作用域中声明的变量和函数都变成了 window 的属性</p>\n<p>当然： 仅限 var 声明变量 和 函数</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> color = <span class=\"string\">&quot;red&quot;</span>; </span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">sayColor</span>(<span class=\"params\"></span>) &#123; </span><br><span class=\"line\"> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">color</span>); </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">sayColor</span>(); <span class=\"comment\">// &quot;red&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Math 对象： 数学公式</p>\n<p>更多资料请翻阅 MDN</p>\n</li>\n</ol>\n<h3 id=\"4-5-小结\"><a href=\"#4-5-小结\" class=\"headerlink\" title=\"4.5 小结\"></a>4.5 小结</h3><p>当代码开始执行时，全局上下文中会存在两个内置对象：Global 和 Math。</p>\n<h2 id=\"5-集合引用类型\"><a href=\"#5-集合引用类型\" class=\"headerlink\" title=\"5. 集合引用类型\"></a>5. 集合引用类型</h2><p>内容：对象、数组、定型数组、Map、WeakMap、Set和WeekSet</p>\n<h3 id=\"5-1-Object\"><a href=\"#5-1-Object\" class=\"headerlink\" title=\"5.1 Object\"></a>5.1 Object</h3><ol>\n<li>对象创建：</li>\n</ol>\n<p>① new 操作符</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> p = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>() <span class=\"comment\">// 也可以 let p = &#123;&#125;</span></span><br><span class=\"line\">p.<span class=\"property\">name</span> = <span class=\"string\">&quot;张三&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>② 对象字面量</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> person = &#123; </span><br><span class=\"line\"> <span class=\"attr\">name</span>: <span class=\"string\">&quot;Nicholas&quot;</span>, </span><br><span class=\"line\"> <span class=\"attr\">age</span>: <span class=\"number\">29</span> </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>获取属性</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">person[<span class=\"string\">&quot;name&quot;</span>]</span><br><span class=\"line\">person.<span class=\"property\">name</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-2-Array\"><a href=\"#5-2-Array\" class=\"headerlink\" title=\"5.2 Array\"></a>5.2 Array</h3><ol>\n<li>数组创建</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> colors = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(); <span class=\"comment\">// Array(20) Array(&quot;1&quot;,&quot;2&quot;)</span></span><br><span class=\"line\"><span class=\"comment\">// 字面量创建</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> colors = [<span class=\"string\">&quot;red&quot;</span>, <span class=\"string\">&quot;green&quot;</span>]</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>数组拆分</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(<span class=\"string\">&quot;Matt&quot;</span>); <span class=\"comment\">// [ &#x27;M&#x27;, &#x27;a&#x27;, &#x27;t&#x27;, &#x27;t&#x27; ]</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>将集合映射成新数组</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> m = <span class=\"keyword\">new</span> <span class=\"title class_\">Map</span>().<span class=\"title function_\">set</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>) .<span class=\"title function_\">set</span>(<span class=\"number\">3</span>, <span class=\"number\">4</span>); </span><br><span class=\"line\"><span class=\"keyword\">const</span> s = <span class=\"keyword\">new</span> <span class=\"title class_\">Set</span>().<span class=\"title function_\">add</span>(<span class=\"number\">1</span>) .<span class=\"title function_\">add</span>(<span class=\"number\">2</span>) .<span class=\"title function_\">add</span>(<span class=\"number\">3</span>) .<span class=\"title function_\">add</span>(<span class=\"number\">4</span>); </span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(m)); <span class=\"comment\">// [[1, 2], [3, 4]] </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(s)); <span class=\"comment\">// [1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>浅复制当前数组</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> a2 = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(a1);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a1 === a2);<span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>可以使用任何可迭代对象</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> iter = &#123; </span><br><span class=\"line\"> *[<span class=\"title class_\">Symbol</span>.<span class=\"property\">iterator</span>]() &#123; </span><br><span class=\"line\"> <span class=\"keyword\">yield</span> <span class=\"number\">1</span>; </span><br><span class=\"line\"> <span class=\"keyword\">yield</span> <span class=\"number\">2</span>; </span><br><span class=\"line\"> <span class=\"keyword\">yield</span> <span class=\"number\">3</span>; </span><br><span class=\"line\"> <span class=\"keyword\">yield</span> <span class=\"number\">4</span>; </span><br><span class=\"line\"> &#125; </span><br><span class=\"line\">&#125;; </span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(iter)); <span class=\"comment\">// [1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>arguments 转为数组</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getArgsArray</span>(<span class=\"params\"></span>) &#123; </span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(<span class=\"variable language_\">arguments</span>); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"7\">\n<li>换带有必要属性的自定义对象</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arrayLikeObject = &#123; </span><br><span class=\"line\"> <span class=\"number\">0</span>: <span class=\"number\">1</span>, </span><br><span class=\"line\"> <span class=\"number\">1</span>: <span class=\"number\">2</span>, </span><br><span class=\"line\"> <span class=\"number\">2</span>: <span class=\"number\">3</span>, </span><br><span class=\"line\"> <span class=\"number\">3</span>: <span class=\"number\">4</span>, </span><br><span class=\"line\"> <span class=\"attr\">length</span>: <span class=\"number\">4</span> </span><br><span class=\"line\">&#125;; </span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(arrayLikeObject)); <span class=\"comment\">// [1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"8\">\n<li>Array.of 函数</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"title function_\">of</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>); <span class=\"comment\">// [1,2,3,4]</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"9\">\n<li>数组空位 let arr &#x3D; [,,,]  { % label 不建议 orange%}</li>\n<li>数组索引从0开始，到 length - 1结束</li>\n<li>判断是否为数组 <ol>\n<li>instanchof</li>\n<li>Array.isArray</li>\n</ol>\n</li>\n<li>迭代器方法：keys() values() 和 entries()</li>\n<li>复制和填充方法  copyWithin 和 fill</li>\n<li>栈方法 push 和 pop</li>\n<li>队列方法 <ol>\n<li>shift 方法： 删除第一项并返回它，数组长度减去1</li>\n<li>push</li>\n<li>unshift 方法：数组开头添加，数组长度加1，返回新的数组长度</li>\n<li>pop</li>\n</ol>\n</li>\n<li>排序方法 reverse 和 sort，返回数组的引用</li>\n<li>操作方法<ol>\n<li>concat 函数 拼接数组</li>\n<li>slice 函数 相当于切片</li>\n<li>splice 函数，实现删除、插入、替换【<span style=\"color: red\"><strong>常用</strong></span>】</li>\n</ol>\n</li>\n<li>搜索 <ol>\n<li>indexOf 、lastIndexOf 和 includes 【严格相等】</li>\n<li>find、findIndex 【断言函数】</li>\n</ol>\n</li>\n<li>迭代方法<ol>\n<li>every 每项函数必须返回 true</li>\n<li>filter 每项函数返回 true 组成新数组</li>\n<li>forEach 遍历每一项</li>\n<li>map 返回由每项函数调用的结果组成的数组</li>\n<li>some 如果有一项返回 true</li>\n</ol>\n</li>\n<li>归并方法<ol>\n<li>reduce </li>\n<li>reduceRight</li>\n</ol>\n</li>\n</ol>\n<blockquote>\n<p>注意 如果数组中某一项是 null 或 undefined，则在 join()、toLocaleString()、</p>\n<p>toString()和 valueOf()返回的结果中会以空字符串表示。</p>\n</blockquote>\n<h3 id=\"5-3-定型数组\"><a href=\"#5-3-定型数组\" class=\"headerlink\" title=\"5.3 定型数组\"></a>5.3 定型数组</h3><ol>\n<li>ArrayBuffer：可用于在内存中分配特定数量的字节空间【类似C++ 的 malloc】【定型数组及视图引用的基本单位】</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在内存中分配 16 字节</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> buf = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayBuffer</span>(<span class=\"number\">16</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(buf.<span class=\"property\">byteLength</span>); <span class=\"comment\">// 16</span></span><br></pre></td></tr></table></figure>\n\n<p>slice 方法：复制全部或部分到新数组</p>\n<p>注意：</p>\n<ul>\n<li>分配内存失败，报错</li>\n<li>分配内存不能超过 Number.MAX_SAFE_INTEGER</li>\n<li>初始成功后，将所有二进制位初始化为0</li>\n<li>可以被垃圾回收</li>\n</ul>\n<blockquote>\n<p>要读取或写入 ArrayBuffer，就必须通过视图</p>\n</blockquote>\n<ol start=\"2\">\n<li>DataView 允许读写 ArrayBuffer 的视图</li>\n</ol>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"JS-基础\"><a href=\"#JS-基础\" class=\"headerlink\" title=\"JS 基础\"></a>JS 基础</h1><p>JavaScript 包含很多内容，如类、期约、迭代器、代理、客户端检测、事件、动画、表单、错误处理以及JSON等。</p>\n<h2 id=\"1-JavaScript-概念\"><a href=\"#1-JavaScript-概念\" class=\"headerlink\" title=\"1. JavaScript 概念\"></a>1. JavaScript 概念</h2><p>完整的 Javascript 包含3部分：</p>\n<ul>\n<li><p>核心（ECMAScript）</p>\n</li>\n<li><p>文档对象模型（DOM）</p>\n</li>\n<li><p>浏览器对象模型（BOM）</p>\n</li>\n</ul>\n<p><img src=\"/lingtan/../FILES/JavaScript%E5%9F%BA%E7%A1%80.md/image-20230605092717715.png\" alt=\"image-20230605092717715\"></p>\n<p>script 标签属性：</p>\n<ul>\n<li>async 立即开始下载脚本【外部脚本】</li>\n<li>charset 字符集</li>\n<li>crossorigin CORS 跨域资源共享</li>\n<li>defer 脚本可以延迟到文档完全被解析和显示之后再执行（最好只包含一个这样的脚本）【外部脚本】</li>\n<li>src <b style=\"color: red\">重要！！</b></li>\n<li>type 脚本类型 type&#x3D;”text&#x2F;javascript”</li>\n</ul>\n<p>noscript 标签：满足以下两个条件，都会被浏览器渲染。否则不会渲染 noscript 标签里内容</p>\n<ul>\n<li>不支持 JavaScript</li>\n<li>禁用 JavaScript</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Example HTML Page<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">defer</span>=<span class=\"string\">&quot;defer&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;example1.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">defer</span>=<span class=\"string\">&quot;defer&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;example2.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">noscript</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>该页面不支持或者禁用JavaScript.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">noscript</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>注意：对不推迟执行的脚本，浏览器必须解释完位于<code>&lt;script&gt;</code>元素中的代码，然后才能继续渲染页面</p>\n<h2 id=\"2-语法基础\"><a href=\"#2-语法基础\" class=\"headerlink\" title=\"2. 语法基础\"></a>2. 语法基础</h2><h3 id=\"2-1-变量\"><a href=\"#2-1-变量\" class=\"headerlink\" title=\"2.1 变量\"></a>2.1 变量</h3><p>标识符组成：（变量名建议：驼峰命名）</p>\n<ul>\n<li>第一个字符必须是一个字母、下划线（_）或美元符号（$）</li>\n<li>标识符由字母、下划线、$或数字组成</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 有效名称 ： 合法名称</span></span><br><span class=\"line\">firstSecond </span><br><span class=\"line\">myCar </span><br><span class=\"line\">doSomethingImportant</span><br></pre></td></tr></table></figure>\n\n<p>开启严格模式：&#x3D;&#x3D;”use strict”&#x3D;&#x3D;。对于不安全的活动将抛出错误</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">doSomething</span>(<span class=\"params\"></span>) &#123; </span><br><span class=\"line\"> <span class=\"string\">&quot;use strict&quot;</span>; </span><br><span class=\"line\"> <span class=\"comment\">// 函数体 </span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在 JavaScript 中建议 &#x3D;&#x3D;加分号（;）&#x3D;&#x3D;，压缩代码不容易出现语法错误，在某些情况下可能会提升性能，因为解析器会尝试在合适的位置补上分号以纠正语法错误。</p>\n<p>关键字如下：</p>\n<table>\n<thead>\n<tr>\n<th>break</th>\n<th>do</th>\n<th>in</th>\n<th>typeof</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>case</td>\n<td>else</td>\n<td>instanceof</td>\n<td>var</td>\n</tr>\n<tr>\n<td>catch</td>\n<td>export</td>\n<td>new</td>\n<td>void</td>\n</tr>\n<tr>\n<td>class</td>\n<td>extends</td>\n<td>return</td>\n<td>while</td>\n</tr>\n<tr>\n<td>const</td>\n<td>finally</td>\n<td>super</td>\n<td>with</td>\n</tr>\n<tr>\n<td>continue</td>\n<td>for</td>\n<td>switch</td>\n<td>yield</td>\n</tr>\n<tr>\n<td>debugger</td>\n<td>function</td>\n<td>this</td>\n<td>enum</td>\n</tr>\n<tr>\n<td>default</td>\n<td>if</td>\n<td>throw</td>\n<td>等等</td>\n</tr>\n<tr>\n<td>delete</td>\n<td>import</td>\n<td>try</td>\n<td></td>\n</tr>\n</tbody></table>\n<p><strong>var 声明提升</strong>：都拉到函数作用域的顶部【let 声明的变量不会被提升，即必须先声明再使用，即“暂时性死区”】</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(age)</span><br><span class=\"line\">  <span class=\"comment\">// 变量声明在下面，不报错</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> age = <span class=\"number\">10</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>let 声明的范围是块作用域，而 var 声明的范围是函数作用域。</p>\n<blockquote>\n<p>✨<span style=\"color: red\">小技巧：</span><br>建议使用 let 声明变量，如果变量确定不会发生变化，建议使用 const 声明变量。</p>\n</blockquote>\n<p>全局声明时，let 声明变量不会成为 window 对象属性</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&quot;张三&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">name</span>); <span class=\"comment\">// &quot;张三&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> age = <span class=\"number\">12</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">age</span>); <span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note success flat\"><p>总结：const 优先，let 次之</p>\n</div>\n\n<h3 id=\"2-2-数据类型（7种）\"><a href=\"#2-2-数据类型（7种）\" class=\"headerlink\" title=\"2.2 数据类型（7种）\"></a>2.2 数据类型（7种）</h3><p>6中简单数据类型（原始类型）：</p>\n<ul>\n<li>Undefined（”undefined”）只有1个值 undefined</li>\n<li>Null（””）</li>\n<li>Boolean（”boolean”）</li>\n<li>Number（”number”）</li>\n<li>String（”string”）</li>\n<li>Symbol（符合）</li>\n</ul>\n<p>还有复杂数据类型：Object（”object” 或 null）（键值对的集合）</p>\n<p>确定变量类型： typeof 【操作符】，区分函数和其他对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> message = <span class=\"string\">&quot;some string&quot;</span>; </span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> message); <span class=\"comment\">// &quot;string&quot; </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">typeof</span>(message)); <span class=\"comment\">// &quot;string&quot; </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"number\">95</span>); <span class=\"comment\">// &quot;number&quot;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>✨<span style=\"color: red\">小技巧：</span><br>声明变量时，建议初始化，避免不必要的错误</p>\n</blockquote>\n<p>&#x3D;&#x3D; 的使用：这个操作符会为了比较而转换它的操作数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">null</span> == <span class=\"literal\">undefined</span>); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<p>一般来讲，不必显示声明为 undefined，要使用 void(0)</p>\n<p>不同类型与布尔值之间转换规则：if 等流控制语句会自动执行其他类型值到布尔值的转换（经常用！！）</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">数据类型</th>\n<th align=\"center\">转换为true的值</th>\n<th align=\"center\">转换为false的值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Boolean</td>\n<td align=\"center\">true</td>\n<td align=\"center\">false</td>\n</tr>\n<tr>\n<td align=\"center\">String</td>\n<td align=\"center\">非空字符串</td>\n<td align=\"center\">“”（空字符串）</td>\n</tr>\n<tr>\n<td align=\"center\">Number</td>\n<td align=\"center\">非零数值（无穷）</td>\n<td align=\"center\">0、NaN</td>\n</tr>\n<tr>\n<td align=\"center\">Object</td>\n<td align=\"center\">任意对象</td>\n<td align=\"center\">null</td>\n</tr>\n<tr>\n<td align=\"center\">Undefined</td>\n<td align=\"center\">N&#x2F;A（不存在）</td>\n<td align=\"center\">undefined</td>\n</tr>\n</tbody></table>\n<p>Number最大：Number.MAX_VALUE</p>\n<p>Number最小：Number.MIN_VALUE</p>\n<p>超出范围：Infinity 无穷 【Number.NEGATIVE_INFINITY 和 Number.POSITIVE_INFINITY 也可以获取正、负 Infinity。】</p>\n<p>确定一个值是不是无穷大：isFinite 函数</p>\n<p>NaN （非数值）：console.log(0&#x2F;0); &#x2F;&#x2F; NaN </p>\n<p>判断是否为非数值：isNaN</p>\n<blockquote>\n<p>isNaN()可以用于测试对象。此时，首先会调用对象的 valueOf()方法，然后再确定返回的值是否可以转换为数值。如果不能，再调用 toString()方法，并测试其返回值</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">isNaN</span>(<span class=\"title class_\">NaN</span>)); <span class=\"comment\">// true </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">isNaN</span>(<span class=\"number\">10</span>)); <span class=\"comment\">// false，10 是数值</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">isNaN</span>(<span class=\"string\">&quot;10&quot;</span>)); <span class=\"comment\">// false，可以转换为数值 10 </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">isNaN</span>(<span class=\"string\">&quot;blue&quot;</span>)); <span class=\"comment\">// true，不可以转换为数值</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"built_in\">isNaN</span>(<span class=\"literal\">true</span>)); <span class=\"comment\">// false，可以转换为数值 1</span></span><br></pre></td></tr></table></figure>\n\n<p>将非数值转换为数值：Number()、parseInt()和 parseFloat()</p>\n<p>Number函数转换规则：</p>\n<ul>\n<li>布尔值 true为1</li>\n<li>数值，直接返回</li>\n<li>null 返回0</li>\n<li>undefined 返回NaN</li>\n<li>字符串【isNaN 为 true】</li>\n<li>对象，调用 valueOf 方法，如果结果为 NaN，调用 toString() 方法</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> num1 = <span class=\"title class_\">Number</span>(<span class=\"string\">&quot;Hello world!&quot;</span>); <span class=\"comment\">// NaN </span></span><br><span class=\"line\"><span class=\"keyword\">let</span> num2 = <span class=\"title class_\">Number</span>(<span class=\"string\">&quot;&quot;</span>); <span class=\"comment\">// 0 </span></span><br><span class=\"line\"><span class=\"keyword\">let</span> num3 = <span class=\"title class_\">Number</span>(<span class=\"string\">&quot;000011&quot;</span>); <span class=\"comment\">// 11 </span></span><br><span class=\"line\"><span class=\"keyword\">let</span> num4 = <span class=\"title class_\">Number</span>(<span class=\"literal\">true</span>); <span class=\"comment\">// 1</span></span><br></pre></td></tr></table></figure>\n\n<p>字符串转数字有专门的函数处理：parseInt和parseFloat</p>\n<p>String 类型</p>\n<p>字符字面量：</p>\n<table>\n<thead>\n<tr>\n<th>字面量</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>\\n</td>\n<td>换行</td>\n</tr>\n<tr>\n<td>\\t</td>\n<td>制表</td>\n</tr>\n<tr>\n<td>\\b</td>\n<td>退格</td>\n</tr>\n<tr>\n<td>\\r</td>\n<td>回车</td>\n</tr>\n<tr>\n<td>\\f</td>\n<td>换页</td>\n</tr>\n<tr>\n<td>\\ \\</td>\n<td>反斜杠</td>\n</tr>\n<tr>\n<td>\\‘</td>\n<td>单引号</td>\n</tr>\n<tr>\n<td>\\“</td>\n<td>双引号</td>\n</tr>\n<tr>\n<td>\\&#96;</td>\n<td>反引号</td>\n</tr>\n<tr>\n<td>\\xnn</td>\n<td>\\x41 等于 “A”</td>\n</tr>\n<tr>\n<td>\\unnnn</td>\n<td>\\u03a3 等于字符”Σ”</td>\n</tr>\n</tbody></table>\n<p>转换为字符串：toString()</p>\n<p>模板字面量：由反引号括起来（<code>123</code>）,允许支持字符串插值（${}）</p>\n<p>模板字面量会保持反引号内部的空格</p>\n<p>模板字面量：标签函数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">simpleTag</span>(<span class=\"params\">strings, aValExpression, bValExpression, sumExpression</span>) &#123;&#125;</span><br><span class=\"line\">simpleTag<span class=\"string\">`<span class=\"subst\">$&#123; a &#125;</span> + <span class=\"subst\">$&#123; b &#125;</span> = <span class=\"subst\">$&#123; a + b &#125;</span>`</span>;</span><br></pre></td></tr></table></figure>\n\n<p>获取原始字符：.raw</p>\n<p>为什么要获取原始字符：不要转义后的 © ，要 <code>\\u00A9</code></p>\n<p>示例代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">printRaw</span>(<span class=\"params\">strings</span>) &#123; </span><br><span class=\"line\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Actual characters:&#x27;</span>); </span><br><span class=\"line\">   <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> string <span class=\"keyword\">of</span> strings) &#123; </span><br><span class=\"line\">   \t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(string); </span><br><span class=\"line\">   &#125; </span><br><span class=\"line\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Escaped characters;&#x27;</span>); </span><br><span class=\"line\">   <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> rawString <span class=\"keyword\">of</span> strings.<span class=\"property\">raw</span>) &#123; </span><br><span class=\"line\">   \t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(rawString); </span><br><span class=\"line\">   &#125; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\">printRaw<span class=\"string\">`\\u00A9<span class=\"subst\">$&#123; <span class=\"string\">&#x27;and&#x27;</span> &#125;</span>\\n`</span>; </span><br><span class=\"line\"><span class=\"comment\">// Actual characters: </span></span><br><span class=\"line\"><span class=\"comment\">// © </span></span><br><span class=\"line\"><span class=\"comment\">//（换行符）</span></span><br><span class=\"line\"><span class=\"comment\">// Escaped characters: </span></span><br><span class=\"line\"><span class=\"comment\">// \\u00A9 </span></span><br><span class=\"line\"><span class=\"comment\">// \\n</span></span><br></pre></td></tr></table></figure>\n\n<p>Symbol 类型【了解，该内容属于进阶知识，可跳过】</p>\n<p>是确保对象属性使用唯一标识符，不会发生属性冲突的危险。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> sym = <span class=\"title class_\">Symbol</span>(); </span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> sym); <span class=\"comment\">// symbol</span></span><br></pre></td></tr></table></figure>\n\n<p>凡是可以使用字符串或数值作为属性的地方，都可以使用符号</p>\n<p><strong>Symbol.asyncIterator</strong>：由 for-await-of 使用，异步迭代器API</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Emitter</span> &#123; </span><br><span class=\"line\">   <span class=\"title function_\">constructor</span>(<span class=\"params\">max</span>) &#123; </span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">max</span> = max; </span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">asyncIdx</span> = <span class=\"number\">0</span>; </span><br><span class=\"line\">   &#125; </span><br><span class=\"line\">   <span class=\"keyword\">async</span> *[<span class=\"title class_\">Symbol</span>.<span class=\"property\">asyncIterator</span>]() &#123; </span><br><span class=\"line\">     <span class=\"keyword\">while</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">asyncIdx</span> &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">max</span>) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">yield</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve</span>) =&gt;</span> <span class=\"title function_\">resolve</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">asyncIdx</span>++)); </span><br><span class=\"line\">     &#125; </span><br><span class=\"line\">   &#125; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">asyncCount</span>(<span class=\"params\"></span>) &#123; </span><br><span class=\"line\">   <span class=\"keyword\">let</span> emitter = <span class=\"keyword\">new</span> <span class=\"title class_\">Emitter</span>(<span class=\"number\">5</span>); </span><br><span class=\"line\">   <span class=\"keyword\">for</span> <span class=\"title function_\">await</span>(<span class=\"params\"><span class=\"keyword\">const</span> x <span class=\"keyword\">of</span> emitter</span>) &#123; </span><br><span class=\"line\">    \t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x); </span><br><span class=\"line\">   &#125; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"title function_\">asyncCount</span>();</span><br></pre></td></tr></table></figure>\n\n<p><strong>Symbol.hasInstance</strong> 由 instanchof 使用。确定一个对象实例的原型链上是否有原型。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Foo</span>(<span class=\"params\"></span>) &#123;&#125; </span><br><span class=\"line\"><span class=\"keyword\">let</span> f = <span class=\"keyword\">new</span> <span class=\"title class_\">Foo</span>(); </span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(f <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Foo</span>); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<p>重新定义原型：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Bar</span> &#123;&#125; </span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Baz</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Bar</span> &#123; </span><br><span class=\"line\">   <span class=\"keyword\">static</span> [<span class=\"title class_\">Symbol</span>.<span class=\"property\">hasInstance</span>]() &#123; </span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>; </span><br><span class=\"line\">   &#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Symbol.isConcatSpreadable</strong> 了解即可</p>\n<p><strong>Symbol.iterator</strong> 使用 for-of 遍历</p>\n<p><strong>Symbol.match</strong> 正则表达式需要</p>\n<p><strong>Symbol.replace</strong> 替换字符。 String.prototype.replace()方法使用</p>\n<p><strong>Symbol.search</strong> 匹配正则表达式索引</p>\n<p><strong>Symbol.species</strong> 该函数作为创建派生对象的构造函数</p>\n<p><strong>Symbol.split</strong> 拆分字符串</p>\n<p><strong>Symbol.toPrimitive</strong> 将对象转换为相应的原始值</p>\n<p><strong>Symbol.toStringTag</strong> 默认字符串</p>\n<p><strong>Symbol.unscopables</strong> 了解，不深入探究</p>\n<p>Object 类型</p>\n<p>创建对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> o = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>()</span><br></pre></td></tr></table></figure>\n\n<p>每个Object都有的方法：</p>\n<ul>\n<li>constructor</li>\n<li>hasOwnProperty(属性名)</li>\n<li>isPrototypeof(object)</li>\n<li>propertyIsEnumerable(<em>propertyName</em>)</li>\n<li>toLocaleString</li>\n<li>toString</li>\n<li>valueOf</li>\n</ul>\n<p>Object 是所有对象的基类，所以任何对象都有这些属性和方法。</p>\n<p>BOM 和 DOM 可能会出现例外情况</p>\n<h3 id=\"2-3-操作符\"><a href=\"#2-3-操作符\" class=\"headerlink\" title=\"2.3 操作符\"></a>2.3 操作符</h3><p>操作符通常会调用 valueOf()和&#x2F;或 toString()方法来取得可以计算的值。</p>\n<p>一元操作符：</p>\n<ul>\n<li><p>递增&#x2F;递减操作符 ++&#x2F;–</p>\n</li>\n<li><p>一元加&#x2F;减，如 s1 &#x3D; +s1;</p>\n</li>\n<li><p>位操作符</p>\n<ul>\n<li>按位非 ~</li>\n<li>按位与 &amp;</li>\n<li>按位或 |</li>\n<li>按位异或 ^</li>\n<li>左移 &lt;&lt;</li>\n<li>有符号右移 &gt;&gt;</li>\n<li>无符号右移 &gt;&gt;&gt;</li>\n</ul>\n</li>\n<li><p>布尔操作符</p>\n<ul>\n<li><p>逻辑非 !【同时使用两个叹号（!!），相当于调用了转型函</p>\n<p>数 Boolean()】</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(!<span class=\"literal\">false</span>); <span class=\"comment\">// true </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(!<span class=\"string\">&quot;blue&quot;</span>); <span class=\"comment\">// false </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(!<span class=\"number\">0</span>); <span class=\"comment\">// true </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(!<span class=\"title class_\">NaN</span>); <span class=\"comment\">// true </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(!<span class=\"string\">&quot;&quot;</span>); <span class=\"comment\">// true </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(!<span class=\"number\">12345</span>); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>逻辑与 &amp;&amp;</p>\n</li>\n<li><p>逻辑或 ||</p>\n</li>\n</ul>\n</li>\n<li><p>乘性操作符</p>\n<ul>\n<li>乘法 *</li>\n<li>除法 &#x2F;</li>\n<li>取模 %</li>\n</ul>\n</li>\n<li><p>指数操作符 ** Math.pow()</p>\n</li>\n<li><p>关系操作符（大于&gt;，等等）</p>\n</li>\n<li><p>相等操作符</p>\n<ul>\n<li>等于（&#x3D;&#x3D;）或不等于（!&#x3D;）</li>\n<li>全等（&#x3D;&#x3D;&#x3D;）或不全等（<code>!==</code>）</li>\n</ul>\n</li>\n<li><p>条件操作符 flag ? true : false</p>\n</li>\n<li><p>赋值操作符 &#x3D;</p>\n</li>\n<li><p>逗号操作符</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> num1 = <span class=\"number\">1</span>,num2 = <span class=\"number\">0</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"2-4-语句\"><a href=\"#2-4-语句\" class=\"headerlink\" title=\"2.4 语句\"></a>2.4 语句</h3><ul>\n<li><p>if 语句</p>\n</li>\n<li><p>do-while语句</p>\n</li>\n<li><p>while 语句</p>\n</li>\n<li><p>for 语句</p>\n</li>\n<li><p>for-in 语句</p>\n</li>\n<li><p>for-of 语句</p>\n</li>\n<li><p>标签语句 常用于内部循环跳出外部循环 break start;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">start</span>: <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; count; i++) &#123; </span><br><span class=\"line\"> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>break 和 continue</p>\n</li>\n<li><p>with 语句 【不建议使用，严格模式报错】</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> qs = location.<span class=\"property\">search</span>.<span class=\"title function_\">substring</span>(<span class=\"number\">1</span>); </span><br><span class=\"line\"><span class=\"keyword\">let</span> hostName = location.<span class=\"property\">hostname</span>; </span><br><span class=\"line\"><span class=\"keyword\">let</span> url = location.<span class=\"property\">href</span>;</span><br><span class=\"line\"><span class=\"comment\">// 使用 with 简化</span></span><br><span class=\"line\"><span class=\"title function_\">with</span>(<span class=\"params\">location</span>) &#123; </span><br><span class=\"line\"> <span class=\"keyword\">let</span> qs = search.<span class=\"title function_\">substring</span>(<span class=\"number\">1</span>); </span><br><span class=\"line\"> <span class=\"keyword\">let</span> hostName = hostname; </span><br><span class=\"line\"> <span class=\"keyword\">let</span> url = href; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>switch 语句</p>\n</li>\n</ul>\n<h3 id=\"2-5-函数（Function）\"><a href=\"#2-5-函数（Function）\" class=\"headerlink\" title=\"2.5 函数（Function）\"></a>2.5 函数（Function）</h3><p>它属于引用类型</p>\n<p>基本语法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">functionName</span>(<span class=\"params\">arg0, arg1,...,argN</span>) &#123; </span><br><span class=\"line\"> statements </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-变量、作用域与内存\"><a href=\"#3-变量、作用域与内存\" class=\"headerlink\" title=\"3. 变量、作用域与内存\"></a>3. 变量、作用域与内存</h2><h3 id=\"3-1-变量\"><a href=\"#3-1-变量\" class=\"headerlink\" title=\"3.1 变量\"></a>3.1 变量</h3><p>变量可以包含两种不同类型的数据：原始值和引用值</p>\n<p>原始值：简单数据类型。（typeof有效），保存在栈上</p>\n<p>引用值：多个值构成的对象。（instanceof 判断类型），保存在堆上。（引用值对象实际是指向对象的指针）</p>\n<h3 id=\"3-2-作用域\"><a href=\"#3-2-作用域\" class=\"headerlink\" title=\"3.2 作用域\"></a>3.2 作用域</h3><p>作用域链：各级上下文中的代码在访问变量和函数时的顺序。（更多资料可百度）</p>\n<p>上下文是函数，其活动对象用作变量对象加入作用域链中。</p>\n<p>对于过滤链举个简单例子方便理解：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> color = <span class=\"string\">&quot;blue&quot;</span>; </span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeColor</span>(<span class=\"params\"></span>) &#123; </span><br><span class=\"line\"> <span class=\"keyword\">if</span> (color === <span class=\"string\">&quot;blue&quot;</span>) &#123; </span><br><span class=\"line\"> \tcolor = <span class=\"string\">&quot;red&quot;</span>; </span><br><span class=\"line\"> &#125; <span class=\"keyword\">else</span> &#123; </span><br><span class=\"line\"> \tcolor = <span class=\"string\">&quot;blue&quot;</span>; </span><br><span class=\"line\"> &#125; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"title function_\">changeColor</span>();</span><br></pre></td></tr></table></figure>\n\n<p>在该函数 changeColor 的作用域链中包含两个对象：</p>\n<ol>\n<li>arguments 自身变量对象【具体可百度】</li>\n<li>全局上下文变量对象</li>\n</ol>\n<p>作用域链增强： catch 语句 和 with 语句</p>\n<p>作用域链中查找指定标识符，找到搜索结束，全局上下文仍然没有找到相应标识符，则其说明未定义。</p>\n<p><img src=\"/lingtan/../FILES/JavaScript%E5%9F%BA%E7%A1%80.md/image-20230605123626540.png\" alt=\"image-20230605123626540\"></p>\n<h3 id=\"3-3-垃圾回收（进阶知识）\"><a href=\"#3-3-垃圾回收（进阶知识）\" class=\"headerlink\" title=\"3.3 垃圾回收（进阶知识）\"></a>3.3 垃圾回收（进阶知识）</h3><ol>\n<li><p>标记清理【任何上下文都无法访问，将会打上标记】</p>\n</li>\n<li><p>引用计数。声明变量时引用数为1，当被其他值覆盖，引用数减去1，当引用数为0，则可删除。（不建议，循环引用不适用）</p>\n</li>\n<li><p>性能问题（合适的时机删除变量）</p>\n</li>\n<li><p>内存管理，建议不用的变量，手动赋值 null，释放其引用</p>\n</li>\n</ol>\n<h3 id=\"3-4-小结\"><a href=\"#3-4-小结\" class=\"headerlink\" title=\"3.4 小结\"></a>3.4 小结</h3><ol>\n<li>执行上下文分全局上下文、函数上下文和块级上下文。</li>\n<li>代码执行流每进入一个新上下文，都会创建一个作用域链，用于搜索变量和函数。</li>\n<li>全局上下文只能访问全局上下文中的变量和函数，不能直接访问局部上下文中的任何数据。</li>\n<li>离开作用域的值会被自动标记为可回收，然后在垃圾回收期间被删除。</li>\n<li>主流的垃圾回收算法是标记清理，即先给当前不使用的值加上标记，再回来回收它们的内存。</li>\n</ol>\n<h2 id=\"4-基本引用类型\"><a href=\"#4-基本引用类型\" class=\"headerlink\" title=\"4. 基本引用类型\"></a>4. 基本引用类型</h2><p>❤ 小提示：前面内容没有太多有用信息。</p>\n<h3 id=\"4-1-Date\"><a href=\"#4-1-Date\" class=\"headerlink\" title=\"4.1 Date\"></a>4.1 Date</h3><h4 id=\"4-1-1-创建日期对象\"><a href=\"#4-1-1-创建日期对象\" class=\"headerlink\" title=\"4.1.1 创建日期对象\"></a>4.1.1 创建日期对象</h4><ol>\n<li>创建一个 Date 的实例对象</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> now = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(); <span class=\"comment\">// 2023-06-05T06:02:04.276Z</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>通过 Date.parse 创建对象</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> someDate = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"title class_\">Date</span>.<span class=\"title function_\">parse</span>(<span class=\"string\">&quot;6/5/2023&quot;</span>)); <span class=\"comment\">// 2023-06-05T16:00:00.000Z</span></span><br></pre></td></tr></table></figure>\n\n<p>Date.parse 参数支持的格式：</p>\n<ul>\n<li>月&#x2F;日&#x2F;年 如: 6&#x2F;5&#x2F;2023</li>\n<li>月名 日, 年 如：June 5, 2023</li>\n<li>周几 月名 日 年 时:分:秒 时区 如”Mon June 5 2032 00:00:00 GMT-0700”</li>\n<li>【推荐】YYYY-MM-DDTHH:mm:ss.sssZ 如2019-05-23T00:00:00</li>\n</ul>\n<ol start=\"3\">\n<li>通过 Date.UTC 创建对象 （月份应该要减去1）</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 参数内容从左到右: 年月日时分秒</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> utcDate = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"title class_\">Date</span>.<span class=\"title function_\">UTC</span>(<span class=\"number\">2023</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">14</span>, <span class=\"number\">14</span>, <span class=\"number\">55</span>));<span class=\"comment\">// 2023-07-05T14:14:55.000Z</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>返回当前日期 Date.now()</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> start = <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>(); </span><br><span class=\"line\"><span class=\"title function_\">doSomething</span>();</span><br><span class=\"line\"><span class=\"keyword\">let</span> end = <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>();</span><br><span class=\"line\">result = end - start; <span class=\"comment\">// 用时: 2014毫秒</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-1-2-日期格式化\"><a href=\"#4-1-2-日期格式化\" class=\"headerlink\" title=\"4.1.2 日期格式化\"></a>4.1.2 日期格式化</h4><ul>\n<li>toDateString 显示周几、年月日</li>\n<li>toTimeString 显示时区、时分秒</li>\n<li>toLocaleDateString </li>\n<li>toLocaleTimeString</li>\n<li>toUTCString 显示完整的UTC日期</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> now = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;toDateString&quot;</span>, now.<span class=\"title function_\">toDateString</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;toTImeString&quot;</span>, now.<span class=\"title function_\">toTimeString</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;toLocaleDateString&quot;</span>, now.<span class=\"title function_\">toLocaleDateString</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;toLocaleTimeString&quot;</span>, now.<span class=\"title function_\">toLocaleTimeString</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;toUTCString&quot;</span>, now.<span class=\"title function_\">toUTCString</span>());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出结果</span></span><br><span class=\"line\">toDateString <span class=\"title class_\">Mon</span> <span class=\"title class_\">Jun</span> <span class=\"number\">05</span> <span class=\"number\">2023</span></span><br><span class=\"line\">toTImeString <span class=\"number\">14</span>:<span class=\"number\">32</span>:<span class=\"number\">00</span> <span class=\"variable constant_\">GMT</span>+<span class=\"number\">0800</span> (中国标准时间)</span><br><span class=\"line\">toLocaleDateString <span class=\"number\">2023</span>/<span class=\"number\">6</span>/<span class=\"number\">5</span></span><br><span class=\"line\">toLocaleTimeString <span class=\"number\">14</span>:<span class=\"number\">32</span>:<span class=\"number\">00</span></span><br><span class=\"line\">toUTCString <span class=\"title class_\">Mon</span>, <span class=\"number\">05</span> <span class=\"title class_\">Jun</span> <span class=\"number\">2023</span> <span class=\"number\">06</span>:<span class=\"number\">32</span>:<span class=\"number\">00</span> <span class=\"variable constant_\">GMT</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-1-3-Date-类型具体方法\"><a href=\"#4-1-3-Date-类型具体方法\" class=\"headerlink\" title=\"4.1.3 Date 类型具体方法\"></a>4.1.3 Date 类型具体方法</h4><p>getTime()  返回日期的毫秒表示；与 valueOf()相同</p>\n<p>setTime(<em>milliseconds</em>) 设置日期的毫秒表示，从而修改整个日期</p>\n<p>更多方法，访问 MDN</p>\n<h3 id=\"4-2-RegExp-正则\"><a href=\"#4-2-RegExp-正则\" class=\"headerlink\" title=\"4.2 RegExp 正则\"></a>4.2 RegExp 正则</h3><p>基本格式：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> expression = <span class=\"regexp\">/pattern/</span>flags;</span><br></pre></td></tr></table></figure>\n\n<p>pattern 模式：包括字符类、限定符、分组、向前查找和反向引用</p>\n<p>flags 标记：0 个或多个，一般有6种模式</p>\n<ul>\n<li>g 全局模式，查找字符串全部内容</li>\n<li>i 不区分大小写</li>\n<li>m 多行模式</li>\n<li>y 粘附模式，只查找从 lastIndex 开始以及之后字符串</li>\n<li>u Unicode 模式</li>\n<li>s dotAll 模式 表示元字符<code>.</code> 匹配任何字符（包括\\n 和 \\r）】</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> patter = <span class=\"regexp\">/123/g</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> result = patter.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;a123bc&quot;</span>)<span class=\"comment\">// [ &#x27;123&#x27;, index: 1, input: &#x27;a123bc&#x27;, groups: undefined ]</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> result = patter.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;abc&quot;</span>)<span class=\"comment\">// null</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> result = patter.<span class=\"title function_\">test</span>(<span class=\"string\">&quot;a123bc&quot;</span>);<span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<p>更多资料参考菜鸟教程，多使用正则。</p>\n<h3 id=\"4-3-原始值包含类型\"><a href=\"#4-3-原始值包含类型\" class=\"headerlink\" title=\"4.3 原始值包含类型\"></a>4.3 原始值包含类型</h3><p>基本使用：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 将字符串转成数字</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> value = <span class=\"title class_\">Number</span>(<span class=\"string\">&quot;123&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-4-内置对象\"><a href=\"#4-4-内置对象\" class=\"headerlink\" title=\"4.4 内置对象\"></a>4.4 内置对象</h3><p>不用显示实例化内置对象，开箱即用</p>\n<ol>\n<li><p>Global 对象</p>\n<ol>\n<li><p>isNaN 函数</p>\n</li>\n<li><p>isFinite 函数</p>\n</li>\n<li><p>parseInt 函数</p>\n</li>\n<li><p>parseFloat 函数</p>\n</li>\n<li><p>encodeURI() 用于编码URI 【类似encodeURIComponent】</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> url = <span class=\"built_in\">encodeURI</span>(<span class=\"string\">&quot;https://www.baidu.com/s?wd=菜鸟&quot;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(url); <span class=\"comment\">// https://www.baidu.com/s?wd=%E8%8F%9C%E9%B8%9F</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>decodeURI()和 decodeURIComponent()</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> d = <span class=\"built_in\">decodeURI</span>(<span class=\"string\">&quot;https://www.baidu.com/s?wd=%E8%8F%9C%E9%B8%9F&quot;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(d); <span class=\"comment\">// https://www.baidu.com/s?wd=菜鸟</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><span style=\"color: red\"> <strong>[强大]</strong> </span> eval 函数，执行 JS 语句 [&#x3D;&#x3D;容易被 XSS 利用，谨慎！！&#x3D;&#x3D;]</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> str = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">    let a = 1;</span></span><br><span class=\"line\"><span class=\"string\">    let b = 2;</span></span><br><span class=\"line\"><span class=\"string\">    console.log(a + b);</span></span><br><span class=\"line\"><span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"built_in\">eval</span>(str); <span class=\"comment\">// 3</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Global 对象属性，请翻阅MDN</p>\n</li>\n<li><p>Window 属性</p>\n<p>所有全局作用域中声明的变量和函数都变成了 window 的属性</p>\n<p>当然： 仅限 var 声明变量 和 函数</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> color = <span class=\"string\">&quot;red&quot;</span>; </span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">sayColor</span>(<span class=\"params\"></span>) &#123; </span><br><span class=\"line\"> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">color</span>); </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">sayColor</span>(); <span class=\"comment\">// &quot;red&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Math 对象： 数学公式</p>\n<p>更多资料请翻阅 MDN</p>\n</li>\n</ol>\n<h3 id=\"4-5-小结\"><a href=\"#4-5-小结\" class=\"headerlink\" title=\"4.5 小结\"></a>4.5 小结</h3><p>当代码开始执行时，全局上下文中会存在两个内置对象：Global 和 Math。</p>\n<h2 id=\"5-集合引用类型\"><a href=\"#5-集合引用类型\" class=\"headerlink\" title=\"5. 集合引用类型\"></a>5. 集合引用类型</h2><p>内容：对象、数组、定型数组、Map、WeakMap、Set和WeekSet</p>\n<h3 id=\"5-1-Object\"><a href=\"#5-1-Object\" class=\"headerlink\" title=\"5.1 Object\"></a>5.1 Object</h3><ol>\n<li>对象创建：</li>\n</ol>\n<p>① new 操作符</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> p = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>() <span class=\"comment\">// 也可以 let p = &#123;&#125;</span></span><br><span class=\"line\">p.<span class=\"property\">name</span> = <span class=\"string\">&quot;张三&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>② 对象字面量</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> person = &#123; </span><br><span class=\"line\"> <span class=\"attr\">name</span>: <span class=\"string\">&quot;Nicholas&quot;</span>, </span><br><span class=\"line\"> <span class=\"attr\">age</span>: <span class=\"number\">29</span> </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>获取属性</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">person[<span class=\"string\">&quot;name&quot;</span>]</span><br><span class=\"line\">person.<span class=\"property\">name</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-2-Array\"><a href=\"#5-2-Array\" class=\"headerlink\" title=\"5.2 Array\"></a>5.2 Array</h3><ol>\n<li>数组创建</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> colors = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(); <span class=\"comment\">// Array(20) Array(&quot;1&quot;,&quot;2&quot;)</span></span><br><span class=\"line\"><span class=\"comment\">// 字面量创建</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> colors = [<span class=\"string\">&quot;red&quot;</span>, <span class=\"string\">&quot;green&quot;</span>]</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>数组拆分</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(<span class=\"string\">&quot;Matt&quot;</span>); <span class=\"comment\">// [ &#x27;M&#x27;, &#x27;a&#x27;, &#x27;t&#x27;, &#x27;t&#x27; ]</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>将集合映射成新数组</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> m = <span class=\"keyword\">new</span> <span class=\"title class_\">Map</span>().<span class=\"title function_\">set</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>) .<span class=\"title function_\">set</span>(<span class=\"number\">3</span>, <span class=\"number\">4</span>); </span><br><span class=\"line\"><span class=\"keyword\">const</span> s = <span class=\"keyword\">new</span> <span class=\"title class_\">Set</span>().<span class=\"title function_\">add</span>(<span class=\"number\">1</span>) .<span class=\"title function_\">add</span>(<span class=\"number\">2</span>) .<span class=\"title function_\">add</span>(<span class=\"number\">3</span>) .<span class=\"title function_\">add</span>(<span class=\"number\">4</span>); </span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(m)); <span class=\"comment\">// [[1, 2], [3, 4]] </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(s)); <span class=\"comment\">// [1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>浅复制当前数组</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> a2 = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(a1);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a1 === a2);<span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>可以使用任何可迭代对象</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> iter = &#123; </span><br><span class=\"line\"> *[<span class=\"title class_\">Symbol</span>.<span class=\"property\">iterator</span>]() &#123; </span><br><span class=\"line\"> <span class=\"keyword\">yield</span> <span class=\"number\">1</span>; </span><br><span class=\"line\"> <span class=\"keyword\">yield</span> <span class=\"number\">2</span>; </span><br><span class=\"line\"> <span class=\"keyword\">yield</span> <span class=\"number\">3</span>; </span><br><span class=\"line\"> <span class=\"keyword\">yield</span> <span class=\"number\">4</span>; </span><br><span class=\"line\"> &#125; </span><br><span class=\"line\">&#125;; </span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(iter)); <span class=\"comment\">// [1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>arguments 转为数组</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getArgsArray</span>(<span class=\"params\"></span>) &#123; </span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(<span class=\"variable language_\">arguments</span>); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"7\">\n<li>换带有必要属性的自定义对象</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arrayLikeObject = &#123; </span><br><span class=\"line\"> <span class=\"number\">0</span>: <span class=\"number\">1</span>, </span><br><span class=\"line\"> <span class=\"number\">1</span>: <span class=\"number\">2</span>, </span><br><span class=\"line\"> <span class=\"number\">2</span>: <span class=\"number\">3</span>, </span><br><span class=\"line\"> <span class=\"number\">3</span>: <span class=\"number\">4</span>, </span><br><span class=\"line\"> <span class=\"attr\">length</span>: <span class=\"number\">4</span> </span><br><span class=\"line\">&#125;; </span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(arrayLikeObject)); <span class=\"comment\">// [1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"8\">\n<li>Array.of 函数</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"title function_\">of</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>); <span class=\"comment\">// [1,2,3,4]</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"9\">\n<li>数组空位 let arr &#x3D; [,,,]  { % label 不建议 orange%}</li>\n<li>数组索引从0开始，到 length - 1结束</li>\n<li>判断是否为数组 <ol>\n<li>instanchof</li>\n<li>Array.isArray</li>\n</ol>\n</li>\n<li>迭代器方法：keys() values() 和 entries()</li>\n<li>复制和填充方法  copyWithin 和 fill</li>\n<li>栈方法 push 和 pop</li>\n<li>队列方法 <ol>\n<li>shift 方法： 删除第一项并返回它，数组长度减去1</li>\n<li>push</li>\n<li>unshift 方法：数组开头添加，数组长度加1，返回新的数组长度</li>\n<li>pop</li>\n</ol>\n</li>\n<li>排序方法 reverse 和 sort，返回数组的引用</li>\n<li>操作方法<ol>\n<li>concat 函数 拼接数组</li>\n<li>slice 函数 相当于切片</li>\n<li>splice 函数，实现删除、插入、替换【<span style=\"color: red\"><strong>常用</strong></span>】</li>\n</ol>\n</li>\n<li>搜索 <ol>\n<li>indexOf 、lastIndexOf 和 includes 【严格相等】</li>\n<li>find、findIndex 【断言函数】</li>\n</ol>\n</li>\n<li>迭代方法<ol>\n<li>every 每项函数必须返回 true</li>\n<li>filter 每项函数返回 true 组成新数组</li>\n<li>forEach 遍历每一项</li>\n<li>map 返回由每项函数调用的结果组成的数组</li>\n<li>some 如果有一项返回 true</li>\n</ol>\n</li>\n<li>归并方法<ol>\n<li>reduce </li>\n<li>reduceRight</li>\n</ol>\n</li>\n</ol>\n<blockquote>\n<p>注意 如果数组中某一项是 null 或 undefined，则在 join()、toLocaleString()、</p>\n<p>toString()和 valueOf()返回的结果中会以空字符串表示。</p>\n</blockquote>\n<h3 id=\"5-3-定型数组\"><a href=\"#5-3-定型数组\" class=\"headerlink\" title=\"5.3 定型数组\"></a>5.3 定型数组</h3><ol>\n<li>ArrayBuffer：可用于在内存中分配特定数量的字节空间【类似C++ 的 malloc】【定型数组及视图引用的基本单位】</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在内存中分配 16 字节</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> buf = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayBuffer</span>(<span class=\"number\">16</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(buf.<span class=\"property\">byteLength</span>); <span class=\"comment\">// 16</span></span><br></pre></td></tr></table></figure>\n\n<p>slice 方法：复制全部或部分到新数组</p>\n<p>注意：</p>\n<ul>\n<li>分配内存失败，报错</li>\n<li>分配内存不能超过 Number.MAX_SAFE_INTEGER</li>\n<li>初始成功后，将所有二进制位初始化为0</li>\n<li>可以被垃圾回收</li>\n</ul>\n<blockquote>\n<p>要读取或写入 ArrayBuffer，就必须通过视图</p>\n</blockquote>\n<ol start=\"2\">\n<li>DataView 允许读写 ArrayBuffer 的视图</li>\n</ol>\n"},{"title":"Git 小技巧","date":"2024-03-05T07:14:41.871Z","updated":"2024-03-05T07:14:06.296Z","cover":"https://s1.ax1x.com/2023/06/19/pC30gRP.png","_content":"\nGit 加速小技巧\n\n访问 GitHub 很慢，我们可以加上代理。\n\n这里以 `V2rayN` 为例，sock5端口号为 10808\n\n给 git 添加上全局代理：\n\n```powershell\n.\\git.exe config --global http.proxy socks5://127.0.0.1:10808\n```\n\n","source":"_posts/git.md","raw":"---\ntitle: Git 小技巧\ndate: \nupdated: \ntags: git\ncategories: linux\ncover: https://s1.ax1x.com/2023/06/19/pC30gRP.png\n---\n\nGit 加速小技巧\n\n访问 GitHub 很慢，我们可以加上代理。\n\n这里以 `V2rayN` 为例，sock5端口号为 10808\n\n给 git 添加上全局代理：\n\n```powershell\n.\\git.exe config --global http.proxy socks5://127.0.0.1:10808\n```\n\n","slug":"git","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmop001f1kv29l9g69y9","content":"<p>Git 加速小技巧</p>\n<p>访问 GitHub 很慢，我们可以加上代理。</p>\n<p>这里以 <code>V2rayN</code> 为例，sock5端口号为 10808</p>\n<p>给 git 添加上全局代理：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.\\git.exe config <span class=\"literal\">--global</span> http.proxy socks5://<span class=\"number\">127.0</span>.<span class=\"number\">0.1</span>:<span class=\"number\">10808</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<p>Git 加速小技巧</p>\n<p>访问 GitHub 很慢，我们可以加上代理。</p>\n<p>这里以 <code>V2rayN</code> 为例，sock5端口号为 10808</p>\n<p>给 git 添加上全局代理：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.\\git.exe config <span class=\"literal\">--global</span> http.proxy socks5://<span class=\"number\">127.0</span>.<span class=\"number\">0.1</span>:<span class=\"number\">10808</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"Ubuntu 美化桌面","date":"2024-03-05T07:14:41.875Z","updated":"2024-03-05T07:14:06.300Z","cover":"https://s1.ax1x.com/2023/06/20/pC8Zzk9.png","_content":"\n\n\n各个标题无先后顺序，但要求按照步骤来，怕出现错误。\n\nGNOME官方插件中心：https://extensions.gnome.org/ 安装插件 \n\n# Ubuntu 美化桌面\n\n1. Git 克隆\n\n```sh\ngit clone https://github.com/vinceliuice/WhiteSur-gtk-theme.git --depth=1\n```\n![image-20230823132850474](../FILES/gnome美化.md/image-20230823132850474.png)\n\n2. 安装\n\n```sh\ncd WhiteSur-gtk-theme/ && ./install.sh\n```\n\n![image-20230823132901627](../FILES/gnome美化.md/image-20230823132901627.png)\n\n3. 更多自定义安装\n\n```sh\n./install.sh --help\n```\n\n# 安装 GNOME Tweaks 工具和 gnome 扩展\n\nGNOME Tweaks 工具是必须的，我们需要它来更改主题和图标，GNOME Tweaks 工具可以在Ubuntu的软件商店找到，也可以通过以下命令安装：\n\n```sh\nsudo apt-get install gnome-tweak-tool\n```\n\n为了更加的可自定义性，还需要去安装一下扩展：\n\n```sh\nsudo apt-get install gnome-shell-extensions\n```\n\n这里还要执行以下命令：\n\n```sh\nsudo apt-get install chrome-gnome-shell \n```\n\n打开 GNOME Tweaks 工具\n\n![image-20230823132920231](../FILES/gnome美化.md/image-20230823132920231.png)\n\n设置应用程序\n\n![image-20230823132931500](../FILES/gnome美化.md/image-20230823132931500.png)\n\n\n\n# GNOME 插件\n\n![image-20230823132940387](../FILES/gnome美化.md/image-20230823132940387.png)\n\n点击安装 浏览器插件，浏览器上方会出现插件图标\n\n![image-20230823132949038](../FILES/gnome美化.md/image-20230823132949038.png)\n\n# dock 栏设置\n\n“Dash to Dock” 是一个 GNOME 扩展。只需要通过浏览器安装即可，安装之后打开右键“show applications” 按钮（最下边的菜单按钮）并选择 “Dash to dock settings” 来更改设置。\n\n1. 搜索 Dash to Dock\n\n![image-20230823132959336](../FILES/gnome美化.md/image-20230823132959336.png)\n\n2. 点击安装\n\n![image-20230823133008705](../FILES/gnome美化.md/image-20230823133008705.png)\n\n\n\n3. Dash to Dock 设置\n\n右键点击应用程序，如下图。\n\n![image-20230823133022776](../FILES/gnome美化.md/image-20230823133022776.png)\n","source":"_posts/gnome美化.md","raw":"---\ntitle: Ubuntu 美化桌面\ndate: \nupdated:\ntags: linux\ncategories: linux\ncover: https://s1.ax1x.com/2023/06/20/pC8Zzk9.png\n---\n\n\n\n各个标题无先后顺序，但要求按照步骤来，怕出现错误。\n\nGNOME官方插件中心：https://extensions.gnome.org/ 安装插件 \n\n# Ubuntu 美化桌面\n\n1. Git 克隆\n\n```sh\ngit clone https://github.com/vinceliuice/WhiteSur-gtk-theme.git --depth=1\n```\n![image-20230823132850474](../FILES/gnome美化.md/image-20230823132850474.png)\n\n2. 安装\n\n```sh\ncd WhiteSur-gtk-theme/ && ./install.sh\n```\n\n![image-20230823132901627](../FILES/gnome美化.md/image-20230823132901627.png)\n\n3. 更多自定义安装\n\n```sh\n./install.sh --help\n```\n\n# 安装 GNOME Tweaks 工具和 gnome 扩展\n\nGNOME Tweaks 工具是必须的，我们需要它来更改主题和图标，GNOME Tweaks 工具可以在Ubuntu的软件商店找到，也可以通过以下命令安装：\n\n```sh\nsudo apt-get install gnome-tweak-tool\n```\n\n为了更加的可自定义性，还需要去安装一下扩展：\n\n```sh\nsudo apt-get install gnome-shell-extensions\n```\n\n这里还要执行以下命令：\n\n```sh\nsudo apt-get install chrome-gnome-shell \n```\n\n打开 GNOME Tweaks 工具\n\n![image-20230823132920231](../FILES/gnome美化.md/image-20230823132920231.png)\n\n设置应用程序\n\n![image-20230823132931500](../FILES/gnome美化.md/image-20230823132931500.png)\n\n\n\n# GNOME 插件\n\n![image-20230823132940387](../FILES/gnome美化.md/image-20230823132940387.png)\n\n点击安装 浏览器插件，浏览器上方会出现插件图标\n\n![image-20230823132949038](../FILES/gnome美化.md/image-20230823132949038.png)\n\n# dock 栏设置\n\n“Dash to Dock” 是一个 GNOME 扩展。只需要通过浏览器安装即可，安装之后打开右键“show applications” 按钮（最下边的菜单按钮）并选择 “Dash to dock settings” 来更改设置。\n\n1. 搜索 Dash to Dock\n\n![image-20230823132959336](../FILES/gnome美化.md/image-20230823132959336.png)\n\n2. 点击安装\n\n![image-20230823133008705](../FILES/gnome美化.md/image-20230823133008705.png)\n\n\n\n3. Dash to Dock 设置\n\n右键点击应用程序，如下图。\n\n![image-20230823133022776](../FILES/gnome美化.md/image-20230823133022776.png)\n","slug":"gnome美化","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmop001h1kv2b7a8hjyt","content":"<p>各个标题无先后顺序，但要求按照步骤来，怕出现错误。</p>\n<p>GNOME官方插件中心：<a href=\"https://extensions.gnome.org/\">https://extensions.gnome.org/</a> 安装插件 </p>\n<h1 id=\"Ubuntu-美化桌面\"><a href=\"#Ubuntu-美化桌面\" class=\"headerlink\" title=\"Ubuntu 美化桌面\"></a>Ubuntu 美化桌面</h1><ol>\n<li>Git 克隆</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/vinceliuice/WhiteSur-gtk-theme.git --depth=1</span><br></pre></td></tr></table></figure>\n<p><img src=\"/lingtan/../FILES/gnome%E7%BE%8E%E5%8C%96.md/image-20230823132850474.png\" alt=\"image-20230823132850474\"></p>\n<ol start=\"2\">\n<li>安装</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> WhiteSur-gtk-theme/ &amp;&amp; ./install.sh</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/gnome%E7%BE%8E%E5%8C%96.md/image-20230823132901627.png\" alt=\"image-20230823132901627\"></p>\n<ol start=\"3\">\n<li>更多自定义安装</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./install.sh --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装-GNOME-Tweaks-工具和-gnome-扩展\"><a href=\"#安装-GNOME-Tweaks-工具和-gnome-扩展\" class=\"headerlink\" title=\"安装 GNOME Tweaks 工具和 gnome 扩展\"></a>安装 GNOME Tweaks 工具和 gnome 扩展</h1><p>GNOME Tweaks 工具是必须的，我们需要它来更改主题和图标，GNOME Tweaks 工具可以在Ubuntu的软件商店找到，也可以通过以下命令安装：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install gnome-tweak-tool</span><br></pre></td></tr></table></figure>\n\n<p>为了更加的可自定义性，还需要去安装一下扩展：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install gnome-shell-extensions</span><br></pre></td></tr></table></figure>\n\n<p>这里还要执行以下命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install chrome-gnome-shell </span><br></pre></td></tr></table></figure>\n\n<p>打开 GNOME Tweaks 工具</p>\n<p><img src=\"/lingtan/../FILES/gnome%E7%BE%8E%E5%8C%96.md/image-20230823132920231.png\" alt=\"image-20230823132920231\"></p>\n<p>设置应用程序</p>\n<p><img src=\"/lingtan/../FILES/gnome%E7%BE%8E%E5%8C%96.md/image-20230823132931500.png\" alt=\"image-20230823132931500\"></p>\n<h1 id=\"GNOME-插件\"><a href=\"#GNOME-插件\" class=\"headerlink\" title=\"GNOME 插件\"></a>GNOME 插件</h1><p><img src=\"/lingtan/../FILES/gnome%E7%BE%8E%E5%8C%96.md/image-20230823132940387.png\" alt=\"image-20230823132940387\"></p>\n<p>点击安装 浏览器插件，浏览器上方会出现插件图标</p>\n<p><img src=\"/lingtan/../FILES/gnome%E7%BE%8E%E5%8C%96.md/image-20230823132949038.png\" alt=\"image-20230823132949038\"></p>\n<h1 id=\"dock-栏设置\"><a href=\"#dock-栏设置\" class=\"headerlink\" title=\"dock 栏设置\"></a>dock 栏设置</h1><p>“Dash to Dock” 是一个 GNOME 扩展。只需要通过浏览器安装即可，安装之后打开右键“show applications” 按钮（最下边的菜单按钮）并选择 “Dash to dock settings” 来更改设置。</p>\n<ol>\n<li>搜索 Dash to Dock</li>\n</ol>\n<p><img src=\"/lingtan/../FILES/gnome%E7%BE%8E%E5%8C%96.md/image-20230823132959336.png\" alt=\"image-20230823132959336\"></p>\n<ol start=\"2\">\n<li>点击安装</li>\n</ol>\n<p><img src=\"/lingtan/../FILES/gnome%E7%BE%8E%E5%8C%96.md/image-20230823133008705.png\" alt=\"image-20230823133008705\"></p>\n<ol start=\"3\">\n<li>Dash to Dock 设置</li>\n</ol>\n<p>右键点击应用程序，如下图。</p>\n<p><img src=\"/lingtan/../FILES/gnome%E7%BE%8E%E5%8C%96.md/image-20230823133022776.png\" alt=\"image-20230823133022776\"></p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<p>各个标题无先后顺序，但要求按照步骤来，怕出现错误。</p>\n<p>GNOME官方插件中心：<a href=\"https://extensions.gnome.org/\">https://extensions.gnome.org/</a> 安装插件 </p>\n<h1 id=\"Ubuntu-美化桌面\"><a href=\"#Ubuntu-美化桌面\" class=\"headerlink\" title=\"Ubuntu 美化桌面\"></a>Ubuntu 美化桌面</h1><ol>\n<li>Git 克隆</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/vinceliuice/WhiteSur-gtk-theme.git --depth=1</span><br></pre></td></tr></table></figure>\n<p><img src=\"/lingtan/../FILES/gnome%E7%BE%8E%E5%8C%96.md/image-20230823132850474.png\" alt=\"image-20230823132850474\"></p>\n<ol start=\"2\">\n<li>安装</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> WhiteSur-gtk-theme/ &amp;&amp; ./install.sh</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/gnome%E7%BE%8E%E5%8C%96.md/image-20230823132901627.png\" alt=\"image-20230823132901627\"></p>\n<ol start=\"3\">\n<li>更多自定义安装</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./install.sh --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装-GNOME-Tweaks-工具和-gnome-扩展\"><a href=\"#安装-GNOME-Tweaks-工具和-gnome-扩展\" class=\"headerlink\" title=\"安装 GNOME Tweaks 工具和 gnome 扩展\"></a>安装 GNOME Tweaks 工具和 gnome 扩展</h1><p>GNOME Tweaks 工具是必须的，我们需要它来更改主题和图标，GNOME Tweaks 工具可以在Ubuntu的软件商店找到，也可以通过以下命令安装：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install gnome-tweak-tool</span><br></pre></td></tr></table></figure>\n\n<p>为了更加的可自定义性，还需要去安装一下扩展：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install gnome-shell-extensions</span><br></pre></td></tr></table></figure>\n\n<p>这里还要执行以下命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install chrome-gnome-shell </span><br></pre></td></tr></table></figure>\n\n<p>打开 GNOME Tweaks 工具</p>\n<p><img src=\"/lingtan/../FILES/gnome%E7%BE%8E%E5%8C%96.md/image-20230823132920231.png\" alt=\"image-20230823132920231\"></p>\n<p>设置应用程序</p>\n<p><img src=\"/lingtan/../FILES/gnome%E7%BE%8E%E5%8C%96.md/image-20230823132931500.png\" alt=\"image-20230823132931500\"></p>\n<h1 id=\"GNOME-插件\"><a href=\"#GNOME-插件\" class=\"headerlink\" title=\"GNOME 插件\"></a>GNOME 插件</h1><p><img src=\"/lingtan/../FILES/gnome%E7%BE%8E%E5%8C%96.md/image-20230823132940387.png\" alt=\"image-20230823132940387\"></p>\n<p>点击安装 浏览器插件，浏览器上方会出现插件图标</p>\n<p><img src=\"/lingtan/../FILES/gnome%E7%BE%8E%E5%8C%96.md/image-20230823132949038.png\" alt=\"image-20230823132949038\"></p>\n<h1 id=\"dock-栏设置\"><a href=\"#dock-栏设置\" class=\"headerlink\" title=\"dock 栏设置\"></a>dock 栏设置</h1><p>“Dash to Dock” 是一个 GNOME 扩展。只需要通过浏览器安装即可，安装之后打开右键“show applications” 按钮（最下边的菜单按钮）并选择 “Dash to dock settings” 来更改设置。</p>\n<ol>\n<li>搜索 Dash to Dock</li>\n</ol>\n<p><img src=\"/lingtan/../FILES/gnome%E7%BE%8E%E5%8C%96.md/image-20230823132959336.png\" alt=\"image-20230823132959336\"></p>\n<ol start=\"2\">\n<li>点击安装</li>\n</ol>\n<p><img src=\"/lingtan/../FILES/gnome%E7%BE%8E%E5%8C%96.md/image-20230823133008705.png\" alt=\"image-20230823133008705\"></p>\n<ol start=\"3\">\n<li>Dash to Dock 设置</li>\n</ol>\n<p>右键点击应用程序，如下图。</p>\n<p><img src=\"/lingtan/../FILES/gnome%E7%BE%8E%E5%8C%96.md/image-20230823133022776.png\" alt=\"image-20230823133022776\"></p>\n"},{"title":"Go 的输入与输出","date":"2024-03-05T07:14:41.879Z","updated":"2024-03-05T07:14:06.300Z","cover":"https://s1.ax1x.com/2023/06/22/pCJ3oEq.png","_content":"\n# 基础概念\n\n包io为I/O基元提供了基本接口。它的主要工作是将此类原语的现有实现（如包操作系统中的实现）封装到抽象功能的共享公共接口中，以及一些其他相关原语。 因为这些接口和基元使用各种实现来封装较低级别的操作，除非另有通知，否则客户端不应认为它们对于并行执行是安全的。\n\n```go\ntype Reader interface {\n\tRead(p []byte) (n int, err error)\n}\n\ntype Writer interface {\n\tWrite(p []byte) (n int, err error)\n}\n```\n\n\n\n![在这里插入图片描述](../FILES/go-wr.md/008bcb5f6103455691ff3e79c29474ca.png)\n\n# 常用实现\n\n1. 网络、标准输入输出、文件流读取\n   1. net.Conn\n   2. os.Stdin\n   3. os.File\n2. 把字符串抽象成 Reader\n   - strings.Reader\n3. 把[]byte抽象成Reader\n   - bytes.Reader\n4. 把[]byte抽象成Reader和Writer\n   - bytes.Buffer\n5. 抽象成带缓冲的流读取\n   - bufio.Reader/Writer\n\n# bufio 介绍\n\nbufio 在程序和系统之间，添加了一个缓冲区。\n\n![在这里插入图片描述](../FILES/go-wr.md/21784585a070444b885756e66556e4ed.png)\n\n# 实操部分\n\n参考链接：[golang io.Reader和io.Writer_golang io.writer](https://blog.csdn.net/weixin_41479678/article/details/125007295)\n\n官方文档：[golang io部分](https://pkg.go.dev/io)\n\n{% note success %}\n\n程序已通过，开发环境如下:\n\n- IDEA 2023.1\n- go go version go1.20.4 windows/amd64\n\n{% endnote %}\n\n```go\npackage test\n\nimport (\n\t\"bytes\"\n\t\"log\"\n\t\"testing\"\n)\n\nconst s = \"SEND fly\"\n\nfunc TestSend(t *testing.T) {\n\treader := bytes.NewBufferString(s)\n\tres, err := reader.ReadBytes(' ')\n\tif err != nil {\n\t\tlog.Printf(\"出现错误!%s\", err)\n\t} else {\n\t\tlog.Printf(string(res))\n\t}\n}\n```\n\n运行结果：\n\n![image-20230622134517298](../FILES/go-wr.md/image-20230622134517298.png)\n\n","source":"_posts/go-wr.md","raw":"---\ntitle: Go 的输入与输出\ndate: \nupdated:\ntags: go\ncategories: 后端\ncover: https://s1.ax1x.com/2023/06/22/pCJ3oEq.png \n---\n\n# 基础概念\n\n包io为I/O基元提供了基本接口。它的主要工作是将此类原语的现有实现（如包操作系统中的实现）封装到抽象功能的共享公共接口中，以及一些其他相关原语。 因为这些接口和基元使用各种实现来封装较低级别的操作，除非另有通知，否则客户端不应认为它们对于并行执行是安全的。\n\n```go\ntype Reader interface {\n\tRead(p []byte) (n int, err error)\n}\n\ntype Writer interface {\n\tWrite(p []byte) (n int, err error)\n}\n```\n\n\n\n![在这里插入图片描述](../FILES/go-wr.md/008bcb5f6103455691ff3e79c29474ca.png)\n\n# 常用实现\n\n1. 网络、标准输入输出、文件流读取\n   1. net.Conn\n   2. os.Stdin\n   3. os.File\n2. 把字符串抽象成 Reader\n   - strings.Reader\n3. 把[]byte抽象成Reader\n   - bytes.Reader\n4. 把[]byte抽象成Reader和Writer\n   - bytes.Buffer\n5. 抽象成带缓冲的流读取\n   - bufio.Reader/Writer\n\n# bufio 介绍\n\nbufio 在程序和系统之间，添加了一个缓冲区。\n\n![在这里插入图片描述](../FILES/go-wr.md/21784585a070444b885756e66556e4ed.png)\n\n# 实操部分\n\n参考链接：[golang io.Reader和io.Writer_golang io.writer](https://blog.csdn.net/weixin_41479678/article/details/125007295)\n\n官方文档：[golang io部分](https://pkg.go.dev/io)\n\n{% note success %}\n\n程序已通过，开发环境如下:\n\n- IDEA 2023.1\n- go go version go1.20.4 windows/amd64\n\n{% endnote %}\n\n```go\npackage test\n\nimport (\n\t\"bytes\"\n\t\"log\"\n\t\"testing\"\n)\n\nconst s = \"SEND fly\"\n\nfunc TestSend(t *testing.T) {\n\treader := bytes.NewBufferString(s)\n\tres, err := reader.ReadBytes(' ')\n\tif err != nil {\n\t\tlog.Printf(\"出现错误!%s\", err)\n\t} else {\n\t\tlog.Printf(string(res))\n\t}\n}\n```\n\n运行结果：\n\n![image-20230622134517298](../FILES/go-wr.md/image-20230622134517298.png)\n\n","slug":"go-wr","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmoq001j1kv286utese3","content":"<h1 id=\"基础概念\"><a href=\"#基础概念\" class=\"headerlink\" title=\"基础概念\"></a>基础概念</h1><p>包io为I&#x2F;O基元提供了基本接口。它的主要工作是将此类原语的现有实现（如包操作系统中的实现）封装到抽象功能的共享公共接口中，以及一些其他相关原语。 因为这些接口和基元使用各种实现来封装较低级别的操作，除非另有通知，否则客户端不应认为它们对于并行执行是安全的。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Reader <span class=\"keyword\">interface</span> &#123;</span><br><span class=\"line\">\tRead(p []<span class=\"type\">byte</span>) (n <span class=\"type\">int</span>, err <span class=\"type\">error</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Writer <span class=\"keyword\">interface</span> &#123;</span><br><span class=\"line\">\tWrite(p []<span class=\"type\">byte</span>) (n <span class=\"type\">int</span>, err <span class=\"type\">error</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"/lingtan/../FILES/go-wr.md/008bcb5f6103455691ff3e79c29474ca.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"常用实现\"><a href=\"#常用实现\" class=\"headerlink\" title=\"常用实现\"></a>常用实现</h1><ol>\n<li>网络、标准输入输出、文件流读取<ol>\n<li>net.Conn</li>\n<li>os.Stdin</li>\n<li>os.File</li>\n</ol>\n</li>\n<li>把字符串抽象成 Reader<ul>\n<li>strings.Reader</li>\n</ul>\n</li>\n<li>把[]byte抽象成Reader<ul>\n<li>bytes.Reader</li>\n</ul>\n</li>\n<li>把[]byte抽象成Reader和Writer<ul>\n<li>bytes.Buffer</li>\n</ul>\n</li>\n<li>抽象成带缓冲的流读取<ul>\n<li>bufio.Reader&#x2F;Writer</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"bufio-介绍\"><a href=\"#bufio-介绍\" class=\"headerlink\" title=\"bufio 介绍\"></a>bufio 介绍</h1><p>bufio 在程序和系统之间，添加了一个缓冲区。</p>\n<p><img src=\"/lingtan/../FILES/go-wr.md/21784585a070444b885756e66556e4ed.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"实操部分\"><a href=\"#实操部分\" class=\"headerlink\" title=\"实操部分\"></a>实操部分</h1><p>参考链接：<a href=\"https://blog.csdn.net/weixin_41479678/article/details/125007295\">golang io.Reader和io.Writer_golang io.writer</a></p>\n<p>官方文档：<a href=\"https://pkg.go.dev/io\">golang io部分</a></p>\n<div class=\"note success flat\"><p>程序已通过，开发环境如下:</p>\n<ul>\n<li>IDEA 2023.1</li>\n<li>go go version go1.20.4 windows&#x2F;amd64</li>\n</ul>\n</div>\n\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> test</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;bytes&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;log&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;testing&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> s = <span class=\"string\">&quot;SEND fly&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">TestSend</span><span class=\"params\">(t *testing.T)</span></span> &#123;</span><br><span class=\"line\">\treader := bytes.NewBufferString(s)</span><br><span class=\"line\">\tres, err := reader.ReadBytes(<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tlog.Printf(<span class=\"string\">&quot;出现错误!%s&quot;</span>, err)</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tlog.Printf(<span class=\"type\">string</span>(res))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>运行结果：</p>\n<p><img src=\"/lingtan/../FILES/go-wr.md/image-20230622134517298.png\" alt=\"image-20230622134517298\"></p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"基础概念\"><a href=\"#基础概念\" class=\"headerlink\" title=\"基础概念\"></a>基础概念</h1><p>包io为I&#x2F;O基元提供了基本接口。它的主要工作是将此类原语的现有实现（如包操作系统中的实现）封装到抽象功能的共享公共接口中，以及一些其他相关原语。 因为这些接口和基元使用各种实现来封装较低级别的操作，除非另有通知，否则客户端不应认为它们对于并行执行是安全的。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Reader <span class=\"keyword\">interface</span> &#123;</span><br><span class=\"line\">\tRead(p []<span class=\"type\">byte</span>) (n <span class=\"type\">int</span>, err <span class=\"type\">error</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Writer <span class=\"keyword\">interface</span> &#123;</span><br><span class=\"line\">\tWrite(p []<span class=\"type\">byte</span>) (n <span class=\"type\">int</span>, err <span class=\"type\">error</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"/lingtan/../FILES/go-wr.md/008bcb5f6103455691ff3e79c29474ca.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"常用实现\"><a href=\"#常用实现\" class=\"headerlink\" title=\"常用实现\"></a>常用实现</h1><ol>\n<li>网络、标准输入输出、文件流读取<ol>\n<li>net.Conn</li>\n<li>os.Stdin</li>\n<li>os.File</li>\n</ol>\n</li>\n<li>把字符串抽象成 Reader<ul>\n<li>strings.Reader</li>\n</ul>\n</li>\n<li>把[]byte抽象成Reader<ul>\n<li>bytes.Reader</li>\n</ul>\n</li>\n<li>把[]byte抽象成Reader和Writer<ul>\n<li>bytes.Buffer</li>\n</ul>\n</li>\n<li>抽象成带缓冲的流读取<ul>\n<li>bufio.Reader&#x2F;Writer</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"bufio-介绍\"><a href=\"#bufio-介绍\" class=\"headerlink\" title=\"bufio 介绍\"></a>bufio 介绍</h1><p>bufio 在程序和系统之间，添加了一个缓冲区。</p>\n<p><img src=\"/lingtan/../FILES/go-wr.md/21784585a070444b885756e66556e4ed.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"实操部分\"><a href=\"#实操部分\" class=\"headerlink\" title=\"实操部分\"></a>实操部分</h1><p>参考链接：<a href=\"https://blog.csdn.net/weixin_41479678/article/details/125007295\">golang io.Reader和io.Writer_golang io.writer</a></p>\n<p>官方文档：<a href=\"https://pkg.go.dev/io\">golang io部分</a></p>\n<div class=\"note success flat\"><p>程序已通过，开发环境如下:</p>\n<ul>\n<li>IDEA 2023.1</li>\n<li>go go version go1.20.4 windows&#x2F;amd64</li>\n</ul>\n</div>\n\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> test</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;bytes&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;log&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;testing&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> s = <span class=\"string\">&quot;SEND fly&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">TestSend</span><span class=\"params\">(t *testing.T)</span></span> &#123;</span><br><span class=\"line\">\treader := bytes.NewBufferString(s)</span><br><span class=\"line\">\tres, err := reader.ReadBytes(<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tlog.Printf(<span class=\"string\">&quot;出现错误!%s&quot;</span>, err)</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tlog.Printf(<span class=\"type\">string</span>(res))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>运行结果：</p>\n<p><img src=\"/lingtan/../FILES/go-wr.md/image-20230622134517298.png\" alt=\"image-20230622134517298\"></p>\n"},{"title":"java","date":"2024-03-05T07:14:41.887Z","updated":"2024-03-05T07:14:06.300Z","cover":"./images/java.png","_content":"\njava 基础\n\nif 语句\n\n循环语句\n\n---\n\n一些算法题....\n\n力扣 leetcode.cn\n","source":"_posts/java.md","raw":"---\ntitle: java\ndate: \nupdated:\ntags: java基础\ncategories: 后端\ncover: ./images/java.png\n---\n\njava 基础\n\nif 语句\n\n循环语句\n\n---\n\n一些算法题....\n\n力扣 leetcode.cn\n","slug":"java","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmoq001m1kv2db7b21ji","content":"<p>java 基础</p>\n<p>if 语句</p>\n<p>循环语句</p>\n<hr>\n<p>一些算法题….</p>\n<p>力扣 leetcode.cn</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<p>java 基础</p>\n<p>if 语句</p>\n<p>循环语句</p>\n<hr>\n<p>一些算法题….</p>\n<p>力扣 leetcode.cn</p>\n"},{"title":"nextJS 性能优化","date":"2024-03-05T07:14:41.903Z","updated":"2024-03-05T07:14:06.304Z","cover":"https://s1.ax1x.com/2023/06/20/pC81VJg.png","_content":"\n参考链接：[【NextJS】一文了解 NextJS 并对性能优化做出最佳实践 - 掘金 (juejin.cn)](https://juejin.cn/post/7154205903388934180#comment)\n\n# 4种渲染方式\n\n- **Client Side Rendering (CSR)**\n  客户端渲染，往往是一个 SPA(单页面应用)，HTML文件仅包含JS\\CSS资源，不涉及页面内容，页面内容需要浏览器解析JS后二次渲染。\n- **Static Site Generation (SSG)**\n  静态页面生成，对于不需要频繁更新的静态页面内容，适合SSR，不依赖服务端。\n- **Server Side Rendering (SSR)**\n  服务端渲染，对于需要频繁更新的静态页面内容，更适合使用SSR，依赖服务端。\n- **IncreIncremental Site Rendering (ISR)**\n  增量静态生成，基于页面内容的缓存机制，仅对未缓存过的静态页面进行增量式生成，依赖服务端。\n\n{% note success  %}\nSSG / ISR 都是非常适合博客类应用的，**区别**在于SSG是构建时生成，效率较低，ISR是基于已有的缓存按需生成，效率更高。\n{%endnote%}\n\n![2abf157ef8fd4b60b26dc45d24273dbbtplv-k3u1fbpfcp-zoom-in-crop-mark4536000](../FILES/nextJS性能优化.md/2abf157ef8fd4b60b26dc45d24273dbbtplv-k3u1fbpfcp-zoom-in-crop-mark4536000.webp)\n\n# 性能分析工具\n\n如何看性能？【打开`开发者调试工具`】\n\n1. 网络\n2. 性能\n3. Lighthouse\n\n# 优化\n\n1. **将不可见元素动态导入**\n\n```typescript\nconst AddModal = dynamic(() => import(\"@/components/add-customer-modal\"))\nconst DetailModel = dynamic(() => import(\"@/components/detail-customer-modal\"))\nconst Load = dynamic(() => import(\"@/util/load-animation\"))\n```\n\n打开Network。当条件满足时，你将看到一个新的网络请求被发出来获取动态组件(单击按钮打开一个模态)。\n\n2. **next/script 优化 script 加载时**\n\n| strategy          | 描述                 |\n| ----------------- | -------------------- |\n| beforeInteractive | 可交互前加载脚本     |\n| afterInteractive  | 可交互后加载脚本     |\n| lazyOnload        | 浏览器空闲时加载脚本 |\n\n```typescript\n<script strategy=\"lazyOnload\" src=\"//wl.jd.com/boomerang.min.js\" />\n```\n\n\n\n","source":"_posts/nextJS性能优化.md","raw":"---\ntitle: nextJS 性能优化\ndate: \nupdated: \ntags: nextJS\ncategories: 前端\ncover: https://s1.ax1x.com/2023/06/20/pC81VJg.png\n---\n\n参考链接：[【NextJS】一文了解 NextJS 并对性能优化做出最佳实践 - 掘金 (juejin.cn)](https://juejin.cn/post/7154205903388934180#comment)\n\n# 4种渲染方式\n\n- **Client Side Rendering (CSR)**\n  客户端渲染，往往是一个 SPA(单页面应用)，HTML文件仅包含JS\\CSS资源，不涉及页面内容，页面内容需要浏览器解析JS后二次渲染。\n- **Static Site Generation (SSG)**\n  静态页面生成，对于不需要频繁更新的静态页面内容，适合SSR，不依赖服务端。\n- **Server Side Rendering (SSR)**\n  服务端渲染，对于需要频繁更新的静态页面内容，更适合使用SSR，依赖服务端。\n- **IncreIncremental Site Rendering (ISR)**\n  增量静态生成，基于页面内容的缓存机制，仅对未缓存过的静态页面进行增量式生成，依赖服务端。\n\n{% note success  %}\nSSG / ISR 都是非常适合博客类应用的，**区别**在于SSG是构建时生成，效率较低，ISR是基于已有的缓存按需生成，效率更高。\n{%endnote%}\n\n![2abf157ef8fd4b60b26dc45d24273dbbtplv-k3u1fbpfcp-zoom-in-crop-mark4536000](../FILES/nextJS性能优化.md/2abf157ef8fd4b60b26dc45d24273dbbtplv-k3u1fbpfcp-zoom-in-crop-mark4536000.webp)\n\n# 性能分析工具\n\n如何看性能？【打开`开发者调试工具`】\n\n1. 网络\n2. 性能\n3. Lighthouse\n\n# 优化\n\n1. **将不可见元素动态导入**\n\n```typescript\nconst AddModal = dynamic(() => import(\"@/components/add-customer-modal\"))\nconst DetailModel = dynamic(() => import(\"@/components/detail-customer-modal\"))\nconst Load = dynamic(() => import(\"@/util/load-animation\"))\n```\n\n打开Network。当条件满足时，你将看到一个新的网络请求被发出来获取动态组件(单击按钮打开一个模态)。\n\n2. **next/script 优化 script 加载时**\n\n| strategy          | 描述                 |\n| ----------------- | -------------------- |\n| beforeInteractive | 可交互前加载脚本     |\n| afterInteractive  | 可交互后加载脚本     |\n| lazyOnload        | 浏览器空闲时加载脚本 |\n\n```typescript\n<script strategy=\"lazyOnload\" src=\"//wl.jd.com/boomerang.min.js\" />\n```\n\n\n\n","slug":"nextJS性能优化","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmor001p1kv2ex9tdgic","content":"<p>参考链接：<a href=\"https://juejin.cn/post/7154205903388934180#comment\">【NextJS】一文了解 NextJS 并对性能优化做出最佳实践 - 掘金 (juejin.cn)</a></p>\n<h1 id=\"4种渲染方式\"><a href=\"#4种渲染方式\" class=\"headerlink\" title=\"4种渲染方式\"></a>4种渲染方式</h1><ul>\n<li><strong>Client Side Rendering (CSR)</strong><br>客户端渲染，往往是一个 SPA(单页面应用)，HTML文件仅包含JS\\CSS资源，不涉及页面内容，页面内容需要浏览器解析JS后二次渲染。</li>\n<li><strong>Static Site Generation (SSG)</strong><br>静态页面生成，对于不需要频繁更新的静态页面内容，适合SSR，不依赖服务端。</li>\n<li><strong>Server Side Rendering (SSR)</strong><br>服务端渲染，对于需要频繁更新的静态页面内容，更适合使用SSR，依赖服务端。</li>\n<li><strong>IncreIncremental Site Rendering (ISR)</strong><br>增量静态生成，基于页面内容的缓存机制，仅对未缓存过的静态页面进行增量式生成，依赖服务端。</li>\n</ul>\n<div class=\"note success flat\"><p>SSG &#x2F; ISR 都是非常适合博客类应用的，<strong>区别</strong>在于SSG是构建时生成，效率较低，ISR是基于已有的缓存按需生成，效率更高。</p>\n</div>\n\n<p><img src=\"/lingtan/../FILES/nextJS%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.md/2abf157ef8fd4b60b26dc45d24273dbbtplv-k3u1fbpfcp-zoom-in-crop-mark4536000.webp\" alt=\"2abf157ef8fd4b60b26dc45d24273dbbtplv-k3u1fbpfcp-zoom-in-crop-mark4536000\"></p>\n<h1 id=\"性能分析工具\"><a href=\"#性能分析工具\" class=\"headerlink\" title=\"性能分析工具\"></a>性能分析工具</h1><p>如何看性能？【打开<code>开发者调试工具</code>】</p>\n<ol>\n<li>网络</li>\n<li>性能</li>\n<li>Lighthouse</li>\n</ol>\n<h1 id=\"优化\"><a href=\"#优化\" class=\"headerlink\" title=\"优化\"></a>优化</h1><ol>\n<li><strong>将不可见元素动态导入</strong></li>\n</ol>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">AddModal</span> = <span class=\"title function_\">dynamic</span>(<span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;@/components/add-customer-modal&quot;</span>))</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">DetailModel</span> = <span class=\"title function_\">dynamic</span>(<span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;@/components/detail-customer-modal&quot;</span>))</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Load</span> = <span class=\"title function_\">dynamic</span>(<span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;@/util/load-animation&quot;</span>))</span><br></pre></td></tr></table></figure>\n\n<p>打开Network。当条件满足时，你将看到一个新的网络请求被发出来获取动态组件(单击按钮打开一个模态)。</p>\n<ol start=\"2\">\n<li><strong>next&#x2F;script 优化 script 加载时</strong></li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>strategy</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>beforeInteractive</td>\n<td>可交互前加载脚本</td>\n</tr>\n<tr>\n<td>afterInteractive</td>\n<td>可交互后加载脚本</td>\n</tr>\n<tr>\n<td>lazyOnload</td>\n<td>浏览器空闲时加载脚本</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script strategy=<span class=\"string\">&quot;lazyOnload&quot;</span> src=<span class=\"string\">&quot;//wl.jd.com/boomerang.min.js&quot;</span> /&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<p>参考链接：<a href=\"https://juejin.cn/post/7154205903388934180#comment\">【NextJS】一文了解 NextJS 并对性能优化做出最佳实践 - 掘金 (juejin.cn)</a></p>\n<h1 id=\"4种渲染方式\"><a href=\"#4种渲染方式\" class=\"headerlink\" title=\"4种渲染方式\"></a>4种渲染方式</h1><ul>\n<li><strong>Client Side Rendering (CSR)</strong><br>客户端渲染，往往是一个 SPA(单页面应用)，HTML文件仅包含JS\\CSS资源，不涉及页面内容，页面内容需要浏览器解析JS后二次渲染。</li>\n<li><strong>Static Site Generation (SSG)</strong><br>静态页面生成，对于不需要频繁更新的静态页面内容，适合SSR，不依赖服务端。</li>\n<li><strong>Server Side Rendering (SSR)</strong><br>服务端渲染，对于需要频繁更新的静态页面内容，更适合使用SSR，依赖服务端。</li>\n<li><strong>IncreIncremental Site Rendering (ISR)</strong><br>增量静态生成，基于页面内容的缓存机制，仅对未缓存过的静态页面进行增量式生成，依赖服务端。</li>\n</ul>\n<div class=\"note success flat\"><p>SSG &#x2F; ISR 都是非常适合博客类应用的，<strong>区别</strong>在于SSG是构建时生成，效率较低，ISR是基于已有的缓存按需生成，效率更高。</p>\n</div>\n\n<p><img src=\"/lingtan/../FILES/nextJS%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.md/2abf157ef8fd4b60b26dc45d24273dbbtplv-k3u1fbpfcp-zoom-in-crop-mark4536000.webp\" alt=\"2abf157ef8fd4b60b26dc45d24273dbbtplv-k3u1fbpfcp-zoom-in-crop-mark4536000\"></p>\n<h1 id=\"性能分析工具\"><a href=\"#性能分析工具\" class=\"headerlink\" title=\"性能分析工具\"></a>性能分析工具</h1><p>如何看性能？【打开<code>开发者调试工具</code>】</p>\n<ol>\n<li>网络</li>\n<li>性能</li>\n<li>Lighthouse</li>\n</ol>\n<h1 id=\"优化\"><a href=\"#优化\" class=\"headerlink\" title=\"优化\"></a>优化</h1><ol>\n<li><strong>将不可见元素动态导入</strong></li>\n</ol>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">AddModal</span> = <span class=\"title function_\">dynamic</span>(<span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;@/components/add-customer-modal&quot;</span>))</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">DetailModel</span> = <span class=\"title function_\">dynamic</span>(<span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;@/components/detail-customer-modal&quot;</span>))</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Load</span> = <span class=\"title function_\">dynamic</span>(<span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&quot;@/util/load-animation&quot;</span>))</span><br></pre></td></tr></table></figure>\n\n<p>打开Network。当条件满足时，你将看到一个新的网络请求被发出来获取动态组件(单击按钮打开一个模态)。</p>\n<ol start=\"2\">\n<li><strong>next&#x2F;script 优化 script 加载时</strong></li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>strategy</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>beforeInteractive</td>\n<td>可交互前加载脚本</td>\n</tr>\n<tr>\n<td>afterInteractive</td>\n<td>可交互后加载脚本</td>\n</tr>\n<tr>\n<td>lazyOnload</td>\n<td>浏览器空闲时加载脚本</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script strategy=<span class=\"string\">&quot;lazyOnload&quot;</span> src=<span class=\"string\">&quot;//wl.jd.com/boomerang.min.js&quot;</span> /&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n"},{"title":"mysql","date":"2024-03-05T07:14:41.900Z","updated":"2024-03-05T07:14:06.300Z","cover":"./images/mysql.png","_content":"\n## 下载\n\n### 从网上下载\n\nhttps://dev.mysql.com/get/mysql-apt-config_0.8.23-1_all.deb\n\n### 安装 mysql-apt-config\n\n下载文件名: `mysql-apt-config_0.8.23-1_all.deb`\n\n终端打开安装\n\n```bash\nsudo dpkg -i mysql-apt-config_0.8.23-1_all.deb\n```\n\n安装时：必须选择 `debian buster`\n\n![Img](../FILES/mysql.md/img-20230617195454.png)\n\n选择确认后，然后选择 OK\n\n![Img](../FILES/mysql.md/img-20230617195642.png)\n\n### 更新 apt-get\n\n```sh\nsudo apt-get update\n```\n\n![Img](../FILES/mysql.md/img-20230617200336.png)\n\n从图中我们可以看到已经加入了 mysql 镜像源\n\n### 接着直接安装 mysql\n\n\n{% note success no-icon flat %}\n如果你在安装 mysql 时没有遇到没有软件包mysql这个错误，你可以不用管前面3个步骤。\n{% endnote %}\n\n```bash\nsudo apt-get install mysql-server mysql-client\n```\n\n输入密码，按确认\n\n![Img](../FILES/mysql.md/img-20230617200704.png)\n\n如果碰到这个，直接确认\n\n![Img](../FILES/mysql.md/img-20230617200903.png)\n\n这时候需要漫长的等待...\n\n查看版本：\n\n```bash\n#mysql  Ver 8.0.33 for Linux on x86_64 (MySQL Community Server - GPL)\nmysql --version\n```\n\n## 查看 mysql 状态\n\n### 查看状态\n\n```bash\nsudo service mysql status\n```\n\n![Img](../FILES/mysql.md/img-20230617201511.png)\n\n### 停止\n\n```bash\nsudo service mysql stop\n```\n\n### 启动\n\n```bash\nsudo service mysql start\n```\n\n## 卸载\n\n```bash\n# 卸载mysql：\nsudo apt-get autoremove mysql* --purge\nsudo apt-get remove mysql-server\nsudo apt-get remove mysql-common\n\n# 清理残留数据 \nsudo dpkg -l |grep mysql|awk '{print $2}' |sudo xargs dpkg -P \nsudo rm -rf /etc/mysql/ \nsudo rm -rf /var/lib/mysql\n\n# 检查是否删除完毕\nwhereis mysql\nsudo find / -name mysql\n```","source":"_posts/mysql.md","raw":"---\ntitle: mysql\ndate: \nupdated:\ntags: mysql\ncategories: 数据库\ncover: ./images/mysql.png\n---\n\n## 下载\n\n### 从网上下载\n\nhttps://dev.mysql.com/get/mysql-apt-config_0.8.23-1_all.deb\n\n### 安装 mysql-apt-config\n\n下载文件名: `mysql-apt-config_0.8.23-1_all.deb`\n\n终端打开安装\n\n```bash\nsudo dpkg -i mysql-apt-config_0.8.23-1_all.deb\n```\n\n安装时：必须选择 `debian buster`\n\n![Img](../FILES/mysql.md/img-20230617195454.png)\n\n选择确认后，然后选择 OK\n\n![Img](../FILES/mysql.md/img-20230617195642.png)\n\n### 更新 apt-get\n\n```sh\nsudo apt-get update\n```\n\n![Img](../FILES/mysql.md/img-20230617200336.png)\n\n从图中我们可以看到已经加入了 mysql 镜像源\n\n### 接着直接安装 mysql\n\n\n{% note success no-icon flat %}\n如果你在安装 mysql 时没有遇到没有软件包mysql这个错误，你可以不用管前面3个步骤。\n{% endnote %}\n\n```bash\nsudo apt-get install mysql-server mysql-client\n```\n\n输入密码，按确认\n\n![Img](../FILES/mysql.md/img-20230617200704.png)\n\n如果碰到这个，直接确认\n\n![Img](../FILES/mysql.md/img-20230617200903.png)\n\n这时候需要漫长的等待...\n\n查看版本：\n\n```bash\n#mysql  Ver 8.0.33 for Linux on x86_64 (MySQL Community Server - GPL)\nmysql --version\n```\n\n## 查看 mysql 状态\n\n### 查看状态\n\n```bash\nsudo service mysql status\n```\n\n![Img](../FILES/mysql.md/img-20230617201511.png)\n\n### 停止\n\n```bash\nsudo service mysql stop\n```\n\n### 启动\n\n```bash\nsudo service mysql start\n```\n\n## 卸载\n\n```bash\n# 卸载mysql：\nsudo apt-get autoremove mysql* --purge\nsudo apt-get remove mysql-server\nsudo apt-get remove mysql-common\n\n# 清理残留数据 \nsudo dpkg -l |grep mysql|awk '{print $2}' |sudo xargs dpkg -P \nsudo rm -rf /etc/mysql/ \nsudo rm -rf /var/lib/mysql\n\n# 检查是否删除完毕\nwhereis mysql\nsudo find / -name mysql\n```","slug":"mysql","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmor001t1kv2hhsz1187","content":"<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><h3 id=\"从网上下载\"><a href=\"#从网上下载\" class=\"headerlink\" title=\"从网上下载\"></a>从网上下载</h3><p><a href=\"https://dev.mysql.com/get/mysql-apt-config_0.8.23-1_all.deb\">https://dev.mysql.com/get/mysql-apt-config_0.8.23-1_all.deb</a></p>\n<h3 id=\"安装-mysql-apt-config\"><a href=\"#安装-mysql-apt-config\" class=\"headerlink\" title=\"安装 mysql-apt-config\"></a>安装 mysql-apt-config</h3><p>下载文件名: <code>mysql-apt-config_0.8.23-1_all.deb</code></p>\n<p>终端打开安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -i mysql-apt-config_0.8.23-1_all.deb</span><br></pre></td></tr></table></figure>\n\n<p>安装时：必须选择 <code>debian buster</code></p>\n<p><img src=\"/lingtan/../FILES/mysql.md/img-20230617195454.png\" alt=\"Img\"></p>\n<p>选择确认后，然后选择 OK</p>\n<p><img src=\"/lingtan/../FILES/mysql.md/img-20230617195642.png\" alt=\"Img\"></p>\n<h3 id=\"更新-apt-get\"><a href=\"#更新-apt-get\" class=\"headerlink\" title=\"更新 apt-get\"></a>更新 apt-get</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/mysql.md/img-20230617200336.png\" alt=\"Img\"></p>\n<p>从图中我们可以看到已经加入了 mysql 镜像源</p>\n<h3 id=\"接着直接安装-mysql\"><a href=\"#接着直接安装-mysql\" class=\"headerlink\" title=\"接着直接安装 mysql\"></a>接着直接安装 mysql</h3><div class=\"note success no-icon flat\"><p>如果你在安装 mysql 时没有遇到没有软件包mysql这个错误，你可以不用管前面3个步骤。</p>\n</div>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install mysql-server mysql-client</span><br></pre></td></tr></table></figure>\n\n<p>输入密码，按确认</p>\n<p><img src=\"/lingtan/../FILES/mysql.md/img-20230617200704.png\" alt=\"Img\"></p>\n<p>如果碰到这个，直接确认</p>\n<p><img src=\"/lingtan/../FILES/mysql.md/img-20230617200903.png\" alt=\"Img\"></p>\n<p>这时候需要漫长的等待…</p>\n<p>查看版本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#mysql  Ver 8.0.33 for Linux on x86_64 (MySQL Community Server - GPL)</span></span><br><span class=\"line\">mysql --version</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"查看-mysql-状态\"><a href=\"#查看-mysql-状态\" class=\"headerlink\" title=\"查看 mysql 状态\"></a>查看 mysql 状态</h2><h3 id=\"查看状态\"><a href=\"#查看状态\" class=\"headerlink\" title=\"查看状态\"></a>查看状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service mysql status</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/mysql.md/img-20230617201511.png\" alt=\"Img\"></p>\n<h3 id=\"停止\"><a href=\"#停止\" class=\"headerlink\" title=\"停止\"></a>停止</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service mysql stop</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service mysql start</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 卸载mysql：</span></span><br><span class=\"line\">sudo apt-get autoremove mysql* --purge</span><br><span class=\"line\">sudo apt-get remove mysql-server</span><br><span class=\"line\">sudo apt-get remove mysql-common</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 清理残留数据 </span></span><br><span class=\"line\">sudo dpkg -l |grep mysql|awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span> |sudo xargs dpkg -P </span><br><span class=\"line\">sudo <span class=\"built_in\">rm</span> -rf /etc/mysql/ </span><br><span class=\"line\">sudo <span class=\"built_in\">rm</span> -rf /var/lib/mysql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检查是否删除完毕</span></span><br><span class=\"line\">whereis mysql</span><br><span class=\"line\">sudo find / -name mysql</span><br></pre></td></tr></table></figure>","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><h3 id=\"从网上下载\"><a href=\"#从网上下载\" class=\"headerlink\" title=\"从网上下载\"></a>从网上下载</h3><p><a href=\"https://dev.mysql.com/get/mysql-apt-config_0.8.23-1_all.deb\">https://dev.mysql.com/get/mysql-apt-config_0.8.23-1_all.deb</a></p>\n<h3 id=\"安装-mysql-apt-config\"><a href=\"#安装-mysql-apt-config\" class=\"headerlink\" title=\"安装 mysql-apt-config\"></a>安装 mysql-apt-config</h3><p>下载文件名: <code>mysql-apt-config_0.8.23-1_all.deb</code></p>\n<p>终端打开安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -i mysql-apt-config_0.8.23-1_all.deb</span><br></pre></td></tr></table></figure>\n\n<p>安装时：必须选择 <code>debian buster</code></p>\n<p><img src=\"/lingtan/../FILES/mysql.md/img-20230617195454.png\" alt=\"Img\"></p>\n<p>选择确认后，然后选择 OK</p>\n<p><img src=\"/lingtan/../FILES/mysql.md/img-20230617195642.png\" alt=\"Img\"></p>\n<h3 id=\"更新-apt-get\"><a href=\"#更新-apt-get\" class=\"headerlink\" title=\"更新 apt-get\"></a>更新 apt-get</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/mysql.md/img-20230617200336.png\" alt=\"Img\"></p>\n<p>从图中我们可以看到已经加入了 mysql 镜像源</p>\n<h3 id=\"接着直接安装-mysql\"><a href=\"#接着直接安装-mysql\" class=\"headerlink\" title=\"接着直接安装 mysql\"></a>接着直接安装 mysql</h3><div class=\"note success no-icon flat\"><p>如果你在安装 mysql 时没有遇到没有软件包mysql这个错误，你可以不用管前面3个步骤。</p>\n</div>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install mysql-server mysql-client</span><br></pre></td></tr></table></figure>\n\n<p>输入密码，按确认</p>\n<p><img src=\"/lingtan/../FILES/mysql.md/img-20230617200704.png\" alt=\"Img\"></p>\n<p>如果碰到这个，直接确认</p>\n<p><img src=\"/lingtan/../FILES/mysql.md/img-20230617200903.png\" alt=\"Img\"></p>\n<p>这时候需要漫长的等待…</p>\n<p>查看版本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#mysql  Ver 8.0.33 for Linux on x86_64 (MySQL Community Server - GPL)</span></span><br><span class=\"line\">mysql --version</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"查看-mysql-状态\"><a href=\"#查看-mysql-状态\" class=\"headerlink\" title=\"查看 mysql 状态\"></a>查看 mysql 状态</h2><h3 id=\"查看状态\"><a href=\"#查看状态\" class=\"headerlink\" title=\"查看状态\"></a>查看状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service mysql status</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/mysql.md/img-20230617201511.png\" alt=\"Img\"></p>\n<h3 id=\"停止\"><a href=\"#停止\" class=\"headerlink\" title=\"停止\"></a>停止</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service mysql stop</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service mysql start</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 卸载mysql：</span></span><br><span class=\"line\">sudo apt-get autoremove mysql* --purge</span><br><span class=\"line\">sudo apt-get remove mysql-server</span><br><span class=\"line\">sudo apt-get remove mysql-common</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 清理残留数据 </span></span><br><span class=\"line\">sudo dpkg -l |grep mysql|awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span> |sudo xargs dpkg -P </span><br><span class=\"line\">sudo <span class=\"built_in\">rm</span> -rf /etc/mysql/ </span><br><span class=\"line\">sudo <span class=\"built_in\">rm</span> -rf /var/lib/mysql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检查是否删除完毕</span></span><br><span class=\"line\">whereis mysql</span><br><span class=\"line\">sudo find / -name mysql</span><br></pre></td></tr></table></figure>"},{"title":"nodejs 更新","date":"2024-03-05T07:14:41.908Z","updated":"2024-03-05T07:14:06.304Z","cover":"https://s1.ax1x.com/2023/06/20/pC83wcj.png","_content":"\n# nodejs 更新\n\n1. 查看版本\n\n```sh\nnode -v\n```\n\n![image-20230530140912644](../FILES/nodejs更新.md/image-20230530140912644.png)\n\n2. 清除npm缓存\n\n```sh\nnpm cache verify\n```\n\n![image-20230530141003682](../FILES/nodejs更新.md/image-20230530141003682.png)\n\n3. 安装 nvm \n\n> 专门用来管理版本\n\n下载地址：[Releases · coreybutler/nvm-windows (github.com)](https://github.com/coreybutler/nvm-windows/releases)\n\n![image-20230530142308794](../FILES/nodejs更新.md/image-20230530142308794.png)\n\n下载 nvm-setup.zip 文件，接着直接下一步...\n\n安装成功后，输入命令\n\n```sh\nnvm --version\n```\n\n![image-20230530142403267](../FILES/nodejs更新.md/image-20230530142403267.png)\n\n4. 安装新版 nodejs\n\n```sh\nnvm install lts\n```\n\n![image-20230530142835262](../FILES/nodejs更新.md/image-20230530142835262.png)\n\n5. 切换nodejs\n\n```sh\nnvm use 18.16.0\n```\n\n","source":"_posts/nodejs更新.md","raw":"---\ntitle: nodejs 更新\ndate: \nupdated: \ntags: nodejs\ncategories: 前端\ncover: https://s1.ax1x.com/2023/06/20/pC83wcj.png\n---\n\n# nodejs 更新\n\n1. 查看版本\n\n```sh\nnode -v\n```\n\n![image-20230530140912644](../FILES/nodejs更新.md/image-20230530140912644.png)\n\n2. 清除npm缓存\n\n```sh\nnpm cache verify\n```\n\n![image-20230530141003682](../FILES/nodejs更新.md/image-20230530141003682.png)\n\n3. 安装 nvm \n\n> 专门用来管理版本\n\n下载地址：[Releases · coreybutler/nvm-windows (github.com)](https://github.com/coreybutler/nvm-windows/releases)\n\n![image-20230530142308794](../FILES/nodejs更新.md/image-20230530142308794.png)\n\n下载 nvm-setup.zip 文件，接着直接下一步...\n\n安装成功后，输入命令\n\n```sh\nnvm --version\n```\n\n![image-20230530142403267](../FILES/nodejs更新.md/image-20230530142403267.png)\n\n4. 安装新版 nodejs\n\n```sh\nnvm install lts\n```\n\n![image-20230530142835262](../FILES/nodejs更新.md/image-20230530142835262.png)\n\n5. 切换nodejs\n\n```sh\nnvm use 18.16.0\n```\n\n","slug":"nodejs更新","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmos001v1kv2bbexd72c","content":"<h1 id=\"nodejs-更新\"><a href=\"#nodejs-更新\" class=\"headerlink\" title=\"nodejs 更新\"></a>nodejs 更新</h1><ol>\n<li>查看版本</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/nodejs%E6%9B%B4%E6%96%B0.md/image-20230530140912644.png\" alt=\"image-20230530140912644\"></p>\n<ol start=\"2\">\n<li>清除npm缓存</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm cache verify</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/nodejs%E6%9B%B4%E6%96%B0.md/image-20230530141003682.png\" alt=\"image-20230530141003682\"></p>\n<ol start=\"3\">\n<li>安装 nvm</li>\n</ol>\n<blockquote>\n<p>专门用来管理版本</p>\n</blockquote>\n<p>下载地址：<a href=\"https://github.com/coreybutler/nvm-windows/releases\">Releases · coreybutler&#x2F;nvm-windows (github.com)</a></p>\n<p><img src=\"/lingtan/../FILES/nodejs%E6%9B%B4%E6%96%B0.md/image-20230530142308794.png\" alt=\"image-20230530142308794\"></p>\n<p>下载 nvm-setup.zip 文件，接着直接下一步…</p>\n<p>安装成功后，输入命令</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm --version</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/nodejs%E6%9B%B4%E6%96%B0.md/image-20230530142403267.png\" alt=\"image-20230530142403267\"></p>\n<ol start=\"4\">\n<li>安装新版 nodejs</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install lts</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/nodejs%E6%9B%B4%E6%96%B0.md/image-20230530142835262.png\" alt=\"image-20230530142835262\"></p>\n<ol start=\"5\">\n<li>切换nodejs</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm use 18.16.0</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"nodejs-更新\"><a href=\"#nodejs-更新\" class=\"headerlink\" title=\"nodejs 更新\"></a>nodejs 更新</h1><ol>\n<li>查看版本</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/nodejs%E6%9B%B4%E6%96%B0.md/image-20230530140912644.png\" alt=\"image-20230530140912644\"></p>\n<ol start=\"2\">\n<li>清除npm缓存</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm cache verify</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/nodejs%E6%9B%B4%E6%96%B0.md/image-20230530141003682.png\" alt=\"image-20230530141003682\"></p>\n<ol start=\"3\">\n<li>安装 nvm</li>\n</ol>\n<blockquote>\n<p>专门用来管理版本</p>\n</blockquote>\n<p>下载地址：<a href=\"https://github.com/coreybutler/nvm-windows/releases\">Releases · coreybutler&#x2F;nvm-windows (github.com)</a></p>\n<p><img src=\"/lingtan/../FILES/nodejs%E6%9B%B4%E6%96%B0.md/image-20230530142308794.png\" alt=\"image-20230530142308794\"></p>\n<p>下载 nvm-setup.zip 文件，接着直接下一步…</p>\n<p>安装成功后，输入命令</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm --version</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/nodejs%E6%9B%B4%E6%96%B0.md/image-20230530142403267.png\" alt=\"image-20230530142403267\"></p>\n<ol start=\"4\">\n<li>安装新版 nodejs</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install lts</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/nodejs%E6%9B%B4%E6%96%B0.md/image-20230530142835262.png\" alt=\"image-20230530142835262\"></p>\n<ol start=\"5\">\n<li>切换nodejs</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm use 18.16.0</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Nginx","date":"2024-03-05T07:14:41.905Z","updated":"2024-03-05T07:14:06.304Z","cover":"https://nginx.org/nginx.png","_content":"\n{% note success no-icon %}\n\n参考文章：\n\n1. [Nginx配置文件详解 - 程序员自由之路 - 博客园 (cnblogs.com)](https://www.cnblogs.com/54chensongxia/p/12938929.html)\n2. [Nginx快速入门-KuangStudy-文章](https://www.kuangstudy.com/bbs/1353634800149213186)\n\n{% endnote %}\n\n# 三层架构\n\n三层结构：（具体以下图为例）\n\n- 全局块\n- event 块\n- http 块\n  - http 全局块\n  - 多个 server 块\n    - server 全局块\n    - 多个 location 块\n\n![image-20230719131053170](../FILES/nginx.md/image-20230719131053170.png)\n\n基本配置如下：\n\n```nginx\nworker_processes  1;\n\n#...\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n  \n  #...\n  \n  # 可以包含多个服务\n  server {\n    \n    #...\n    \n    listen 80; # 监听80端口\n    server_name localhost; # 监听主机地址\n    \n    # 可以包含多个地址\n    localtion / {\n      root html;\n      index index.html index.htm;\n    }\n  }\n}\n```\n\n# Listen\n\nserver块中最重要的指令就是listen指令，这个指令有三种配置语法。这个指令默认的配置值是：`listen *:80 | *:8000；`只能在server块种配置这个指令。\n\n1. 监听某个ip地址\n2. 监听某个端口（{% label 建议 blue %}）\n3. 其他（无需多加关注）\n\n```nginx\n//第一种\nlisten address[:port] [default_server] [ssl] [http2 | spdy] [proxy_protocol] [setfib=number] [fastopen=number] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [ipv6only=on|off] [reuseport] [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];\n\n//第二种 \nlisten port [default_server] [ssl] [http2 | spdy] [proxy_protocol] [setfib=number] [fastopen=number] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [ipv6only=on|off] [reuseport] [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];\n\n//第三种（可以不用重点关注）\nlisten unix:path [default_server] [ssl] [http2 | spdy] [proxy_protocol] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];\n```\n\n> 拓展：可以简单了解server_name，它可以准确匹配、通配符（前后）以及正则匹配。\n\n# location\n\n在 nginx 官方定义：\n\n```nginx\nlocation [ = | ~ | ~* | ^~ ] uri { ... }\n```\n\n小技巧：可以将 nginx 的 location 想象成 `window.location` 去除 `host` 的部分。\n\n","source":"_posts/nginx.md","raw":"---\ntitle: Nginx\ndate: \nupdated: \ntags: 代理\ncategories: linux\ncover: https://nginx.org/nginx.png  \n---\n\n{% note success no-icon %}\n\n参考文章：\n\n1. [Nginx配置文件详解 - 程序员自由之路 - 博客园 (cnblogs.com)](https://www.cnblogs.com/54chensongxia/p/12938929.html)\n2. [Nginx快速入门-KuangStudy-文章](https://www.kuangstudy.com/bbs/1353634800149213186)\n\n{% endnote %}\n\n# 三层架构\n\n三层结构：（具体以下图为例）\n\n- 全局块\n- event 块\n- http 块\n  - http 全局块\n  - 多个 server 块\n    - server 全局块\n    - 多个 location 块\n\n![image-20230719131053170](../FILES/nginx.md/image-20230719131053170.png)\n\n基本配置如下：\n\n```nginx\nworker_processes  1;\n\n#...\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n  \n  #...\n  \n  # 可以包含多个服务\n  server {\n    \n    #...\n    \n    listen 80; # 监听80端口\n    server_name localhost; # 监听主机地址\n    \n    # 可以包含多个地址\n    localtion / {\n      root html;\n      index index.html index.htm;\n    }\n  }\n}\n```\n\n# Listen\n\nserver块中最重要的指令就是listen指令，这个指令有三种配置语法。这个指令默认的配置值是：`listen *:80 | *:8000；`只能在server块种配置这个指令。\n\n1. 监听某个ip地址\n2. 监听某个端口（{% label 建议 blue %}）\n3. 其他（无需多加关注）\n\n```nginx\n//第一种\nlisten address[:port] [default_server] [ssl] [http2 | spdy] [proxy_protocol] [setfib=number] [fastopen=number] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [ipv6only=on|off] [reuseport] [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];\n\n//第二种 \nlisten port [default_server] [ssl] [http2 | spdy] [proxy_protocol] [setfib=number] [fastopen=number] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [ipv6only=on|off] [reuseport] [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];\n\n//第三种（可以不用重点关注）\nlisten unix:path [default_server] [ssl] [http2 | spdy] [proxy_protocol] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];\n```\n\n> 拓展：可以简单了解server_name，它可以准确匹配、通配符（前后）以及正则匹配。\n\n# location\n\n在 nginx 官方定义：\n\n```nginx\nlocation [ = | ~ | ~* | ^~ ] uri { ... }\n```\n\n小技巧：可以将 nginx 的 location 想象成 `window.location` 去除 `host` 的部分。\n\n","slug":"nginx","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmos001x1kv22rsjdqfk","content":"<div class=\"note success no-icon flat\"><p>参考文章：</p>\n<ol>\n<li><a href=\"https://www.cnblogs.com/54chensongxia/p/12938929.html\">Nginx配置文件详解 - 程序员自由之路 - 博客园 (cnblogs.com)</a></li>\n<li><a href=\"https://www.kuangstudy.com/bbs/1353634800149213186\">Nginx快速入门-KuangStudy-文章</a></li>\n</ol>\n</div>\n\n<h1 id=\"三层架构\"><a href=\"#三层架构\" class=\"headerlink\" title=\"三层架构\"></a>三层架构</h1><p>三层结构：（具体以下图为例）</p>\n<ul>\n<li>全局块</li>\n<li>event 块</li>\n<li>http 块<ul>\n<li>http 全局块</li>\n<li>多个 server 块<ul>\n<li>server 全局块</li>\n<li>多个 location 块</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/lingtan/../FILES/nginx.md/image-20230719131053170.png\" alt=\"image-20230719131053170\"></p>\n<p>基本配置如下：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">worker_processes</span>  <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">events</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">worker_connections</span>  <span class=\"number\">1024</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">#...</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 可以包含多个服务</span></span><br><span class=\"line\">  <span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#...</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>; <span class=\"comment\"># 监听80端口</span></span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> localhost; <span class=\"comment\"># 监听主机地址</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 可以包含多个地址</span></span><br><span class=\"line\">    <span class=\"attribute\">localtion</span> / &#123;</span><br><span class=\"line\">      <span class=\"attribute\">root</span> html;</span><br><span class=\"line\">      <span class=\"attribute\">index</span> index.html index.htm;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Listen\"><a href=\"#Listen\" class=\"headerlink\" title=\"Listen\"></a>Listen</h1><p>server块中最重要的指令就是listen指令，这个指令有三种配置语法。这个指令默认的配置值是：<code>listen *:80 | *:8000；</code>只能在server块种配置这个指令。</p>\n<ol>\n<li>监听某个ip地址</li>\n<li>监听某个端口（<mark class=\"hl-label blue\">建议</mark> ）</li>\n<li>其他（无需多加关注）</li>\n</ol>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//第一种</span><br><span class=\"line\"><span class=\"attribute\">listen</span> address[:port] [default_server] [ssl] [http2 | spdy] [proxy_protocol] [setfib=number] [fastopen=number] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [ipv6only=<span class=\"literal\">on</span>|<span class=\"literal\">off</span>] [reuseport] [so_keepalive=<span class=\"literal\">on</span>|<span class=\"literal\">off</span>|[keepidle]:[keepintvl]:[keepcnt]];</span><br><span class=\"line\"></span><br><span class=\"line\">//第二种 </span><br><span class=\"line\"><span class=\"attribute\">listen</span> port [default_server] [ssl] [http2 | spdy] [proxy_protocol] [setfib=number] [fastopen=number] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [ipv6only=<span class=\"literal\">on</span>|<span class=\"literal\">off</span>] [reuseport] [so_keepalive=<span class=\"literal\">on</span>|<span class=\"literal\">off</span>|[keepidle]:[keepintvl]:[keepcnt]];</span><br><span class=\"line\"></span><br><span class=\"line\">//第三种（可以不用重点关注）</span><br><span class=\"line\"><span class=\"attribute\">listen</span> unix:path [default_server] [ssl] [http2 | spdy] [proxy_protocol] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [so_keepalive=<span class=\"literal\">on</span>|<span class=\"literal\">off</span>|[keepidle]:[keepintvl]:[keepcnt]];</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>拓展：可以简单了解server_name，它可以准确匹配、通配符（前后）以及正则匹配。</p>\n</blockquote>\n<h1 id=\"location\"><a href=\"#location\" class=\"headerlink\" title=\"location\"></a>location</h1><p>在 nginx 官方定义：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">location</span> [ = | <span class=\"regexp\">~ |</span> <span class=\"regexp\">~* |</span><span class=\"regexp\"> ^~</span> ] uri &#123; ... &#125;</span><br></pre></td></tr></table></figure>\n\n<p>小技巧：可以将 nginx 的 location 想象成 <code>window.location</code> 去除 <code>host</code> 的部分。</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<div class=\"note success no-icon flat\"><p>参考文章：</p>\n<ol>\n<li><a href=\"https://www.cnblogs.com/54chensongxia/p/12938929.html\">Nginx配置文件详解 - 程序员自由之路 - 博客园 (cnblogs.com)</a></li>\n<li><a href=\"https://www.kuangstudy.com/bbs/1353634800149213186\">Nginx快速入门-KuangStudy-文章</a></li>\n</ol>\n</div>\n\n<h1 id=\"三层架构\"><a href=\"#三层架构\" class=\"headerlink\" title=\"三层架构\"></a>三层架构</h1><p>三层结构：（具体以下图为例）</p>\n<ul>\n<li>全局块</li>\n<li>event 块</li>\n<li>http 块<ul>\n<li>http 全局块</li>\n<li>多个 server 块<ul>\n<li>server 全局块</li>\n<li>多个 location 块</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/lingtan/../FILES/nginx.md/image-20230719131053170.png\" alt=\"image-20230719131053170\"></p>\n<p>基本配置如下：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">worker_processes</span>  <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">events</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">worker_connections</span>  <span class=\"number\">1024</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">#...</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 可以包含多个服务</span></span><br><span class=\"line\">  <span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#...</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>; <span class=\"comment\"># 监听80端口</span></span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> localhost; <span class=\"comment\"># 监听主机地址</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 可以包含多个地址</span></span><br><span class=\"line\">    <span class=\"attribute\">localtion</span> / &#123;</span><br><span class=\"line\">      <span class=\"attribute\">root</span> html;</span><br><span class=\"line\">      <span class=\"attribute\">index</span> index.html index.htm;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Listen\"><a href=\"#Listen\" class=\"headerlink\" title=\"Listen\"></a>Listen</h1><p>server块中最重要的指令就是listen指令，这个指令有三种配置语法。这个指令默认的配置值是：<code>listen *:80 | *:8000；</code>只能在server块种配置这个指令。</p>\n<ol>\n<li>监听某个ip地址</li>\n<li>监听某个端口（<mark class=\"hl-label blue\">建议</mark> ）</li>\n<li>其他（无需多加关注）</li>\n</ol>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//第一种</span><br><span class=\"line\"><span class=\"attribute\">listen</span> address[:port] [default_server] [ssl] [http2 | spdy] [proxy_protocol] [setfib=number] [fastopen=number] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [ipv6only=<span class=\"literal\">on</span>|<span class=\"literal\">off</span>] [reuseport] [so_keepalive=<span class=\"literal\">on</span>|<span class=\"literal\">off</span>|[keepidle]:[keepintvl]:[keepcnt]];</span><br><span class=\"line\"></span><br><span class=\"line\">//第二种 </span><br><span class=\"line\"><span class=\"attribute\">listen</span> port [default_server] [ssl] [http2 | spdy] [proxy_protocol] [setfib=number] [fastopen=number] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [ipv6only=<span class=\"literal\">on</span>|<span class=\"literal\">off</span>] [reuseport] [so_keepalive=<span class=\"literal\">on</span>|<span class=\"literal\">off</span>|[keepidle]:[keepintvl]:[keepcnt]];</span><br><span class=\"line\"></span><br><span class=\"line\">//第三种（可以不用重点关注）</span><br><span class=\"line\"><span class=\"attribute\">listen</span> unix:path [default_server] [ssl] [http2 | spdy] [proxy_protocol] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [so_keepalive=<span class=\"literal\">on</span>|<span class=\"literal\">off</span>|[keepidle]:[keepintvl]:[keepcnt]];</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>拓展：可以简单了解server_name，它可以准确匹配、通配符（前后）以及正则匹配。</p>\n</blockquote>\n<h1 id=\"location\"><a href=\"#location\" class=\"headerlink\" title=\"location\"></a>location</h1><p>在 nginx 官方定义：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">location</span> [ = | <span class=\"regexp\">~ |</span> <span class=\"regexp\">~* |</span><span class=\"regexp\"> ^~</span> ] uri &#123; ... &#125;</span><br></pre></td></tr></table></figure>\n\n<p>小技巧：可以将 nginx 的 location 想象成 <code>window.location</code> 去除 <code>host</code> 的部分。</p>\n"},{"title":"react 基础","date":"2024-03-05T07:14:41.917Z","updated":"2024-03-05T07:14:06.308Z","cover":"https://s1.ax1x.com/2023/06/20/pC8kAgS.png","_content":"\n# react hook 函数\n\n## useCallback\n\n- 基本使用：\n\n```typescript\nconst cachedFn = useCallback(fn, dependencies)\n```\n\n- 理解：\n\n\t只有在其中一个依赖项发生更改时才会更改。这在将回调传递给依赖引用相等性的优化子组件以防止不必要的渲染。\n\n> 对于 react 来说，只有状态发生了改变，就会重新渲染该组件。为了避免重新渲染，我们应该用 <span style=\"background-color: yellow\"> useCallback </span> 函数进行包起来。\n\n- 应用场景：\n\n保证每次组件不会重新渲染，只有依赖项改变时，才会重新渲染。\n\n例子：\n\n```typescript\n// hook 函数\nconst [detail, setDetail] = useState([])\nconst [detailLoading, setDetailLoading] = useState(false)\n\nconst getDetail = useCallback(() => {\n  // 写具体内容\n  // detail 改变时\n  detail = ['1']\n  // detailLoading\n  detailLoading = false;\n}, [detail, detailLoading])\n```\n\n- <strong style=\"color: red\">注意：</strong>\n  - useCallback 仍然属于 hook，必须写在组件内\n  - 依赖项必须明确，不能直接写`[]` , 这时跟没写 useCallback 一样。\n\n## useMemo, useCallback, useEffect 三者区别\n\n### useEffect 和 useMemo 区别\n\n> 参考链接: [useMemo, useCallback, useEffect 三者区别 - 掘金 (juejin.cn)](https://juejin.cn/post/7008433550307360798)\n\n- useEffect是在<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\"> DOM改变之后触发</span>，useMemo在<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">DOM渲染之前就触发</span>\n- useMemo是在<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">DOM更新前触发的</span>，就像官方所说的，类比生命周期就是[shouldComponentUpdate]\n- useEffect可以帮助我们在<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">DOM更新完成后执行某些副作用操作</span>，如数据获取，设置订阅以及手动更改 React 组件中的 DOM 等\n- 不要在这个useMemo函数内部<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">执行与渲染无关的操作</span>，诸如<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">副作用这类的操作属于 useEffect 的适用范畴</span>，而不是 useMemo\n- 在useMemo中使用<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">setState你会发现会产生死循环</span>，并且会有警告，因为useMemo是<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">在渲染中进行的</span>，你在其中操作<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">DOM</span>后，又会导致触发<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">memo</span>\n\n### useCallback 和 useMemo 区别\n\n- 类似 <span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">shouldComponentUpdate</span>， 判定该组件的 props 和 state 是否有变化，从而避免每次父组件render时都去重新渲染子组件\n- <span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">useCallback返回一个函数</span>，当把它返回的这个函数作为子组件使用时，可以避免每次父组件更新时都重新渲染这个子组件,子组件一般配合 <span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">memo</span> 使用\n","source":"_posts/react.md","raw":"---\ntitle: react 基础\ndate: \nupdated:\ntags: react\ncategories: 前端\ncover: https://s1.ax1x.com/2023/06/20/pC8kAgS.png\n---\n\n# react hook 函数\n\n## useCallback\n\n- 基本使用：\n\n```typescript\nconst cachedFn = useCallback(fn, dependencies)\n```\n\n- 理解：\n\n\t只有在其中一个依赖项发生更改时才会更改。这在将回调传递给依赖引用相等性的优化子组件以防止不必要的渲染。\n\n> 对于 react 来说，只有状态发生了改变，就会重新渲染该组件。为了避免重新渲染，我们应该用 <span style=\"background-color: yellow\"> useCallback </span> 函数进行包起来。\n\n- 应用场景：\n\n保证每次组件不会重新渲染，只有依赖项改变时，才会重新渲染。\n\n例子：\n\n```typescript\n// hook 函数\nconst [detail, setDetail] = useState([])\nconst [detailLoading, setDetailLoading] = useState(false)\n\nconst getDetail = useCallback(() => {\n  // 写具体内容\n  // detail 改变时\n  detail = ['1']\n  // detailLoading\n  detailLoading = false;\n}, [detail, detailLoading])\n```\n\n- <strong style=\"color: red\">注意：</strong>\n  - useCallback 仍然属于 hook，必须写在组件内\n  - 依赖项必须明确，不能直接写`[]` , 这时跟没写 useCallback 一样。\n\n## useMemo, useCallback, useEffect 三者区别\n\n### useEffect 和 useMemo 区别\n\n> 参考链接: [useMemo, useCallback, useEffect 三者区别 - 掘金 (juejin.cn)](https://juejin.cn/post/7008433550307360798)\n\n- useEffect是在<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\"> DOM改变之后触发</span>，useMemo在<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">DOM渲染之前就触发</span>\n- useMemo是在<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">DOM更新前触发的</span>，就像官方所说的，类比生命周期就是[shouldComponentUpdate]\n- useEffect可以帮助我们在<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">DOM更新完成后执行某些副作用操作</span>，如数据获取，设置订阅以及手动更改 React 组件中的 DOM 等\n- 不要在这个useMemo函数内部<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">执行与渲染无关的操作</span>，诸如<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">副作用这类的操作属于 useEffect 的适用范畴</span>，而不是 useMemo\n- 在useMemo中使用<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">setState你会发现会产生死循环</span>，并且会有警告，因为useMemo是<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">在渲染中进行的</span>，你在其中操作<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">DOM</span>后，又会导致触发<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">memo</span>\n\n### useCallback 和 useMemo 区别\n\n- 类似 <span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">shouldComponentUpdate</span>， 判定该组件的 props 和 state 是否有变化，从而避免每次父组件render时都去重新渲染子组件\n- <span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">useCallback返回一个函数</span>，当把它返回的这个函数作为子组件使用时，可以避免每次父组件更新时都重新渲染这个子组件,子组件一般配合 <span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">memo</span> 使用\n","slug":"react","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmot00211kv2hy4ta0wx","content":"<h1 id=\"react-hook-函数\"><a href=\"#react-hook-函数\" class=\"headerlink\" title=\"react hook 函数\"></a>react hook 函数</h1><h2 id=\"useCallback\"><a href=\"#useCallback\" class=\"headerlink\" title=\"useCallback\"></a>useCallback</h2><ul>\n<li>基本使用：</li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> cachedFn = <span class=\"title function_\">useCallback</span>(fn, dependencies)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>理解：</p>\n<p>  只有在其中一个依赖项发生更改时才会更改。这在将回调传递给依赖引用相等性的优化子组件以防止不必要的渲染。</p>\n</li>\n</ul>\n<blockquote>\n<p>对于 react 来说，只有状态发生了改变，就会重新渲染该组件。为了避免重新渲染，我们应该用 <span style=\"background-color: yellow\"> useCallback </span> 函数进行包起来。</p>\n</blockquote>\n<ul>\n<li>应用场景：</li>\n</ul>\n<p>保证每次组件不会重新渲染，只有依赖项改变时，才会重新渲染。</p>\n<p>例子：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// hook 函数</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> [detail, setDetail] = <span class=\"title function_\">useState</span>([])</span><br><span class=\"line\"><span class=\"keyword\">const</span> [detailLoading, setDetailLoading] = <span class=\"title function_\">useState</span>(<span class=\"literal\">false</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> getDetail = <span class=\"title function_\">useCallback</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 写具体内容</span></span><br><span class=\"line\">  <span class=\"comment\">// detail 改变时</span></span><br><span class=\"line\">  detail = [<span class=\"string\">&#x27;1&#x27;</span>]</span><br><span class=\"line\">  <span class=\"comment\">// detailLoading</span></span><br><span class=\"line\">  detailLoading = <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;, [detail, detailLoading])</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong style=\"color: red\">注意：</strong><ul>\n<li>useCallback 仍然属于 hook，必须写在组件内</li>\n<li>依赖项必须明确，不能直接写<code>[]</code> , 这时跟没写 useCallback 一样。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"useMemo-useCallback-useEffect-三者区别\"><a href=\"#useMemo-useCallback-useEffect-三者区别\" class=\"headerlink\" title=\"useMemo, useCallback, useEffect 三者区别\"></a>useMemo, useCallback, useEffect 三者区别</h2><h3 id=\"useEffect-和-useMemo-区别\"><a href=\"#useEffect-和-useMemo-区别\" class=\"headerlink\" title=\"useEffect 和 useMemo 区别\"></a>useEffect 和 useMemo 区别</h3><blockquote>\n<p>参考链接: <a href=\"https://juejin.cn/post/7008433550307360798\">useMemo, useCallback, useEffect 三者区别 - 掘金 (juejin.cn)</a></p>\n</blockquote>\n<ul>\n<li>useEffect是在<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\"> DOM改变之后触发</span>，useMemo在<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">DOM渲染之前就触发</span></li>\n<li>useMemo是在<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">DOM更新前触发的</span>，就像官方所说的，类比生命周期就是[shouldComponentUpdate]</li>\n<li>useEffect可以帮助我们在<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">DOM更新完成后执行某些副作用操作</span>，如数据获取，设置订阅以及手动更改 React 组件中的 DOM 等</li>\n<li>不要在这个useMemo函数内部<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">执行与渲染无关的操作</span>，诸如<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">副作用这类的操作属于 useEffect 的适用范畴</span>，而不是 useMemo</li>\n<li>在useMemo中使用<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">setState你会发现会产生死循环</span>，并且会有警告，因为useMemo是<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">在渲染中进行的</span>，你在其中操作<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">DOM</span>后，又会导致触发<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">memo</span></li>\n</ul>\n<h3 id=\"useCallback-和-useMemo-区别\"><a href=\"#useCallback-和-useMemo-区别\" class=\"headerlink\" title=\"useCallback 和 useMemo 区别\"></a>useCallback 和 useMemo 区别</h3><ul>\n<li>类似 <span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">shouldComponentUpdate</span>， 判定该组件的 props 和 state 是否有变化，从而避免每次父组件render时都去重新渲染子组件</li>\n<li><span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">useCallback返回一个函数</span>，当把它返回的这个函数作为子组件使用时，可以避免每次父组件更新时都重新渲染这个子组件,子组件一般配合 <span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">memo</span> 使用</li>\n</ul>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"react-hook-函数\"><a href=\"#react-hook-函数\" class=\"headerlink\" title=\"react hook 函数\"></a>react hook 函数</h1><h2 id=\"useCallback\"><a href=\"#useCallback\" class=\"headerlink\" title=\"useCallback\"></a>useCallback</h2><ul>\n<li>基本使用：</li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> cachedFn = <span class=\"title function_\">useCallback</span>(fn, dependencies)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>理解：</p>\n<p>  只有在其中一个依赖项发生更改时才会更改。这在将回调传递给依赖引用相等性的优化子组件以防止不必要的渲染。</p>\n</li>\n</ul>\n<blockquote>\n<p>对于 react 来说，只有状态发生了改变，就会重新渲染该组件。为了避免重新渲染，我们应该用 <span style=\"background-color: yellow\"> useCallback </span> 函数进行包起来。</p>\n</blockquote>\n<ul>\n<li>应用场景：</li>\n</ul>\n<p>保证每次组件不会重新渲染，只有依赖项改变时，才会重新渲染。</p>\n<p>例子：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// hook 函数</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> [detail, setDetail] = <span class=\"title function_\">useState</span>([])</span><br><span class=\"line\"><span class=\"keyword\">const</span> [detailLoading, setDetailLoading] = <span class=\"title function_\">useState</span>(<span class=\"literal\">false</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> getDetail = <span class=\"title function_\">useCallback</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 写具体内容</span></span><br><span class=\"line\">  <span class=\"comment\">// detail 改变时</span></span><br><span class=\"line\">  detail = [<span class=\"string\">&#x27;1&#x27;</span>]</span><br><span class=\"line\">  <span class=\"comment\">// detailLoading</span></span><br><span class=\"line\">  detailLoading = <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;, [detail, detailLoading])</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong style=\"color: red\">注意：</strong><ul>\n<li>useCallback 仍然属于 hook，必须写在组件内</li>\n<li>依赖项必须明确，不能直接写<code>[]</code> , 这时跟没写 useCallback 一样。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"useMemo-useCallback-useEffect-三者区别\"><a href=\"#useMemo-useCallback-useEffect-三者区别\" class=\"headerlink\" title=\"useMemo, useCallback, useEffect 三者区别\"></a>useMemo, useCallback, useEffect 三者区别</h2><h3 id=\"useEffect-和-useMemo-区别\"><a href=\"#useEffect-和-useMemo-区别\" class=\"headerlink\" title=\"useEffect 和 useMemo 区别\"></a>useEffect 和 useMemo 区别</h3><blockquote>\n<p>参考链接: <a href=\"https://juejin.cn/post/7008433550307360798\">useMemo, useCallback, useEffect 三者区别 - 掘金 (juejin.cn)</a></p>\n</blockquote>\n<ul>\n<li>useEffect是在<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\"> DOM改变之后触发</span>，useMemo在<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">DOM渲染之前就触发</span></li>\n<li>useMemo是在<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">DOM更新前触发的</span>，就像官方所说的，类比生命周期就是[shouldComponentUpdate]</li>\n<li>useEffect可以帮助我们在<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">DOM更新完成后执行某些副作用操作</span>，如数据获取，设置订阅以及手动更改 React 组件中的 DOM 等</li>\n<li>不要在这个useMemo函数内部<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">执行与渲染无关的操作</span>，诸如<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">副作用这类的操作属于 useEffect 的适用范畴</span>，而不是 useMemo</li>\n<li>在useMemo中使用<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">setState你会发现会产生死循环</span>，并且会有警告，因为useMemo是<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">在渲染中进行的</span>，你在其中操作<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">DOM</span>后，又会导致触发<span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">memo</span></li>\n</ul>\n<h3 id=\"useCallback-和-useMemo-区别\"><a href=\"#useCallback-和-useMemo-区别\" class=\"headerlink\" title=\"useCallback 和 useMemo 区别\"></a>useCallback 和 useMemo 区别</h3><ul>\n<li>类似 <span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">shouldComponentUpdate</span>， 判定该组件的 props 和 state 是否有变化，从而避免每次父组件render时都去重新渲染子组件</li>\n<li><span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">useCallback返回一个函数</span>，当把它返回的这个函数作为子组件使用时，可以避免每次父组件更新时都重新渲染这个子组件,子组件一般配合 <span style=\"background-color: #fff5f5;color: #ff502c;font-size: 14px\">memo</span> 使用</li>\n</ul>\n"},{"title":"nvm","date":"2024-03-05T07:14:41.912Z","updated":"2024-03-05T07:14:06.304Z","cover":"./images/nvm.jpg","_content":"\n# nvm\n\n## Linux 下载\n\nDeepin 开启系统代理，开启 Qv2ray\n\n```bash\nwget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash\n```\n\n下载后，自动添加到环境变量。\n\n环境变量位置：`~\\.bashrc`\n\n安装目录：`~\\.config\\nvm`\n\n## 使用\n\n新打开一个终端\n\n查看版本：\n\n```bash\nnvm --version\n```\n\n安装 lts 版本：\n\n```bash\nnvm install --lts\n```\n\n![Img](../FILES/nvm.md/img-20230617144018.png)\n\n查看当前使用的 node\n\n```bash\nnvm current\n```\n\n---\n\n## Windows 卸载\n\n{% note success no-icon %}\n\n首先卸载 nodejs\n\n- 控制面板删除\n- 环境变量删除\n- 安装目录删除（`where node`）\n- 家目录有关 nodejs 删除\n- %AppData% 文件夹里面 nodejs 删除\n\n先去 github 下载 nvm\n\n双击可执行文件 nvm-setup.exe\n\n{%  endnote %}\n\n## Windows 下载\n\n1. 打开 nvm 安装目录\n\n![image-20230530151512400](../FILES/nvm.md/image-20230530151512400.png)\n\n打开 settings.txt 文件，加入以下信息：\n\n```txt\nroot: D:\\software\\nvm-1.1.11\npath: D:\\Program Files\\nodejs\nnode_mirror: https://npmmirror.com/mirrors/node/\nnpm_mirror: https://registry.npmmirror.com/binary.html?path=npm/\n```\n\n在 {% label cmd %} 安装 nodejs\n\n```cmd\nnvm install lts\n```\n\n在 cmd 中使用 nodejs\n\n```cmd\nnvm use ${版本号}\n```\n\n查看版本，是否安装完成\n\n![image-20230530151726867](../FILES/nvm.md/image-20230530151726867.png)\n","source":"_posts/nvm.md","raw":"---\ntitle: nvm\ndate: \nupdated:\ntags: nvm\ncategories: 前端\ncover: ./images/nvm.jpg\n---\n\n# nvm\n\n## Linux 下载\n\nDeepin 开启系统代理，开启 Qv2ray\n\n```bash\nwget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash\n```\n\n下载后，自动添加到环境变量。\n\n环境变量位置：`~\\.bashrc`\n\n安装目录：`~\\.config\\nvm`\n\n## 使用\n\n新打开一个终端\n\n查看版本：\n\n```bash\nnvm --version\n```\n\n安装 lts 版本：\n\n```bash\nnvm install --lts\n```\n\n![Img](../FILES/nvm.md/img-20230617144018.png)\n\n查看当前使用的 node\n\n```bash\nnvm current\n```\n\n---\n\n## Windows 卸载\n\n{% note success no-icon %}\n\n首先卸载 nodejs\n\n- 控制面板删除\n- 环境变量删除\n- 安装目录删除（`where node`）\n- 家目录有关 nodejs 删除\n- %AppData% 文件夹里面 nodejs 删除\n\n先去 github 下载 nvm\n\n双击可执行文件 nvm-setup.exe\n\n{%  endnote %}\n\n## Windows 下载\n\n1. 打开 nvm 安装目录\n\n![image-20230530151512400](../FILES/nvm.md/image-20230530151512400.png)\n\n打开 settings.txt 文件，加入以下信息：\n\n```txt\nroot: D:\\software\\nvm-1.1.11\npath: D:\\Program Files\\nodejs\nnode_mirror: https://npmmirror.com/mirrors/node/\nnpm_mirror: https://registry.npmmirror.com/binary.html?path=npm/\n```\n\n在 {% label cmd %} 安装 nodejs\n\n```cmd\nnvm install lts\n```\n\n在 cmd 中使用 nodejs\n\n```cmd\nnvm use ${版本号}\n```\n\n查看版本，是否安装完成\n\n![image-20230530151726867](../FILES/nvm.md/image-20230530151726867.png)\n","slug":"nvm","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmot00231kv2fjhkevhk","content":"<h1 id=\"nvm\"><a href=\"#nvm\" class=\"headerlink\" title=\"nvm\"></a>nvm</h1><h2 id=\"Linux-下载\"><a href=\"#Linux-下载\" class=\"headerlink\" title=\"Linux 下载\"></a>Linux 下载</h2><p>Deepin 开启系统代理，开启 Qv2ray</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash</span><br></pre></td></tr></table></figure>\n\n<p>下载后，自动添加到环境变量。</p>\n<p>环境变量位置：<code>~\\.bashrc</code></p>\n<p>安装目录：<code>~\\.config\\nvm</code></p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>新打开一个终端</p>\n<p>查看版本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm --version</span><br></pre></td></tr></table></figure>\n\n<p>安装 lts 版本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install --lts</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/nvm.md/img-20230617144018.png\" alt=\"Img\"></p>\n<p>查看当前使用的 node</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm current</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"Windows-卸载\"><a href=\"#Windows-卸载\" class=\"headerlink\" title=\"Windows 卸载\"></a>Windows 卸载</h2><div class=\"note success no-icon flat\"><p>首先卸载 nodejs</p>\n<ul>\n<li>控制面板删除</li>\n<li>环境变量删除</li>\n<li>安装目录删除（<code>where node</code>）</li>\n<li>家目录有关 nodejs 删除</li>\n<li>%AppData% 文件夹里面 nodejs 删除</li>\n</ul>\n<p>先去 github 下载 nvm</p>\n<p>双击可执行文件 nvm-setup.exe</p>\n</div>\n\n<h2 id=\"Windows-下载\"><a href=\"#Windows-下载\" class=\"headerlink\" title=\"Windows 下载\"></a>Windows 下载</h2><ol>\n<li>打开 nvm 安装目录</li>\n</ol>\n<p><img src=\"/lingtan/../FILES/nvm.md/image-20230530151512400.png\" alt=\"image-20230530151512400\"></p>\n<p>打开 settings.txt 文件，加入以下信息：</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root: D:\\software\\nvm-1.1.11</span><br><span class=\"line\">path: D:\\Program Files\\nodejs</span><br><span class=\"line\">node_mirror: https://npmmirror.com/mirrors/node/</span><br><span class=\"line\">npm_mirror: https://registry.npmmirror.com/binary.html?path=npm/</span><br></pre></td></tr></table></figure>\n\n<p>在 <mark class=\"hl-label default\">cmd</mark>  安装 nodejs</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install lts</span><br></pre></td></tr></table></figure>\n\n<p>在 cmd 中使用 nodejs</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm use $&#123;版本号&#125;</span><br></pre></td></tr></table></figure>\n\n<p>查看版本，是否安装完成</p>\n<p><img src=\"/lingtan/../FILES/nvm.md/image-20230530151726867.png\" alt=\"image-20230530151726867\"></p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"nvm\"><a href=\"#nvm\" class=\"headerlink\" title=\"nvm\"></a>nvm</h1><h2 id=\"Linux-下载\"><a href=\"#Linux-下载\" class=\"headerlink\" title=\"Linux 下载\"></a>Linux 下载</h2><p>Deepin 开启系统代理，开启 Qv2ray</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash</span><br></pre></td></tr></table></figure>\n\n<p>下载后，自动添加到环境变量。</p>\n<p>环境变量位置：<code>~\\.bashrc</code></p>\n<p>安装目录：<code>~\\.config\\nvm</code></p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>新打开一个终端</p>\n<p>查看版本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm --version</span><br></pre></td></tr></table></figure>\n\n<p>安装 lts 版本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install --lts</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/nvm.md/img-20230617144018.png\" alt=\"Img\"></p>\n<p>查看当前使用的 node</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm current</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"Windows-卸载\"><a href=\"#Windows-卸载\" class=\"headerlink\" title=\"Windows 卸载\"></a>Windows 卸载</h2><div class=\"note success no-icon flat\"><p>首先卸载 nodejs</p>\n<ul>\n<li>控制面板删除</li>\n<li>环境变量删除</li>\n<li>安装目录删除（<code>where node</code>）</li>\n<li>家目录有关 nodejs 删除</li>\n<li>%AppData% 文件夹里面 nodejs 删除</li>\n</ul>\n<p>先去 github 下载 nvm</p>\n<p>双击可执行文件 nvm-setup.exe</p>\n</div>\n\n<h2 id=\"Windows-下载\"><a href=\"#Windows-下载\" class=\"headerlink\" title=\"Windows 下载\"></a>Windows 下载</h2><ol>\n<li>打开 nvm 安装目录</li>\n</ol>\n<p><img src=\"/lingtan/../FILES/nvm.md/image-20230530151512400.png\" alt=\"image-20230530151512400\"></p>\n<p>打开 settings.txt 文件，加入以下信息：</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root: D:\\software\\nvm-1.1.11</span><br><span class=\"line\">path: D:\\Program Files\\nodejs</span><br><span class=\"line\">node_mirror: https://npmmirror.com/mirrors/node/</span><br><span class=\"line\">npm_mirror: https://registry.npmmirror.com/binary.html?path=npm/</span><br></pre></td></tr></table></figure>\n\n<p>在 <mark class=\"hl-label default\">cmd</mark>  安装 nodejs</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install lts</span><br></pre></td></tr></table></figure>\n\n<p>在 cmd 中使用 nodejs</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm use $&#123;版本号&#125;</span><br></pre></td></tr></table></figure>\n\n<p>查看版本，是否安装完成</p>\n<p><img src=\"/lingtan/../FILES/nvm.md/image-20230530151726867.png\" alt=\"image-20230530151726867\"></p>\n"},{"title":"pnpm 安装与使用","date":"2024-03-05T07:14:41.914Z","updated":"2024-03-05T07:14:06.308Z","cover":"https://s1.ax1x.com/2023/06/20/pC8GJfS.png","_content":"\n# pnpm \n\n## pnpm install 和 pnpm add\n\npnpm add 和 pnpm install 命令的本质是相同的，都可以用来安装依赖包。它们的区别在于用法和语法。\n\npnpm add 命令会将要安装的依赖包加入到 package.json 文件的 dependencies 或者 devDependencies 中，并且可以指定包的版本。例如：\n\n```cmd\npnpm add react@16.8.0\n```\n\npnpm install 命令通常用来安装项目中已有的 package.json 文件中的依赖包。如果没有指定包的版本，则会安装最新版本的依赖包。例如：\n\n```cmd\npnpm install\n```\n\n这个命令会安装 package.json 文件中的所有依赖包。\n\n总的来说，pnpm add 命令更加灵活，可以实现指定版本安装，同时更新 package.json 文件。pnpm install 命令更加简洁，适用于快速安装已有的依赖包。\n\n## pnpm 换源与更新\n\n以下出现报错信息：\n\n> ERR_PNPM_REGISTRIES_MISMATCH  This modules directory was created using the following registries configuration: {\"default\":\"https://registry.npm.taobao.org/\"}. The current configuration is {\"default\":\"https://mirrors.cloud.tencent.com/npm/\"}. To recreate the modules directory using the new settings, run \"pnpm install\".\n\n删除项目中的 node_module 文件夹\n\n重新使用命令生成\n\n```cmd\npnpm install \n```\n\n然后再次尝试\n\n```cmd\npnpm add ${依赖名}\n```\n\n","source":"_posts/pnpm说明.md","raw":"---\ntitle: pnpm 安装与使用\ndate: \nupdated:\ntags: 包管理器\ncategories: 前端\ncover: https://s1.ax1x.com/2023/06/20/pC8GJfS.png\n---\n\n# pnpm \n\n## pnpm install 和 pnpm add\n\npnpm add 和 pnpm install 命令的本质是相同的，都可以用来安装依赖包。它们的区别在于用法和语法。\n\npnpm add 命令会将要安装的依赖包加入到 package.json 文件的 dependencies 或者 devDependencies 中，并且可以指定包的版本。例如：\n\n```cmd\npnpm add react@16.8.0\n```\n\npnpm install 命令通常用来安装项目中已有的 package.json 文件中的依赖包。如果没有指定包的版本，则会安装最新版本的依赖包。例如：\n\n```cmd\npnpm install\n```\n\n这个命令会安装 package.json 文件中的所有依赖包。\n\n总的来说，pnpm add 命令更加灵活，可以实现指定版本安装，同时更新 package.json 文件。pnpm install 命令更加简洁，适用于快速安装已有的依赖包。\n\n## pnpm 换源与更新\n\n以下出现报错信息：\n\n> ERR_PNPM_REGISTRIES_MISMATCH  This modules directory was created using the following registries configuration: {\"default\":\"https://registry.npm.taobao.org/\"}. The current configuration is {\"default\":\"https://mirrors.cloud.tencent.com/npm/\"}. To recreate the modules directory using the new settings, run \"pnpm install\".\n\n删除项目中的 node_module 文件夹\n\n重新使用命令生成\n\n```cmd\npnpm install \n```\n\n然后再次尝试\n\n```cmd\npnpm add ${依赖名}\n```\n\n","slug":"pnpm说明","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmou00261kv287f23lul","content":"<h1 id=\"pnpm\"><a href=\"#pnpm\" class=\"headerlink\" title=\"pnpm\"></a>pnpm</h1><h2 id=\"pnpm-install-和-pnpm-add\"><a href=\"#pnpm-install-和-pnpm-add\" class=\"headerlink\" title=\"pnpm install 和 pnpm add\"></a>pnpm install 和 pnpm add</h2><p>pnpm add 和 pnpm install 命令的本质是相同的，都可以用来安装依赖包。它们的区别在于用法和语法。</p>\n<p>pnpm add 命令会将要安装的依赖包加入到 package.json 文件的 dependencies 或者 devDependencies 中，并且可以指定包的版本。例如：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pnpm add react@<span class=\"number\">16</span>.<span class=\"number\">8</span>.<span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<p>pnpm install 命令通常用来安装项目中已有的 package.json 文件中的依赖包。如果没有指定包的版本，则会安装最新版本的依赖包。例如：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pnpm install</span><br></pre></td></tr></table></figure>\n\n<p>这个命令会安装 package.json 文件中的所有依赖包。</p>\n<p>总的来说，pnpm add 命令更加灵活，可以实现指定版本安装，同时更新 package.json 文件。pnpm install 命令更加简洁，适用于快速安装已有的依赖包。</p>\n<h2 id=\"pnpm-换源与更新\"><a href=\"#pnpm-换源与更新\" class=\"headerlink\" title=\"pnpm 换源与更新\"></a>pnpm 换源与更新</h2><p>以下出现报错信息：</p>\n<blockquote>\n<p>ERR_PNPM_REGISTRIES_MISMATCH  This modules directory was created using the following registries configuration: {“default”:”<a href=\"https://registry.npm.taobao.org/%22%7D\">https://registry.npm.taobao.org/&quot;}</a>. The current configuration is {“default”:”<a href=\"https://mirrors.cloud.tencent.com/npm/%22%7D\">https://mirrors.cloud.tencent.com/npm/&quot;}</a>. To recreate the modules directory using the new settings, run “pnpm install”.</p>\n</blockquote>\n<p>删除项目中的 node_module 文件夹</p>\n<p>重新使用命令生成</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pnpm install </span><br></pre></td></tr></table></figure>\n\n<p>然后再次尝试</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pnpm add $&#123;依赖名&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"pnpm\"><a href=\"#pnpm\" class=\"headerlink\" title=\"pnpm\"></a>pnpm</h1><h2 id=\"pnpm-install-和-pnpm-add\"><a href=\"#pnpm-install-和-pnpm-add\" class=\"headerlink\" title=\"pnpm install 和 pnpm add\"></a>pnpm install 和 pnpm add</h2><p>pnpm add 和 pnpm install 命令的本质是相同的，都可以用来安装依赖包。它们的区别在于用法和语法。</p>\n<p>pnpm add 命令会将要安装的依赖包加入到 package.json 文件的 dependencies 或者 devDependencies 中，并且可以指定包的版本。例如：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pnpm add react@<span class=\"number\">16</span>.<span class=\"number\">8</span>.<span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<p>pnpm install 命令通常用来安装项目中已有的 package.json 文件中的依赖包。如果没有指定包的版本，则会安装最新版本的依赖包。例如：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pnpm install</span><br></pre></td></tr></table></figure>\n\n<p>这个命令会安装 package.json 文件中的所有依赖包。</p>\n<p>总的来说，pnpm add 命令更加灵活，可以实现指定版本安装，同时更新 package.json 文件。pnpm install 命令更加简洁，适用于快速安装已有的依赖包。</p>\n<h2 id=\"pnpm-换源与更新\"><a href=\"#pnpm-换源与更新\" class=\"headerlink\" title=\"pnpm 换源与更新\"></a>pnpm 换源与更新</h2><p>以下出现报错信息：</p>\n<blockquote>\n<p>ERR_PNPM_REGISTRIES_MISMATCH  This modules directory was created using the following registries configuration: {“default”:”<a href=\"https://registry.npm.taobao.org/%22%7D\">https://registry.npm.taobao.org/&quot;}</a>. The current configuration is {“default”:”<a href=\"https://mirrors.cloud.tencent.com/npm/%22%7D\">https://mirrors.cloud.tencent.com/npm/&quot;}</a>. To recreate the modules directory using the new settings, run “pnpm install”.</p>\n</blockquote>\n<p>删除项目中的 node_module 文件夹</p>\n<p>重新使用命令生成</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pnpm install </span><br></pre></td></tr></table></figure>\n\n<p>然后再次尝试</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pnpm add $&#123;依赖名&#125;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"vim 按键","date":"2024-03-05T07:14:41.926Z","updated":"2024-03-05T07:14:06.312Z","cover":"./images/vim.png","_content":"# vim-按键\n","source":"_posts/vim-按键.md","raw":"---\ntitle: vim 按键\ndate: \nupdated: \ntags: vim\ncategories: linux\ncover: ./images/vim.png\n---\n# vim-按键\n","slug":"vim-按键","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmou00291kv21luba1gn","content":"<h1 id=\"vim-按键\"><a href=\"#vim-按键\" class=\"headerlink\" title=\"vim-按键\"></a>vim-按键</h1>","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"vim-按键\"><a href=\"#vim-按键\" class=\"headerlink\" title=\"vim-按键\"></a>vim-按键</h1>"},{"title":"vim 插件","date":"2024-03-05T07:14:41.923Z","updated":"2024-03-05T07:14:06.308Z","cover":"../FILES/vim-plug.md/img-20230618120008.png","_content":"\n# vim-plug 下载\n\n参考网址：https://blog.csdn.net/m0_48432283/article/details/123950518\n\n## 1. 克隆\n\n回到家目录： `cd ~`\n\n```bash\ngit clone https://github.com/junegunn/vim-plug\n```\n\n等待安装完毕...\n\n![Img](../FILES/vim-plug.md/img-20230618115047.png)\n\n\n## 2. 移动到 vim \n\n创建目录\n\n```bash\nmkdir -p .vim/autoload\n```\n\n将 `plug.vim` 复制到新目录下\n\n```bash\ncp ./vim-plug/plug.vim .vim/autoload/plug.vim\n```\n\n# 插件使用\n\n## 1. 搜索插件\n\n网址：https://vimawesome.com/\n\n![Img](../FILES/vim-plug.md/img-20230618120008.png)\n\n## 2. 安装插件\n\n编辑: `~/.vimrc` 文件\n\n```vim\ncall plug#begin('~/.vim/plugged')\nPlug '插件名称'\ncall plug#end()\n```\n\n![Img](../FILES/vim-plug.md/img-20230618122149.png)\n\n## 3. 插件安装\n\n先保存\n\n```vim\n:w\n```\n\n运行命令重新加载 `.vimrc` 文件\n\n```vim\n:source %\n```\n\n安装插件\n\n```vim\n:PlugInstall\n```\n\n## 4. 插件卸载\n\n```vim\n:PlugClean\n```\n\n\n\n","source":"_posts/vim-plug.md","raw":"---\ntitle: vim 插件\ndate: \nupdated: \ntags: vim\ncategories: linux\ncover: ../FILES/vim-plug.md/img-20230618120008.png\n---\n\n# vim-plug 下载\n\n参考网址：https://blog.csdn.net/m0_48432283/article/details/123950518\n\n## 1. 克隆\n\n回到家目录： `cd ~`\n\n```bash\ngit clone https://github.com/junegunn/vim-plug\n```\n\n等待安装完毕...\n\n![Img](../FILES/vim-plug.md/img-20230618115047.png)\n\n\n## 2. 移动到 vim \n\n创建目录\n\n```bash\nmkdir -p .vim/autoload\n```\n\n将 `plug.vim` 复制到新目录下\n\n```bash\ncp ./vim-plug/plug.vim .vim/autoload/plug.vim\n```\n\n# 插件使用\n\n## 1. 搜索插件\n\n网址：https://vimawesome.com/\n\n![Img](../FILES/vim-plug.md/img-20230618120008.png)\n\n## 2. 安装插件\n\n编辑: `~/.vimrc` 文件\n\n```vim\ncall plug#begin('~/.vim/plugged')\nPlug '插件名称'\ncall plug#end()\n```\n\n![Img](../FILES/vim-plug.md/img-20230618122149.png)\n\n## 3. 插件安装\n\n先保存\n\n```vim\n:w\n```\n\n运行命令重新加载 `.vimrc` 文件\n\n```vim\n:source %\n```\n\n安装插件\n\n```vim\n:PlugInstall\n```\n\n## 4. 插件卸载\n\n```vim\n:PlugClean\n```\n\n\n\n","slug":"vim-plug","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmov002d1kv2b3e57p5g","content":"<h1 id=\"vim-plug-下载\"><a href=\"#vim-plug-下载\" class=\"headerlink\" title=\"vim-plug 下载\"></a>vim-plug 下载</h1><p>参考网址：<a href=\"https://blog.csdn.net/m0_48432283/article/details/123950518\">https://blog.csdn.net/m0_48432283/article/details/123950518</a></p>\n<h2 id=\"1-克隆\"><a href=\"#1-克隆\" class=\"headerlink\" title=\"1. 克隆\"></a>1. 克隆</h2><p>回到家目录： <code>cd ~</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/junegunn/vim-plug</span><br></pre></td></tr></table></figure>\n\n<p>等待安装完毕…</p>\n<p><img src=\"/lingtan/../FILES/vim-plug.md/img-20230618115047.png\" alt=\"Img\"></p>\n<h2 id=\"2-移动到-vim\"><a href=\"#2-移动到-vim\" class=\"headerlink\" title=\"2. 移动到 vim\"></a>2. 移动到 vim</h2><p>创建目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p .vim/autoload</span><br></pre></td></tr></table></figure>\n\n<p>将 <code>plug.vim</code> 复制到新目录下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> ./vim-plug/plug.vim .vim/autoload/plug.vim</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"插件使用\"><a href=\"#插件使用\" class=\"headerlink\" title=\"插件使用\"></a>插件使用</h1><h2 id=\"1-搜索插件\"><a href=\"#1-搜索插件\" class=\"headerlink\" title=\"1. 搜索插件\"></a>1. 搜索插件</h2><p>网址：<a href=\"https://vimawesome.com/\">https://vimawesome.com/</a></p>\n<p><img src=\"/lingtan/../FILES/vim-plug.md/img-20230618120008.png\" alt=\"Img\"></p>\n<h2 id=\"2-安装插件\"><a href=\"#2-安装插件\" class=\"headerlink\" title=\"2. 安装插件\"></a>2. 安装插件</h2><p>编辑: <code>~/.vimrc</code> 文件</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">call</span> plug#begin(<span class=\"string\">&#x27;~/.vim/plugged&#x27;</span>)</span><br><span class=\"line\">Plug <span class=\"string\">&#x27;插件名称&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">call</span> plug#end()</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/vim-plug.md/img-20230618122149.png\" alt=\"Img\"></p>\n<h2 id=\"3-插件安装\"><a href=\"#3-插件安装\" class=\"headerlink\" title=\"3. 插件安装\"></a>3. 插件安装</h2><p>先保存</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:<span class=\"keyword\">w</span></span><br></pre></td></tr></table></figure>\n\n<p>运行命令重新加载 <code>.vimrc</code> 文件</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:<span class=\"keyword\">source</span> %</span><br></pre></td></tr></table></figure>\n\n<p>安装插件</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:PlugInstall</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-插件卸载\"><a href=\"#4-插件卸载\" class=\"headerlink\" title=\"4. 插件卸载\"></a>4. 插件卸载</h2><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:PlugClean</span><br></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"vim-plug-下载\"><a href=\"#vim-plug-下载\" class=\"headerlink\" title=\"vim-plug 下载\"></a>vim-plug 下载</h1><p>参考网址：<a href=\"https://blog.csdn.net/m0_48432283/article/details/123950518\">https://blog.csdn.net/m0_48432283/article/details/123950518</a></p>\n<h2 id=\"1-克隆\"><a href=\"#1-克隆\" class=\"headerlink\" title=\"1. 克隆\"></a>1. 克隆</h2><p>回到家目录： <code>cd ~</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/junegunn/vim-plug</span><br></pre></td></tr></table></figure>\n\n<p>等待安装完毕…</p>\n<p><img src=\"/lingtan/../FILES/vim-plug.md/img-20230618115047.png\" alt=\"Img\"></p>\n<h2 id=\"2-移动到-vim\"><a href=\"#2-移动到-vim\" class=\"headerlink\" title=\"2. 移动到 vim\"></a>2. 移动到 vim</h2><p>创建目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p .vim/autoload</span><br></pre></td></tr></table></figure>\n\n<p>将 <code>plug.vim</code> 复制到新目录下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> ./vim-plug/plug.vim .vim/autoload/plug.vim</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"插件使用\"><a href=\"#插件使用\" class=\"headerlink\" title=\"插件使用\"></a>插件使用</h1><h2 id=\"1-搜索插件\"><a href=\"#1-搜索插件\" class=\"headerlink\" title=\"1. 搜索插件\"></a>1. 搜索插件</h2><p>网址：<a href=\"https://vimawesome.com/\">https://vimawesome.com/</a></p>\n<p><img src=\"/lingtan/../FILES/vim-plug.md/img-20230618120008.png\" alt=\"Img\"></p>\n<h2 id=\"2-安装插件\"><a href=\"#2-安装插件\" class=\"headerlink\" title=\"2. 安装插件\"></a>2. 安装插件</h2><p>编辑: <code>~/.vimrc</code> 文件</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">call</span> plug#begin(<span class=\"string\">&#x27;~/.vim/plugged&#x27;</span>)</span><br><span class=\"line\">Plug <span class=\"string\">&#x27;插件名称&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">call</span> plug#end()</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/vim-plug.md/img-20230618122149.png\" alt=\"Img\"></p>\n<h2 id=\"3-插件安装\"><a href=\"#3-插件安装\" class=\"headerlink\" title=\"3. 插件安装\"></a>3. 插件安装</h2><p>先保存</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:<span class=\"keyword\">w</span></span><br></pre></td></tr></table></figure>\n\n<p>运行命令重新加载 <code>.vimrc</code> 文件</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:<span class=\"keyword\">source</span> %</span><br></pre></td></tr></table></figure>\n\n<p>安装插件</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:PlugInstall</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-插件卸载\"><a href=\"#4-插件卸载\" class=\"headerlink\" title=\"4. 插件卸载\"></a>4. 插件卸载</h2><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:PlugClean</span><br></pre></td></tr></table></figure>\n\n\n\n"},{"title":"合适时机加载动画","date":"2024-03-05T07:14:41.932Z","updated":"2024-03-05T07:14:06.312Z","cover":"https://s1.ax1x.com/2023/06/19/pC30WM8.png","_content":"\n# 问题描述\n\n在页面很快就加载出来时，仍然出现 {% label 加载动画 orange %}\n\n从而造成页面闪烁问题\n\n# UI 设计技巧\n\n1. 等待时间小于 1秒 ==> 不做处理\n2. 在 4 秒内显示加载动画\n3. 在一分钟内显示进度条（当前进度的百分比）\n4. 超过1分钟，显示进度条，还要预估结束时间\n\n# 问题解决\n\n思路：\n\n1. 在路由跳转开始时，获取当前时间\n2. 在路由完成时，再次获取当前时间\n3. 两者时间相减，得到路由渲染时间\n4. 根据技巧，去实现是否显示加载动画\n\n实现：\n\n1. js 获取当前时间 【方法很多: [JS获取当前时间的方法 - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/450208567)】\n\n```typescript\nlet timestamp = new Date().getTime()；\n```\n\n2. 将时间添加在 handleChangeStart 函数中\n\n\n\n\n\n","source":"_posts/合适时机加载动画.md","raw":"---\ntitle: 合适时机加载动画\ndate: \nupdated:\ntags: typescript\ncategories: 前端\ncover: https://s1.ax1x.com/2023/06/19/pC30WM8.png\n---\n\n# 问题描述\n\n在页面很快就加载出来时，仍然出现 {% label 加载动画 orange %}\n\n从而造成页面闪烁问题\n\n# UI 设计技巧\n\n1. 等待时间小于 1秒 ==> 不做处理\n2. 在 4 秒内显示加载动画\n3. 在一分钟内显示进度条（当前进度的百分比）\n4. 超过1分钟，显示进度条，还要预估结束时间\n\n# 问题解决\n\n思路：\n\n1. 在路由跳转开始时，获取当前时间\n2. 在路由完成时，再次获取当前时间\n3. 两者时间相减，得到路由渲染时间\n4. 根据技巧，去实现是否显示加载动画\n\n实现：\n\n1. js 获取当前时间 【方法很多: [JS获取当前时间的方法 - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/450208567)】\n\n```typescript\nlet timestamp = new Date().getTime()；\n```\n\n2. 将时间添加在 handleChangeStart 函数中\n\n\n\n\n\n","slug":"合适时机加载动画","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmov002g1kv2da7q3qyl","content":"<h1 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h1><p>在页面很快就加载出来时，仍然出现 <mark class=\"hl-label orange\">加载动画</mark> </p>\n<p>从而造成页面闪烁问题</p>\n<h1 id=\"UI-设计技巧\"><a href=\"#UI-设计技巧\" class=\"headerlink\" title=\"UI 设计技巧\"></a>UI 设计技巧</h1><ol>\n<li>等待时间小于 1秒 &#x3D;&#x3D;&gt; 不做处理</li>\n<li>在 4 秒内显示加载动画</li>\n<li>在一分钟内显示进度条（当前进度的百分比）</li>\n<li>超过1分钟，显示进度条，还要预估结束时间</li>\n</ol>\n<h1 id=\"问题解决\"><a href=\"#问题解决\" class=\"headerlink\" title=\"问题解决\"></a>问题解决</h1><p>思路：</p>\n<ol>\n<li>在路由跳转开始时，获取当前时间</li>\n<li>在路由完成时，再次获取当前时间</li>\n<li>两者时间相减，得到路由渲染时间</li>\n<li>根据技巧，去实现是否显示加载动画</li>\n</ol>\n<p>实现：</p>\n<ol>\n<li>js 获取当前时间 【方法很多: <a href=\"https://zhuanlan.zhihu.com/p/450208567\">JS获取当前时间的方法 - 知乎 (zhihu.com)</a>】</li>\n</ol>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> timestamp = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>()；</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>将时间添加在 handleChangeStart 函数中</li>\n</ol>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h1><p>在页面很快就加载出来时，仍然出现 <mark class=\"hl-label orange\">加载动画</mark> </p>\n<p>从而造成页面闪烁问题</p>\n<h1 id=\"UI-设计技巧\"><a href=\"#UI-设计技巧\" class=\"headerlink\" title=\"UI 设计技巧\"></a>UI 设计技巧</h1><ol>\n<li>等待时间小于 1秒 &#x3D;&#x3D;&gt; 不做处理</li>\n<li>在 4 秒内显示加载动画</li>\n<li>在一分钟内显示进度条（当前进度的百分比）</li>\n<li>超过1分钟，显示进度条，还要预估结束时间</li>\n</ol>\n<h1 id=\"问题解决\"><a href=\"#问题解决\" class=\"headerlink\" title=\"问题解决\"></a>问题解决</h1><p>思路：</p>\n<ol>\n<li>在路由跳转开始时，获取当前时间</li>\n<li>在路由完成时，再次获取当前时间</li>\n<li>两者时间相减，得到路由渲染时间</li>\n<li>根据技巧，去实现是否显示加载动画</li>\n</ol>\n<p>实现：</p>\n<ol>\n<li>js 获取当前时间 【方法很多: <a href=\"https://zhuanlan.zhihu.com/p/450208567\">JS获取当前时间的方法 - 知乎 (zhihu.com)</a>】</li>\n</ol>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> timestamp = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>()；</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>将时间添加在 handleChangeStart 函数中</li>\n</ol>\n"},{"title":"笔记小技巧","date":"2024-03-05T07:14:41.936Z","updated":"2024-03-05T07:14:06.312Z","cover":"https://s1.ax1x.com/2022/11/28/zUThkt.png","_content":"\n# 标签外挂\n\n## Note\n\n用法：\n\n```markdown\n{% note [class] [no-icon] [style] %}\nAny content (support inline tags too.io).\n{% endnote %}\n```\n\n详细说明：\n\n![image-20230721205223146](../FILES/笔记小技巧.md/image-20230721205223146.png)\n\n举例：\n\n> 当 class 为 simple 时，效果如下：\n\n```markdown\n{% note simple %}\n默认 提示块标签\n{% endnote %}\n\n{% note default simple %}\ndefault 提示块标签\n{% endnote %}\n\n{% note primary simple %}\nprimary 提示块标签\n{% endnote %}\n\n{% note success simple %}\nsuccess 提示块标签\n{% endnote %}\n\n{% note info simple %}\ninfo 提示块标签\n{% endnote %}\n\n{% note warning simple %}\nwarning 提示块标签\n{% endnote %}\n\n{% note danger simple %}\ndanger 提示块标签\n{% endnote %}\n\n```\n\n{% note simple %}\n默认 提示块标签\n{% endnote %}\n\n{% note default simple %}\ndefault 提示块标签\n{% endnote %}\n\n{% note primary simple %}\nprimary 提示块标签\n{% endnote %}\n\n{% note success simple %}\nsuccess 提示块标签\n{% endnote %}\n\n{% note info simple %}\ninfo 提示块标签\n{% endnote %}\n\n{% note warning simple %}\nwarning 提示块标签\n{% endnote %}\n\n{% note danger simple %}\ndanger 提示块标签\n{% endnote %}\n\n其余效果大同小异，不再尝试。\n\n## Label\n\n用法：\n\n```markdown\n{% label text color %}\n```\n\n详细说明：\n\n![image-20230721210210155](../FILES/笔记小技巧.md/image-20230721210210155.png)\n\n更多标签外挂：[Butterfly 主题配置-标签外挂](https://butterfly.js.org/posts/4aa8abbe/?highlight=label#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89)\n\n","source":"_posts/笔记小技巧.md","raw":"---\ntitle: 笔记小技巧\ndate: \nupdated: \ntags: 笔记\ncategories: 其他\ncover: https://s1.ax1x.com/2022/11/28/zUThkt.png\n---\n\n# 标签外挂\n\n## Note\n\n用法：\n\n```markdown\n{% note [class] [no-icon] [style] %}\nAny content (support inline tags too.io).\n{% endnote %}\n```\n\n详细说明：\n\n![image-20230721205223146](../FILES/笔记小技巧.md/image-20230721205223146.png)\n\n举例：\n\n> 当 class 为 simple 时，效果如下：\n\n```markdown\n{% note simple %}\n默认 提示块标签\n{% endnote %}\n\n{% note default simple %}\ndefault 提示块标签\n{% endnote %}\n\n{% note primary simple %}\nprimary 提示块标签\n{% endnote %}\n\n{% note success simple %}\nsuccess 提示块标签\n{% endnote %}\n\n{% note info simple %}\ninfo 提示块标签\n{% endnote %}\n\n{% note warning simple %}\nwarning 提示块标签\n{% endnote %}\n\n{% note danger simple %}\ndanger 提示块标签\n{% endnote %}\n\n```\n\n{% note simple %}\n默认 提示块标签\n{% endnote %}\n\n{% note default simple %}\ndefault 提示块标签\n{% endnote %}\n\n{% note primary simple %}\nprimary 提示块标签\n{% endnote %}\n\n{% note success simple %}\nsuccess 提示块标签\n{% endnote %}\n\n{% note info simple %}\ninfo 提示块标签\n{% endnote %}\n\n{% note warning simple %}\nwarning 提示块标签\n{% endnote %}\n\n{% note danger simple %}\ndanger 提示块标签\n{% endnote %}\n\n其余效果大同小异，不再尝试。\n\n## Label\n\n用法：\n\n```markdown\n{% label text color %}\n```\n\n详细说明：\n\n![image-20230721210210155](../FILES/笔记小技巧.md/image-20230721210210155.png)\n\n更多标签外挂：[Butterfly 主题配置-标签外挂](https://butterfly.js.org/posts/4aa8abbe/?highlight=label#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89)\n\n","slug":"笔记小技巧","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmow002j1kv201ztfdmi","content":"<h1 id=\"标签外挂\"><a href=\"#标签外挂\" class=\"headerlink\" title=\"标签外挂\"></a>标签外挂</h1><h2 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h2><p>用法：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class=\"line\">Any content (support inline tags too.io).</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n\n<p>详细说明：</p>\n<p><img src=\"/lingtan/../FILES/%E7%AC%94%E8%AE%B0%E5%B0%8F%E6%8A%80%E5%B7%A7.md/image-20230721205223146.png\" alt=\"image-20230721205223146\"></p>\n<p>举例：</p>\n<blockquote>\n<p>当 class 为 simple 时，效果如下：</p>\n</blockquote>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note simple %&#125;</span><br><span class=\"line\">默认 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note default simple %&#125;</span><br><span class=\"line\">default 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note primary simple %&#125;</span><br><span class=\"line\">primary 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note success simple %&#125;</span><br><span class=\"line\">success 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note info simple %&#125;</span><br><span class=\"line\">info 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note warning simple %&#125;</span><br><span class=\"line\">warning 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note danger simple %&#125;</span><br><span class=\"line\">danger 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<div class=\"note simple\"><p>默认 提示块标签</p>\n</div>\n\n<div class=\"note default simple\"><p>default 提示块标签</p>\n</div>\n\n<div class=\"note primary simple\"><p>primary 提示块标签</p>\n</div>\n\n<div class=\"note success simple\"><p>success 提示块标签</p>\n</div>\n\n<div class=\"note info simple\"><p>info 提示块标签</p>\n</div>\n\n<div class=\"note warning simple\"><p>warning 提示块标签</p>\n</div>\n\n<div class=\"note danger simple\"><p>danger 提示块标签</p>\n</div>\n\n<p>其余效果大同小异，不再尝试。</p>\n<h2 id=\"Label\"><a href=\"#Label\" class=\"headerlink\" title=\"Label\"></a>Label</h2><p>用法：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% label text color %&#125;</span><br></pre></td></tr></table></figure>\n\n<p>详细说明：</p>\n<p><img src=\"/lingtan/../FILES/%E7%AC%94%E8%AE%B0%E5%B0%8F%E6%8A%80%E5%B7%A7.md/image-20230721210210155.png\" alt=\"image-20230721210210155\"></p>\n<p>更多标签外挂：<a href=\"https://butterfly.js.org/posts/4aa8abbe/?highlight=label#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89\">Butterfly 主题配置-标签外挂</a></p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"标签外挂\"><a href=\"#标签外挂\" class=\"headerlink\" title=\"标签外挂\"></a>标签外挂</h1><h2 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h2><p>用法：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class=\"line\">Any content (support inline tags too.io).</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n\n<p>详细说明：</p>\n<p><img src=\"/lingtan/../FILES/%E7%AC%94%E8%AE%B0%E5%B0%8F%E6%8A%80%E5%B7%A7.md/image-20230721205223146.png\" alt=\"image-20230721205223146\"></p>\n<p>举例：</p>\n<blockquote>\n<p>当 class 为 simple 时，效果如下：</p>\n</blockquote>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note simple %&#125;</span><br><span class=\"line\">默认 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note default simple %&#125;</span><br><span class=\"line\">default 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note primary simple %&#125;</span><br><span class=\"line\">primary 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note success simple %&#125;</span><br><span class=\"line\">success 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note info simple %&#125;</span><br><span class=\"line\">info 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note warning simple %&#125;</span><br><span class=\"line\">warning 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note danger simple %&#125;</span><br><span class=\"line\">danger 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<div class=\"note simple\"><p>默认 提示块标签</p>\n</div>\n\n<div class=\"note default simple\"><p>default 提示块标签</p>\n</div>\n\n<div class=\"note primary simple\"><p>primary 提示块标签</p>\n</div>\n\n<div class=\"note success simple\"><p>success 提示块标签</p>\n</div>\n\n<div class=\"note info simple\"><p>info 提示块标签</p>\n</div>\n\n<div class=\"note warning simple\"><p>warning 提示块标签</p>\n</div>\n\n<div class=\"note danger simple\"><p>danger 提示块标签</p>\n</div>\n\n<p>其余效果大同小异，不再尝试。</p>\n<h2 id=\"Label\"><a href=\"#Label\" class=\"headerlink\" title=\"Label\"></a>Label</h2><p>用法：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% label text color %&#125;</span><br></pre></td></tr></table></figure>\n\n<p>详细说明：</p>\n<p><img src=\"/lingtan/../FILES/%E7%AC%94%E8%AE%B0%E5%B0%8F%E6%8A%80%E5%B7%A7.md/image-20230721210210155.png\" alt=\"image-20230721210210155\"></p>\n<p>更多标签外挂：<a href=\"https://butterfly.js.org/posts/4aa8abbe/?highlight=label#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89\">Butterfly 主题配置-标签外挂</a></p>\n"},{"title":"SpringCloud","date":"2024-03-05T07:14:41.920Z","updated":"2024-03-05T07:14:06.308Z","cover":"https://s1.ax1x.com/2023/07/21/pCbFJ4s.png","_content":"\n# 概要\n\nSpringCloud Alibaba是SpringCloud的子项目，SpringCloud Alibaba符合SpringCloud标准。\n\n具体大纲9大步：服务发现、负载均衡、模块通信、服务容错、消息驱动、网关、用户认证和授权、配置管理、调用链监控。\n\n{% note success %}\n\nSpring Cloud Alibaba 五大组件：\n\n1. Sentinel\n2. Nacos 注册中心、配置中心、服务管理（UI可视化）\n3. RocketMQ\n4. Dubbo\n5. Seata\n\n{% endnote %}\n\n1. 服务发现 Nacos\n\n   - 服务发现原理剖析\n\n   - Nacos Server/Clinet\n\n   - 高可用Nacos搭建\n\n\n2. 负载均衡Ribbon\n\n   - 负载均衡常见模式\n\n   - RestTemplate整合Ribbon\n\n   - Ribbon配置自定义\n\n   - 如何扩展Ribbon\n\n\n3. 声明式HTTP客户端-Feign\n\n\t- 如何使用Fegin\n\t- Fegin配置自定义\n\t- 如何扩展Fegin\n\n4. 服务容错Sentinel\n\n\t- 服务容错原理\n\t- Sentinel\n\t- Sentinel Dashboard\n\t- Sentinel核心原理分析\n\n5. 消息驱动RocketMQ\n\n\t- SpringCloud Stream\n\t- 实现异步消息推送与消费\n\n6. API网关GateWay\n\n\t- 整合GateWay\n\t- 三个核心\n\t- 聚合微服务请求\n\n7. 用户认证与授权\n\n\t- 认证授权常见方案\n\t- 改造GateWay\n\t- 扩展Fegin\n\n8. 配置管理Nacos\n\n\t- 配置如何管理\n\t- 配置动态刷新\n\t- 配置管理的最佳实现\n\n9. 调用链监控Sleuth\n\n\t- 调用链监控剖析\n\t- Sleuth使用\n\t- Zipkin使用\n\n![image-20230721192248994](../FILES/springcloud.md/image-20230721192248994.png)\n\n# 环境搭建\n\n版本说明可以参考下面网址：（Spring Cloud 和 Spring Boot 强相关）\n\n[版本说明 · alibaba/spring-cloud-alibaba Wiki · GitHub](https://github.com/alibaba/spring-cloud-alibaba/wiki/版本说明)\n\n![image-20230721172118159](../FILES/springcloud.md/image-20230721172118159.png)\n\n根据版本信息，环境选择：\n\n- Spring Cloud Alibaba {% label 2022.0.0.0-RC2 green %}\n- Spring Cloud  {% label 2022.0.0 green %}\n- Spring Boot  {% label 3.0.2 green %}\n\n```xml\n<properties>\n  <alibaba-version>2022.0.0.0-RC2</alibaba-version>\n  <spring-cloud.version>2022.0.0</spring-cloud.version>\n</properties>\n\n<!-- 继承 -->\n<dependencyManagement>\n  <dependencies>\n    <!-- spring cloud alibaba-->\n    <dependency>\n      <groupId>com.alibaba.cloud</groupId>\n      <artifactId>spring-cloud-alibaba-dependencies</artifactId>\n      <version>${alibaba-version}</version>\n      <type>pom</type>\n      <scope>import</scope>\n    </dependency>\n    <!-- Spring Cloud -->\n    <dependency>\n      <groupId>org.springframework.cloud</groupId>\n      <artifactId>spring-cloud-dependencies</artifactId>\n      <version>${spring-cloud.version}</version>\n      <type>pom</type>\n      <scope>import</scope>\n    </dependency>\n  </dependencies>\n</dependencyManagement>\n```\n\n# Nacos\n\nNacos：注册中心、配置中心、服务管理（可视化界面）\n\n关键特性：\n\n- 服务发现和服务健康监测\n- 动态配置服务\n- 动态 DNS 服务\n- 服务及其元数据管理\n\n## 下载\n\n下载地址：https://github.com/alibaba/nacos/releases\n\n下载的版本要根据 `Spring Cloud Alibaba` 组件版本关系。\n\n![image-20230721203610510](../FILES/springcloud.md/image-20230721203610510.png)\n\n之前选择的 Spring Cloud Alibaba {% label 2022.0.0.0-RC2 green %}，现在我们应该要下载 Nacos  {% label 2.2.1 green %}\n\n![image-20230721203805155](../FILES/springcloud.md/image-20230721203805155.png)\n\n下载需要等待一会儿时间~\n\n下载下来，解压缩”安装包“，解压后得到如下目录：\n\n![image-20230721203949649](../FILES/springcloud.md/image-20230721203949649.png)\n\n## 启动服务器\n\n参考文档：[Nacos 快速开始](https://nacos.io/zh-cn/docs/v2/quickstart/quick-start.html)\n\n### 单机模式\n\n打开 `bin` 目录下面的 startup.cmd 文件，通过编辑方式打开（可以拖到 VSCode 中）。\n\n![image-20230721204316658](../FILES/springcloud.md/image-20230721204316658.png)\n\n修改模式为 {% label 单机模式 blue %}。\n\n{% note info no-icon %}\n\n模式可以选择2种模式：\n\n1. cluster 集群模式\n2. standalone 单机模式\n\n{% endnote %}\n\n模式修改完成后，记得保存。\n\n### 配置文件\n\n> 在2.2.0.1和2.2.1版本时，必须执行此变更，否则无法启动；其他版本为建议设置。\n\n修改`conf`目录下的`application.properties`文件。\n\n设置其中的`nacos.core.auth.plugin.nacos.token.secret.key`值，详情可查看[鉴权-自定义密钥](https://nacos.io/zh-cn/docs/v2/plugin/auth-plugin.html).\n\n{% note warning %}\n\n注意，文档中的默认值`SecretKey012345678901234567890123456789012345678901234567890123456789`和`VGhpc0lzTXlDdXN0b21TZWNyZXRLZXkwMTIzNDU2Nzg=`为公开默认值，可用于临时测试，实际使用时请**务必**更换为自定义的其他有效值。\n\n{% endnote %}\n\n将密钥添加到下图黄圈处：\n\n![image-20230721213913950](../FILES/springcloud.md/image-20230721213913950.png)\n\n最后双击 `startup.cmd` 文件。\n\n显示下方文字表示启动成功：\n\n> 2023-07-21 21:40:55,435 INFO Nacos started successfully in stand alone mode. use embedded storage\n\n现在访问 Nacos 网址。\n\n![image-20230721214325200](../FILES/springcloud.md/image-20230721214325200.png)\n\n访问：`http://192.168.169.1:8848/nacos/index.html` 即可进入登录页面。\n\n{% note primary flat no-icon%}\n\n账号：nacos\n\n密码：nacos\n\n{% endnote %}\n\n关闭服务器双击{% label shutdown.cmd purple %}运行文件。\n\n## 服务注册发现\n\n在模块的 pom.xml 文件中添加下面依赖：\n\n```xml\n<dependencies>\n  <dependency>\n    <groupId>com.alibaba.cloud</groupId>\n    <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>\n  </dependency>\n</dependencies>\n```\n\n然后添加配置（在`application.yml` 文件）\n\n```yaml\nserver:\n  port: 8083\nspring:\n  application:\n  \t# 模块起名\n    name: test4-nacos\n  cloud:\n    nacos:\n      discovery:\n      \t# nacos 访问地址\n        server-addr: 127.0.0.1:8848\n        # nacos 用户名\n        username: nacos\n        # nacos 密码\n        password: nacos\n        # nacos 命名空间: 可以区分开发环境和生产环境\n        namespace: public\n```\n\n启动该模块，在 nacos 界面上的`服务管理 > 服务列表` 可以看到开启的服务。\n\n![image-20230722120734690](../FILES/springcloud.md/image-20230722120734690.png)\n\n通过调用服务名的方式去调用其他接口：\n\n```java\n@GetMapping(\"/hello\")\npublic String hello() {\n  log.info(\"[test3 模块] 请求接口:/user/hello\");\n  return restTemplate.getForObject(\"http://test4-nacos/fruit/hello\", String.class);\n}\n```\n\n其中 `test4-nacos` 是其他模块的名称。\n\n但只是这样是不够的，还需添加一个注解 `@LoadBalanced`\n\n对于{% label 高版本 blue %}的 Spring Cloud，会报错 <span style=\"background-color: #b71c1c;color: #fff;padding: 2px 4px;border-radius: 3px;\"> java.net.UnknownHostException: test4-nacos </span>\n\n{% note info no-icon %}\n\n解决办法：\n\n因为Netflix的组件从2020年开始停止维护，因此spring cloud会逐渐弃用他家的组件,Ribbon就在其中，可以搜一个github里面spring-cloud-alibaba的issues。\n\n1. 使用spring-cloud-loadbalancer代替ribbon，在项目中引用依赖\n\n```xml\n<dependency>\n  <groupId>org.springframework.cloud</groupId>\n  <artifactId>spring-cloud-starter-loadbalancer</artifactId>\n</dependency>\n```\n\n2. 降低 Spring Cloud 版本，最好是选择 2020 以前的版本\n\n{% endnote %}\n\n## 基础配置\n\n一些配置默认即可，通常不需要在 `application.yml` 文件中修改。\n\n- server-addr 默认本机的8848端口\n- username 默认 nacos\n- password 默认 nacos\n- namespace 默认 public，区分不同项目、不同环境\n- ephemeral 默认 true，临时实例，服务停止时在一定时间后会进行删除\n- service 默认`${spring.application.name}`\n- group 跟命名空间一样，只是更细地划分\n- weight 默认 1， 权重\n- metadata 元数据，可以做扩展\n\n这些配置了解即可，因为可以通过可视化界面进行修改。\n\n# 负载均衡器 Ribbon\n\n{% note danger no-icon %}\n\n了解即可，高版本已弃用 Ribbon。\n\n建议选择 <span style=\"background-color: #0091ea;color: #fff;padding: 2px 4px;border-radius: 3px;\"> loadbalancer </span>\n\n{% endnote %}\n\n通过选择不同的服务实例，调用不同的服务。\n\n它们都继承 {% label AbstractLoadBalancerRule blue %}\n\n- RandomRule 随机\n- RoundRobinRule 轮询\n- RetryRule 轮询基础上重试\n- WeightedResponseTimeRule 权重，根据每个实例运行时间去计算各自的权重\n- ClientConfigEnableRoundRobinRule\n- BestAvailableRule 过滤失效服务，挑选并发最小\n- ZooeAvoidanceRule 【默认】\n- AvailabilityFilteringRule\n\n# 负载均衡器 LoadBalancer\n\n{% note success no-icon %}\n\n推荐使用\n\n{% endnote %}\n\n添加依赖：\n\n```xml\n<dependency>\n  <groupId>org.springframework.cloud</groupId>\n  <artifactId>spring-cloud-starter-loadbalancer</artifactId>\n</dependency>\n```\n\n一些常用规则：RoundRobinLoadBalancer\n\n可以仿照 `RoundRobinLoadBalancer` 写自定义规则。\n\n添加配置官方文档：[Cloud Native Applications (spring.io)](https://docs.spring.io/spring-cloud-commons/docs/4.0.3/reference/html/#spring-cloud-loadbalancer)\n\n规则写在扫描区域外部。\n\n# OpenFeign\n\nOpenFeign是一个显示声明式的WebService客户端。模块之间相互调用的工具。\n\n## 快速使用\n\n1. 加入依赖\n\n```xml\n<!-- OpenFeign -->\n<dependency>\n  <groupId>org.springframework.cloud</groupId>\n  <artifactId>spring-cloud-starter-openfeign</artifactId>\n</dependency>\n```\n\n2. 写调用其他模块接口\n\n创建一个 feign 包，然后再创建一个接口 `FruitFeign` \n\n```java\n@FeignClient(name = \"test4-nacos\", path = \"/fruit\")\npublic interface FruitFeign {\n    @GetMapping(\"/hello\")\n    String hello();\n}\n```\n\n@FeignClient 注解：\n\n- name 表示要调用哪一个服务（模块）\n- path 就是要访问的接口地址\n\n3. 调用前面的feign接口\n\n将 feign 层和 service 层作比较，前者是其他模块的接口，后者(service)是处于当前模块。\n\n```java\n@Autowired\nprivate FruitFeign fruitFeign;\n\n@GetMapping(\"/hello\")\npublic String hello() {\n  // 像调用 service 层一样简单\n  String msg = fruitFeign.hello();\n  return \"模块5:\" + msg;\n}\n```\n\n4. 加上注解 @EnableFeignClients\n\n如果没有这一步，提示 <span style=\"background-color: #b71c1c;color: #fff;padding: 2px 4px;border-radius: 3px;\">无法自动装配。找不到 'FruitFeign' 类型的 Bean</span>\n\n```java\n@SpringBootApplication\n// 启用 feign\n@EnableFeignClients\npublic class Test5Application {\n\t// main 方法\n}\n```\n\n","source":"_posts/springcloud.md","raw":"---\ntitle: SpringCloud\ndate: \nupdated: \ntags: [java,Spring]\ncategories: 后端\ncover: https://s1.ax1x.com/2023/07/21/pCbFJ4s.png \n---\n\n# 概要\n\nSpringCloud Alibaba是SpringCloud的子项目，SpringCloud Alibaba符合SpringCloud标准。\n\n具体大纲9大步：服务发现、负载均衡、模块通信、服务容错、消息驱动、网关、用户认证和授权、配置管理、调用链监控。\n\n{% note success %}\n\nSpring Cloud Alibaba 五大组件：\n\n1. Sentinel\n2. Nacos 注册中心、配置中心、服务管理（UI可视化）\n3. RocketMQ\n4. Dubbo\n5. Seata\n\n{% endnote %}\n\n1. 服务发现 Nacos\n\n   - 服务发现原理剖析\n\n   - Nacos Server/Clinet\n\n   - 高可用Nacos搭建\n\n\n2. 负载均衡Ribbon\n\n   - 负载均衡常见模式\n\n   - RestTemplate整合Ribbon\n\n   - Ribbon配置自定义\n\n   - 如何扩展Ribbon\n\n\n3. 声明式HTTP客户端-Feign\n\n\t- 如何使用Fegin\n\t- Fegin配置自定义\n\t- 如何扩展Fegin\n\n4. 服务容错Sentinel\n\n\t- 服务容错原理\n\t- Sentinel\n\t- Sentinel Dashboard\n\t- Sentinel核心原理分析\n\n5. 消息驱动RocketMQ\n\n\t- SpringCloud Stream\n\t- 实现异步消息推送与消费\n\n6. API网关GateWay\n\n\t- 整合GateWay\n\t- 三个核心\n\t- 聚合微服务请求\n\n7. 用户认证与授权\n\n\t- 认证授权常见方案\n\t- 改造GateWay\n\t- 扩展Fegin\n\n8. 配置管理Nacos\n\n\t- 配置如何管理\n\t- 配置动态刷新\n\t- 配置管理的最佳实现\n\n9. 调用链监控Sleuth\n\n\t- 调用链监控剖析\n\t- Sleuth使用\n\t- Zipkin使用\n\n![image-20230721192248994](../FILES/springcloud.md/image-20230721192248994.png)\n\n# 环境搭建\n\n版本说明可以参考下面网址：（Spring Cloud 和 Spring Boot 强相关）\n\n[版本说明 · alibaba/spring-cloud-alibaba Wiki · GitHub](https://github.com/alibaba/spring-cloud-alibaba/wiki/版本说明)\n\n![image-20230721172118159](../FILES/springcloud.md/image-20230721172118159.png)\n\n根据版本信息，环境选择：\n\n- Spring Cloud Alibaba {% label 2022.0.0.0-RC2 green %}\n- Spring Cloud  {% label 2022.0.0 green %}\n- Spring Boot  {% label 3.0.2 green %}\n\n```xml\n<properties>\n  <alibaba-version>2022.0.0.0-RC2</alibaba-version>\n  <spring-cloud.version>2022.0.0</spring-cloud.version>\n</properties>\n\n<!-- 继承 -->\n<dependencyManagement>\n  <dependencies>\n    <!-- spring cloud alibaba-->\n    <dependency>\n      <groupId>com.alibaba.cloud</groupId>\n      <artifactId>spring-cloud-alibaba-dependencies</artifactId>\n      <version>${alibaba-version}</version>\n      <type>pom</type>\n      <scope>import</scope>\n    </dependency>\n    <!-- Spring Cloud -->\n    <dependency>\n      <groupId>org.springframework.cloud</groupId>\n      <artifactId>spring-cloud-dependencies</artifactId>\n      <version>${spring-cloud.version}</version>\n      <type>pom</type>\n      <scope>import</scope>\n    </dependency>\n  </dependencies>\n</dependencyManagement>\n```\n\n# Nacos\n\nNacos：注册中心、配置中心、服务管理（可视化界面）\n\n关键特性：\n\n- 服务发现和服务健康监测\n- 动态配置服务\n- 动态 DNS 服务\n- 服务及其元数据管理\n\n## 下载\n\n下载地址：https://github.com/alibaba/nacos/releases\n\n下载的版本要根据 `Spring Cloud Alibaba` 组件版本关系。\n\n![image-20230721203610510](../FILES/springcloud.md/image-20230721203610510.png)\n\n之前选择的 Spring Cloud Alibaba {% label 2022.0.0.0-RC2 green %}，现在我们应该要下载 Nacos  {% label 2.2.1 green %}\n\n![image-20230721203805155](../FILES/springcloud.md/image-20230721203805155.png)\n\n下载需要等待一会儿时间~\n\n下载下来，解压缩”安装包“，解压后得到如下目录：\n\n![image-20230721203949649](../FILES/springcloud.md/image-20230721203949649.png)\n\n## 启动服务器\n\n参考文档：[Nacos 快速开始](https://nacos.io/zh-cn/docs/v2/quickstart/quick-start.html)\n\n### 单机模式\n\n打开 `bin` 目录下面的 startup.cmd 文件，通过编辑方式打开（可以拖到 VSCode 中）。\n\n![image-20230721204316658](../FILES/springcloud.md/image-20230721204316658.png)\n\n修改模式为 {% label 单机模式 blue %}。\n\n{% note info no-icon %}\n\n模式可以选择2种模式：\n\n1. cluster 集群模式\n2. standalone 单机模式\n\n{% endnote %}\n\n模式修改完成后，记得保存。\n\n### 配置文件\n\n> 在2.2.0.1和2.2.1版本时，必须执行此变更，否则无法启动；其他版本为建议设置。\n\n修改`conf`目录下的`application.properties`文件。\n\n设置其中的`nacos.core.auth.plugin.nacos.token.secret.key`值，详情可查看[鉴权-自定义密钥](https://nacos.io/zh-cn/docs/v2/plugin/auth-plugin.html).\n\n{% note warning %}\n\n注意，文档中的默认值`SecretKey012345678901234567890123456789012345678901234567890123456789`和`VGhpc0lzTXlDdXN0b21TZWNyZXRLZXkwMTIzNDU2Nzg=`为公开默认值，可用于临时测试，实际使用时请**务必**更换为自定义的其他有效值。\n\n{% endnote %}\n\n将密钥添加到下图黄圈处：\n\n![image-20230721213913950](../FILES/springcloud.md/image-20230721213913950.png)\n\n最后双击 `startup.cmd` 文件。\n\n显示下方文字表示启动成功：\n\n> 2023-07-21 21:40:55,435 INFO Nacos started successfully in stand alone mode. use embedded storage\n\n现在访问 Nacos 网址。\n\n![image-20230721214325200](../FILES/springcloud.md/image-20230721214325200.png)\n\n访问：`http://192.168.169.1:8848/nacos/index.html` 即可进入登录页面。\n\n{% note primary flat no-icon%}\n\n账号：nacos\n\n密码：nacos\n\n{% endnote %}\n\n关闭服务器双击{% label shutdown.cmd purple %}运行文件。\n\n## 服务注册发现\n\n在模块的 pom.xml 文件中添加下面依赖：\n\n```xml\n<dependencies>\n  <dependency>\n    <groupId>com.alibaba.cloud</groupId>\n    <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>\n  </dependency>\n</dependencies>\n```\n\n然后添加配置（在`application.yml` 文件）\n\n```yaml\nserver:\n  port: 8083\nspring:\n  application:\n  \t# 模块起名\n    name: test4-nacos\n  cloud:\n    nacos:\n      discovery:\n      \t# nacos 访问地址\n        server-addr: 127.0.0.1:8848\n        # nacos 用户名\n        username: nacos\n        # nacos 密码\n        password: nacos\n        # nacos 命名空间: 可以区分开发环境和生产环境\n        namespace: public\n```\n\n启动该模块，在 nacos 界面上的`服务管理 > 服务列表` 可以看到开启的服务。\n\n![image-20230722120734690](../FILES/springcloud.md/image-20230722120734690.png)\n\n通过调用服务名的方式去调用其他接口：\n\n```java\n@GetMapping(\"/hello\")\npublic String hello() {\n  log.info(\"[test3 模块] 请求接口:/user/hello\");\n  return restTemplate.getForObject(\"http://test4-nacos/fruit/hello\", String.class);\n}\n```\n\n其中 `test4-nacos` 是其他模块的名称。\n\n但只是这样是不够的，还需添加一个注解 `@LoadBalanced`\n\n对于{% label 高版本 blue %}的 Spring Cloud，会报错 <span style=\"background-color: #b71c1c;color: #fff;padding: 2px 4px;border-radius: 3px;\"> java.net.UnknownHostException: test4-nacos </span>\n\n{% note info no-icon %}\n\n解决办法：\n\n因为Netflix的组件从2020年开始停止维护，因此spring cloud会逐渐弃用他家的组件,Ribbon就在其中，可以搜一个github里面spring-cloud-alibaba的issues。\n\n1. 使用spring-cloud-loadbalancer代替ribbon，在项目中引用依赖\n\n```xml\n<dependency>\n  <groupId>org.springframework.cloud</groupId>\n  <artifactId>spring-cloud-starter-loadbalancer</artifactId>\n</dependency>\n```\n\n2. 降低 Spring Cloud 版本，最好是选择 2020 以前的版本\n\n{% endnote %}\n\n## 基础配置\n\n一些配置默认即可，通常不需要在 `application.yml` 文件中修改。\n\n- server-addr 默认本机的8848端口\n- username 默认 nacos\n- password 默认 nacos\n- namespace 默认 public，区分不同项目、不同环境\n- ephemeral 默认 true，临时实例，服务停止时在一定时间后会进行删除\n- service 默认`${spring.application.name}`\n- group 跟命名空间一样，只是更细地划分\n- weight 默认 1， 权重\n- metadata 元数据，可以做扩展\n\n这些配置了解即可，因为可以通过可视化界面进行修改。\n\n# 负载均衡器 Ribbon\n\n{% note danger no-icon %}\n\n了解即可，高版本已弃用 Ribbon。\n\n建议选择 <span style=\"background-color: #0091ea;color: #fff;padding: 2px 4px;border-radius: 3px;\"> loadbalancer </span>\n\n{% endnote %}\n\n通过选择不同的服务实例，调用不同的服务。\n\n它们都继承 {% label AbstractLoadBalancerRule blue %}\n\n- RandomRule 随机\n- RoundRobinRule 轮询\n- RetryRule 轮询基础上重试\n- WeightedResponseTimeRule 权重，根据每个实例运行时间去计算各自的权重\n- ClientConfigEnableRoundRobinRule\n- BestAvailableRule 过滤失效服务，挑选并发最小\n- ZooeAvoidanceRule 【默认】\n- AvailabilityFilteringRule\n\n# 负载均衡器 LoadBalancer\n\n{% note success no-icon %}\n\n推荐使用\n\n{% endnote %}\n\n添加依赖：\n\n```xml\n<dependency>\n  <groupId>org.springframework.cloud</groupId>\n  <artifactId>spring-cloud-starter-loadbalancer</artifactId>\n</dependency>\n```\n\n一些常用规则：RoundRobinLoadBalancer\n\n可以仿照 `RoundRobinLoadBalancer` 写自定义规则。\n\n添加配置官方文档：[Cloud Native Applications (spring.io)](https://docs.spring.io/spring-cloud-commons/docs/4.0.3/reference/html/#spring-cloud-loadbalancer)\n\n规则写在扫描区域外部。\n\n# OpenFeign\n\nOpenFeign是一个显示声明式的WebService客户端。模块之间相互调用的工具。\n\n## 快速使用\n\n1. 加入依赖\n\n```xml\n<!-- OpenFeign -->\n<dependency>\n  <groupId>org.springframework.cloud</groupId>\n  <artifactId>spring-cloud-starter-openfeign</artifactId>\n</dependency>\n```\n\n2. 写调用其他模块接口\n\n创建一个 feign 包，然后再创建一个接口 `FruitFeign` \n\n```java\n@FeignClient(name = \"test4-nacos\", path = \"/fruit\")\npublic interface FruitFeign {\n    @GetMapping(\"/hello\")\n    String hello();\n}\n```\n\n@FeignClient 注解：\n\n- name 表示要调用哪一个服务（模块）\n- path 就是要访问的接口地址\n\n3. 调用前面的feign接口\n\n将 feign 层和 service 层作比较，前者是其他模块的接口，后者(service)是处于当前模块。\n\n```java\n@Autowired\nprivate FruitFeign fruitFeign;\n\n@GetMapping(\"/hello\")\npublic String hello() {\n  // 像调用 service 层一样简单\n  String msg = fruitFeign.hello();\n  return \"模块5:\" + msg;\n}\n```\n\n4. 加上注解 @EnableFeignClients\n\n如果没有这一步，提示 <span style=\"background-color: #b71c1c;color: #fff;padding: 2px 4px;border-radius: 3px;\">无法自动装配。找不到 'FruitFeign' 类型的 Bean</span>\n\n```java\n@SpringBootApplication\n// 启用 feign\n@EnableFeignClients\npublic class Test5Application {\n\t// main 方法\n}\n```\n\n","slug":"springcloud","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmow002m1kv25i0w7szj","content":"<h1 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h1><p>SpringCloud Alibaba是SpringCloud的子项目，SpringCloud Alibaba符合SpringCloud标准。</p>\n<p>具体大纲9大步：服务发现、负载均衡、模块通信、服务容错、消息驱动、网关、用户认证和授权、配置管理、调用链监控。</p>\n<div class=\"note success flat\"><p>Spring Cloud Alibaba 五大组件：</p>\n<ol>\n<li>Sentinel</li>\n<li>Nacos 注册中心、配置中心、服务管理（UI可视化）</li>\n<li>RocketMQ</li>\n<li>Dubbo</li>\n<li>Seata</li>\n</ol>\n</div>\n\n<ol>\n<li><p>服务发现 Nacos</p>\n<ul>\n<li><p>服务发现原理剖析</p>\n</li>\n<li><p>Nacos Server&#x2F;Clinet</p>\n</li>\n<li><p>高可用Nacos搭建</p>\n</li>\n</ul>\n</li>\n<li><p>负载均衡Ribbon</p>\n<ul>\n<li><p>负载均衡常见模式</p>\n</li>\n<li><p>RestTemplate整合Ribbon</p>\n</li>\n<li><p>Ribbon配置自定义</p>\n</li>\n<li><p>如何扩展Ribbon</p>\n</li>\n</ul>\n</li>\n<li><p>声明式HTTP客户端-Feign</p>\n<ul>\n<li>如何使用Fegin</li>\n<li>Fegin配置自定义</li>\n<li>如何扩展Fegin</li>\n</ul>\n</li>\n<li><p>服务容错Sentinel</p>\n<ul>\n<li>服务容错原理</li>\n<li>Sentinel</li>\n<li>Sentinel Dashboard</li>\n<li>Sentinel核心原理分析</li>\n</ul>\n</li>\n<li><p>消息驱动RocketMQ</p>\n<ul>\n<li>SpringCloud Stream</li>\n<li>实现异步消息推送与消费</li>\n</ul>\n</li>\n<li><p>API网关GateWay</p>\n<ul>\n<li>整合GateWay</li>\n<li>三个核心</li>\n<li>聚合微服务请求</li>\n</ul>\n</li>\n<li><p>用户认证与授权</p>\n<ul>\n<li>认证授权常见方案</li>\n<li>改造GateWay</li>\n<li>扩展Fegin</li>\n</ul>\n</li>\n<li><p>配置管理Nacos</p>\n<ul>\n<li>配置如何管理</li>\n<li>配置动态刷新</li>\n<li>配置管理的最佳实现</li>\n</ul>\n</li>\n<li><p>调用链监控Sleuth</p>\n<ul>\n<li>调用链监控剖析</li>\n<li>Sleuth使用</li>\n<li>Zipkin使用</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"/lingtan/../FILES/springcloud.md/image-20230721192248994.png\" alt=\"image-20230721192248994\"></p>\n<h1 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h1><p>版本说明可以参考下面网址：（Spring Cloud 和 Spring Boot 强相关）</p>\n<p><a href=\"https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E\">版本说明 · alibaba&#x2F;spring-cloud-alibaba Wiki · GitHub</a></p>\n<p><img src=\"/lingtan/../FILES/springcloud.md/image-20230721172118159.png\" alt=\"image-20230721172118159\"></p>\n<p>根据版本信息，环境选择：</p>\n<ul>\n<li>Spring Cloud Alibaba <mark class=\"hl-label green\">2022.0.0.0-RC2</mark> </li>\n<li>Spring Cloud  <mark class=\"hl-label green\">2022.0.0</mark> </li>\n<li>Spring Boot  <mark class=\"hl-label green\">3.0.2</mark> </li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">alibaba-version</span>&gt;</span>2022.0.0.0-RC2<span class=\"tag\">&lt;/<span class=\"name\">alibaba-version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">spring-cloud.version</span>&gt;</span>2022.0.0<span class=\"tag\">&lt;/<span class=\"name\">spring-cloud.version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 继承 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- spring cloud alibaba--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;alibaba-version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>pom<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>import<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Spring Cloud --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-dependencies<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>pom<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>import<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Nacos\"><a href=\"#Nacos\" class=\"headerlink\" title=\"Nacos\"></a>Nacos</h1><p>Nacos：注册中心、配置中心、服务管理（可视化界面）</p>\n<p>关键特性：</p>\n<ul>\n<li>服务发现和服务健康监测</li>\n<li>动态配置服务</li>\n<li>动态 DNS 服务</li>\n<li>服务及其元数据管理</li>\n</ul>\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>下载地址：<a href=\"https://github.com/alibaba/nacos/releases\">https://github.com/alibaba/nacos/releases</a></p>\n<p>下载的版本要根据 <code>Spring Cloud Alibaba</code> 组件版本关系。</p>\n<p><img src=\"/lingtan/../FILES/springcloud.md/image-20230721203610510.png\" alt=\"image-20230721203610510\"></p>\n<p>之前选择的 Spring Cloud Alibaba <mark class=\"hl-label green\">2022.0.0.0-RC2</mark> ，现在我们应该要下载 Nacos  <mark class=\"hl-label green\">2.2.1</mark> </p>\n<p><img src=\"/lingtan/../FILES/springcloud.md/image-20230721203805155.png\" alt=\"image-20230721203805155\"></p>\n<p>下载需要等待一会儿时间~</p>\n<p>下载下来，解压缩”安装包“，解压后得到如下目录：</p>\n<p><img src=\"/lingtan/../FILES/springcloud.md/image-20230721203949649.png\" alt=\"image-20230721203949649\"></p>\n<h2 id=\"启动服务器\"><a href=\"#启动服务器\" class=\"headerlink\" title=\"启动服务器\"></a>启动服务器</h2><p>参考文档：<a href=\"https://nacos.io/zh-cn/docs/v2/quickstart/quick-start.html\">Nacos 快速开始</a></p>\n<h3 id=\"单机模式\"><a href=\"#单机模式\" class=\"headerlink\" title=\"单机模式\"></a>单机模式</h3><p>打开 <code>bin</code> 目录下面的 startup.cmd 文件，通过编辑方式打开（可以拖到 VSCode 中）。</p>\n<p><img src=\"/lingtan/../FILES/springcloud.md/image-20230721204316658.png\" alt=\"image-20230721204316658\"></p>\n<p>修改模式为 <mark class=\"hl-label blue\">单机模式</mark> 。</p>\n<div class=\"note info no-icon flat\"><p>模式可以选择2种模式：</p>\n<ol>\n<li>cluster 集群模式</li>\n<li>standalone 单机模式</li>\n</ol>\n</div>\n\n<p>模式修改完成后，记得保存。</p>\n<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><blockquote>\n<p>在2.2.0.1和2.2.1版本时，必须执行此变更，否则无法启动；其他版本为建议设置。</p>\n</blockquote>\n<p>修改<code>conf</code>目录下的<code>application.properties</code>文件。</p>\n<p>设置其中的<code>nacos.core.auth.plugin.nacos.token.secret.key</code>值，详情可查看<a href=\"https://nacos.io/zh-cn/docs/v2/plugin/auth-plugin.html\">鉴权-自定义密钥</a>.</p>\n<div class=\"note warning flat\"><p>注意，文档中的默认值<code>SecretKey012345678901234567890123456789012345678901234567890123456789</code>和<code>VGhpc0lzTXlDdXN0b21TZWNyZXRLZXkwMTIzNDU2Nzg=</code>为公开默认值，可用于临时测试，实际使用时请<strong>务必</strong>更换为自定义的其他有效值。</p>\n</div>\n\n<p>将密钥添加到下图黄圈处：</p>\n<p><img src=\"/lingtan/../FILES/springcloud.md/image-20230721213913950.png\" alt=\"image-20230721213913950\"></p>\n<p>最后双击 <code>startup.cmd</code> 文件。</p>\n<p>显示下方文字表示启动成功：</p>\n<blockquote>\n<p>2023-07-21 21:40:55,435 INFO Nacos started successfully in stand alone mode. use embedded storage</p>\n</blockquote>\n<p>现在访问 Nacos 网址。</p>\n<p><img src=\"/lingtan/../FILES/springcloud.md/image-20230721214325200.png\" alt=\"image-20230721214325200\"></p>\n<p>访问：<code>http://192.168.169.1:8848/nacos/index.html</code> 即可进入登录页面。</p>\n<div class=\"note primary flat no-icon flat\"><p>账号：nacos</p>\n<p>密码：nacos</p>\n</div>\n\n<p>关闭服务器双击<mark class=\"hl-label purple\">shutdown.cmd</mark> 运行文件。</p>\n<h2 id=\"服务注册发现\"><a href=\"#服务注册发现\" class=\"headerlink\" title=\"服务注册发现\"></a>服务注册发现</h2><p>在模块的 pom.xml 文件中添加下面依赖：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>然后添加配置（在<code>application.yml</code> 文件）</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">8083</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">application:</span></span><br><span class=\"line\">  \t<span class=\"comment\"># 模块起名</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">test4-nacos</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">nacos:</span></span><br><span class=\"line\">      <span class=\"attr\">discovery:</span></span><br><span class=\"line\">      \t<span class=\"comment\"># nacos 访问地址</span></span><br><span class=\"line\">        <span class=\"attr\">server-addr:</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span><span class=\"string\">:8848</span></span><br><span class=\"line\">        <span class=\"comment\"># nacos 用户名</span></span><br><span class=\"line\">        <span class=\"attr\">username:</span> <span class=\"string\">nacos</span></span><br><span class=\"line\">        <span class=\"comment\"># nacos 密码</span></span><br><span class=\"line\">        <span class=\"attr\">password:</span> <span class=\"string\">nacos</span></span><br><span class=\"line\">        <span class=\"comment\"># nacos 命名空间: 可以区分开发环境和生产环境</span></span><br><span class=\"line\">        <span class=\"attr\">namespace:</span> <span class=\"string\">public</span></span><br></pre></td></tr></table></figure>\n\n<p>启动该模块，在 nacos 界面上的<code>服务管理 &gt; 服务列表</code> 可以看到开启的服务。</p>\n<p><img src=\"/lingtan/../FILES/springcloud.md/image-20230722120734690.png\" alt=\"image-20230722120734690\"></p>\n<p>通过调用服务名的方式去调用其他接口：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@GetMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">hello</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  log.info(<span class=\"string\">&quot;[test3 模块] 请求接口:/user/hello&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> restTemplate.getForObject(<span class=\"string\">&quot;http://test4-nacos/fruit/hello&quot;</span>, String.class);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>其中 <code>test4-nacos</code> 是其他模块的名称。</p>\n<p>但只是这样是不够的，还需添加一个注解 <code>@LoadBalanced</code></p>\n<p>对于<mark class=\"hl-label blue\">高版本</mark> 的 Spring Cloud，会报错 <span style=\"background-color: #b71c1c;color: #fff;padding: 2px 4px;border-radius: 3px;\"> java.net.UnknownHostException: test4-nacos </span></p>\n<div class=\"note info no-icon flat\"><p>解决办法：</p>\n<p>因为Netflix的组件从2020年开始停止维护，因此spring cloud会逐渐弃用他家的组件,Ribbon就在其中，可以搜一个github里面spring-cloud-alibaba的issues。</p>\n<ol>\n<li>使用spring-cloud-loadbalancer代替ribbon，在项目中引用依赖</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-loadbalancer<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>降低 Spring Cloud 版本，最好是选择 2020 以前的版本</li>\n</ol>\n</div>\n\n<h2 id=\"基础配置\"><a href=\"#基础配置\" class=\"headerlink\" title=\"基础配置\"></a>基础配置</h2><p>一些配置默认即可，通常不需要在 <code>application.yml</code> 文件中修改。</p>\n<ul>\n<li>server-addr 默认本机的8848端口</li>\n<li>username 默认 nacos</li>\n<li>password 默认 nacos</li>\n<li>namespace 默认 public，区分不同项目、不同环境</li>\n<li>ephemeral 默认 true，临时实例，服务停止时在一定时间后会进行删除</li>\n<li>service 默认<code>$&#123;spring.application.name&#125;</code></li>\n<li>group 跟命名空间一样，只是更细地划分</li>\n<li>weight 默认 1， 权重</li>\n<li>metadata 元数据，可以做扩展</li>\n</ul>\n<p>这些配置了解即可，因为可以通过可视化界面进行修改。</p>\n<h1 id=\"负载均衡器-Ribbon\"><a href=\"#负载均衡器-Ribbon\" class=\"headerlink\" title=\"负载均衡器 Ribbon\"></a>负载均衡器 Ribbon</h1><div class=\"note danger no-icon flat\"><p>了解即可，高版本已弃用 Ribbon。</p>\n<p>建议选择 <span style=\"background-color: #0091ea;color: #fff;padding: 2px 4px;border-radius: 3px;\"> loadbalancer </span></p>\n</div>\n\n<p>通过选择不同的服务实例，调用不同的服务。</p>\n<p>它们都继承 <mark class=\"hl-label blue\">AbstractLoadBalancerRule</mark> </p>\n<ul>\n<li>RandomRule 随机</li>\n<li>RoundRobinRule 轮询</li>\n<li>RetryRule 轮询基础上重试</li>\n<li>WeightedResponseTimeRule 权重，根据每个实例运行时间去计算各自的权重</li>\n<li>ClientConfigEnableRoundRobinRule</li>\n<li>BestAvailableRule 过滤失效服务，挑选并发最小</li>\n<li>ZooeAvoidanceRule 【默认】</li>\n<li>AvailabilityFilteringRule</li>\n</ul>\n<h1 id=\"负载均衡器-LoadBalancer\"><a href=\"#负载均衡器-LoadBalancer\" class=\"headerlink\" title=\"负载均衡器 LoadBalancer\"></a>负载均衡器 LoadBalancer</h1><div class=\"note success no-icon flat\"><p>推荐使用</p>\n</div>\n\n<p>添加依赖：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-loadbalancer<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>一些常用规则：RoundRobinLoadBalancer</p>\n<p>可以仿照 <code>RoundRobinLoadBalancer</code> 写自定义规则。</p>\n<p>添加配置官方文档：<a href=\"https://docs.spring.io/spring-cloud-commons/docs/4.0.3/reference/html/#spring-cloud-loadbalancer\">Cloud Native Applications (spring.io)</a></p>\n<p>规则写在扫描区域外部。</p>\n<h1 id=\"OpenFeign\"><a href=\"#OpenFeign\" class=\"headerlink\" title=\"OpenFeign\"></a>OpenFeign</h1><p>OpenFeign是一个显示声明式的WebService客户端。模块之间相互调用的工具。</p>\n<h2 id=\"快速使用\"><a href=\"#快速使用\" class=\"headerlink\" title=\"快速使用\"></a>快速使用</h2><ol>\n<li>加入依赖</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- OpenFeign --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>写调用其他模块接口</li>\n</ol>\n<p>创建一个 feign 包，然后再创建一个接口 <code>FruitFeign</code> </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@FeignClient(name = &quot;test4-nacos&quot;, path = &quot;/fruit&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">FruitFeign</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\">    String <span class=\"title function_\">hello</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>@FeignClient 注解：</p>\n<ul>\n<li>name 表示要调用哪一个服务（模块）</li>\n<li>path 就是要访问的接口地址</li>\n</ul>\n<ol start=\"3\">\n<li>调用前面的feign接口</li>\n</ol>\n<p>将 feign 层和 service 层作比较，前者是其他模块的接口，后者(service)是处于当前模块。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> FruitFeign fruitFeign;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@GetMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">hello</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 像调用 service 层一样简单</span></span><br><span class=\"line\">  <span class=\"type\">String</span> <span class=\"variable\">msg</span> <span class=\"operator\">=</span> fruitFeign.hello();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&quot;模块5:&quot;</span> + msg;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>加上注解 @EnableFeignClients</li>\n</ol>\n<p>如果没有这一步，提示 <span style=\"background-color: #b71c1c;color: #fff;padding: 2px 4px;border-radius: 3px;\">无法自动装配。找不到 ‘FruitFeign’ 类型的 Bean</span></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"comment\">// 启用 feign</span></span><br><span class=\"line\"><span class=\"meta\">@EnableFeignClients</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test5Application</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// main 方法</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h1><p>SpringCloud Alibaba是SpringCloud的子项目，SpringCloud Alibaba符合SpringCloud标准。</p>\n<p>具体大纲9大步：服务发现、负载均衡、模块通信、服务容错、消息驱动、网关、用户认证和授权、配置管理、调用链监控。</p>\n<div class=\"note success flat\"><p>Spring Cloud Alibaba 五大组件：</p>\n<ol>\n<li>Sentinel</li>\n<li>Nacos 注册中心、配置中心、服务管理（UI可视化）</li>\n<li>RocketMQ</li>\n<li>Dubbo</li>\n<li>Seata</li>\n</ol>\n</div>\n\n<ol>\n<li><p>服务发现 Nacos</p>\n<ul>\n<li><p>服务发现原理剖析</p>\n</li>\n<li><p>Nacos Server&#x2F;Clinet</p>\n</li>\n<li><p>高可用Nacos搭建</p>\n</li>\n</ul>\n</li>\n<li><p>负载均衡Ribbon</p>\n<ul>\n<li><p>负载均衡常见模式</p>\n</li>\n<li><p>RestTemplate整合Ribbon</p>\n</li>\n<li><p>Ribbon配置自定义</p>\n</li>\n<li><p>如何扩展Ribbon</p>\n</li>\n</ul>\n</li>\n<li><p>声明式HTTP客户端-Feign</p>\n<ul>\n<li>如何使用Fegin</li>\n<li>Fegin配置自定义</li>\n<li>如何扩展Fegin</li>\n</ul>\n</li>\n<li><p>服务容错Sentinel</p>\n<ul>\n<li>服务容错原理</li>\n<li>Sentinel</li>\n<li>Sentinel Dashboard</li>\n<li>Sentinel核心原理分析</li>\n</ul>\n</li>\n<li><p>消息驱动RocketMQ</p>\n<ul>\n<li>SpringCloud Stream</li>\n<li>实现异步消息推送与消费</li>\n</ul>\n</li>\n<li><p>API网关GateWay</p>\n<ul>\n<li>整合GateWay</li>\n<li>三个核心</li>\n<li>聚合微服务请求</li>\n</ul>\n</li>\n<li><p>用户认证与授权</p>\n<ul>\n<li>认证授权常见方案</li>\n<li>改造GateWay</li>\n<li>扩展Fegin</li>\n</ul>\n</li>\n<li><p>配置管理Nacos</p>\n<ul>\n<li>配置如何管理</li>\n<li>配置动态刷新</li>\n<li>配置管理的最佳实现</li>\n</ul>\n</li>\n<li><p>调用链监控Sleuth</p>\n<ul>\n<li>调用链监控剖析</li>\n<li>Sleuth使用</li>\n<li>Zipkin使用</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"/lingtan/../FILES/springcloud.md/image-20230721192248994.png\" alt=\"image-20230721192248994\"></p>\n<h1 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h1><p>版本说明可以参考下面网址：（Spring Cloud 和 Spring Boot 强相关）</p>\n<p><a href=\"https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E\">版本说明 · alibaba&#x2F;spring-cloud-alibaba Wiki · GitHub</a></p>\n<p><img src=\"/lingtan/../FILES/springcloud.md/image-20230721172118159.png\" alt=\"image-20230721172118159\"></p>\n<p>根据版本信息，环境选择：</p>\n<ul>\n<li>Spring Cloud Alibaba <mark class=\"hl-label green\">2022.0.0.0-RC2</mark> </li>\n<li>Spring Cloud  <mark class=\"hl-label green\">2022.0.0</mark> </li>\n<li>Spring Boot  <mark class=\"hl-label green\">3.0.2</mark> </li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">alibaba-version</span>&gt;</span>2022.0.0.0-RC2<span class=\"tag\">&lt;/<span class=\"name\">alibaba-version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">spring-cloud.version</span>&gt;</span>2022.0.0<span class=\"tag\">&lt;/<span class=\"name\">spring-cloud.version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 继承 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- spring cloud alibaba--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;alibaba-version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>pom<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>import<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Spring Cloud --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-dependencies<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>pom<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>import<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Nacos\"><a href=\"#Nacos\" class=\"headerlink\" title=\"Nacos\"></a>Nacos</h1><p>Nacos：注册中心、配置中心、服务管理（可视化界面）</p>\n<p>关键特性：</p>\n<ul>\n<li>服务发现和服务健康监测</li>\n<li>动态配置服务</li>\n<li>动态 DNS 服务</li>\n<li>服务及其元数据管理</li>\n</ul>\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>下载地址：<a href=\"https://github.com/alibaba/nacos/releases\">https://github.com/alibaba/nacos/releases</a></p>\n<p>下载的版本要根据 <code>Spring Cloud Alibaba</code> 组件版本关系。</p>\n<p><img src=\"/lingtan/../FILES/springcloud.md/image-20230721203610510.png\" alt=\"image-20230721203610510\"></p>\n<p>之前选择的 Spring Cloud Alibaba <mark class=\"hl-label green\">2022.0.0.0-RC2</mark> ，现在我们应该要下载 Nacos  <mark class=\"hl-label green\">2.2.1</mark> </p>\n<p><img src=\"/lingtan/../FILES/springcloud.md/image-20230721203805155.png\" alt=\"image-20230721203805155\"></p>\n<p>下载需要等待一会儿时间~</p>\n<p>下载下来，解压缩”安装包“，解压后得到如下目录：</p>\n<p><img src=\"/lingtan/../FILES/springcloud.md/image-20230721203949649.png\" alt=\"image-20230721203949649\"></p>\n<h2 id=\"启动服务器\"><a href=\"#启动服务器\" class=\"headerlink\" title=\"启动服务器\"></a>启动服务器</h2><p>参考文档：<a href=\"https://nacos.io/zh-cn/docs/v2/quickstart/quick-start.html\">Nacos 快速开始</a></p>\n<h3 id=\"单机模式\"><a href=\"#单机模式\" class=\"headerlink\" title=\"单机模式\"></a>单机模式</h3><p>打开 <code>bin</code> 目录下面的 startup.cmd 文件，通过编辑方式打开（可以拖到 VSCode 中）。</p>\n<p><img src=\"/lingtan/../FILES/springcloud.md/image-20230721204316658.png\" alt=\"image-20230721204316658\"></p>\n<p>修改模式为 <mark class=\"hl-label blue\">单机模式</mark> 。</p>\n<div class=\"note info no-icon flat\"><p>模式可以选择2种模式：</p>\n<ol>\n<li>cluster 集群模式</li>\n<li>standalone 单机模式</li>\n</ol>\n</div>\n\n<p>模式修改完成后，记得保存。</p>\n<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><blockquote>\n<p>在2.2.0.1和2.2.1版本时，必须执行此变更，否则无法启动；其他版本为建议设置。</p>\n</blockquote>\n<p>修改<code>conf</code>目录下的<code>application.properties</code>文件。</p>\n<p>设置其中的<code>nacos.core.auth.plugin.nacos.token.secret.key</code>值，详情可查看<a href=\"https://nacos.io/zh-cn/docs/v2/plugin/auth-plugin.html\">鉴权-自定义密钥</a>.</p>\n<div class=\"note warning flat\"><p>注意，文档中的默认值<code>SecretKey012345678901234567890123456789012345678901234567890123456789</code>和<code>VGhpc0lzTXlDdXN0b21TZWNyZXRLZXkwMTIzNDU2Nzg=</code>为公开默认值，可用于临时测试，实际使用时请<strong>务必</strong>更换为自定义的其他有效值。</p>\n</div>\n\n<p>将密钥添加到下图黄圈处：</p>\n<p><img src=\"/lingtan/../FILES/springcloud.md/image-20230721213913950.png\" alt=\"image-20230721213913950\"></p>\n<p>最后双击 <code>startup.cmd</code> 文件。</p>\n<p>显示下方文字表示启动成功：</p>\n<blockquote>\n<p>2023-07-21 21:40:55,435 INFO Nacos started successfully in stand alone mode. use embedded storage</p>\n</blockquote>\n<p>现在访问 Nacos 网址。</p>\n<p><img src=\"/lingtan/../FILES/springcloud.md/image-20230721214325200.png\" alt=\"image-20230721214325200\"></p>\n<p>访问：<code>http://192.168.169.1:8848/nacos/index.html</code> 即可进入登录页面。</p>\n<div class=\"note primary flat no-icon flat\"><p>账号：nacos</p>\n<p>密码：nacos</p>\n</div>\n\n<p>关闭服务器双击<mark class=\"hl-label purple\">shutdown.cmd</mark> 运行文件。</p>\n<h2 id=\"服务注册发现\"><a href=\"#服务注册发现\" class=\"headerlink\" title=\"服务注册发现\"></a>服务注册发现</h2><p>在模块的 pom.xml 文件中添加下面依赖：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>然后添加配置（在<code>application.yml</code> 文件）</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">8083</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">application:</span></span><br><span class=\"line\">  \t<span class=\"comment\"># 模块起名</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">test4-nacos</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">nacos:</span></span><br><span class=\"line\">      <span class=\"attr\">discovery:</span></span><br><span class=\"line\">      \t<span class=\"comment\"># nacos 访问地址</span></span><br><span class=\"line\">        <span class=\"attr\">server-addr:</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span><span class=\"string\">:8848</span></span><br><span class=\"line\">        <span class=\"comment\"># nacos 用户名</span></span><br><span class=\"line\">        <span class=\"attr\">username:</span> <span class=\"string\">nacos</span></span><br><span class=\"line\">        <span class=\"comment\"># nacos 密码</span></span><br><span class=\"line\">        <span class=\"attr\">password:</span> <span class=\"string\">nacos</span></span><br><span class=\"line\">        <span class=\"comment\"># nacos 命名空间: 可以区分开发环境和生产环境</span></span><br><span class=\"line\">        <span class=\"attr\">namespace:</span> <span class=\"string\">public</span></span><br></pre></td></tr></table></figure>\n\n<p>启动该模块，在 nacos 界面上的<code>服务管理 &gt; 服务列表</code> 可以看到开启的服务。</p>\n<p><img src=\"/lingtan/../FILES/springcloud.md/image-20230722120734690.png\" alt=\"image-20230722120734690\"></p>\n<p>通过调用服务名的方式去调用其他接口：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@GetMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">hello</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  log.info(<span class=\"string\">&quot;[test3 模块] 请求接口:/user/hello&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> restTemplate.getForObject(<span class=\"string\">&quot;http://test4-nacos/fruit/hello&quot;</span>, String.class);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>其中 <code>test4-nacos</code> 是其他模块的名称。</p>\n<p>但只是这样是不够的，还需添加一个注解 <code>@LoadBalanced</code></p>\n<p>对于<mark class=\"hl-label blue\">高版本</mark> 的 Spring Cloud，会报错 <span style=\"background-color: #b71c1c;color: #fff;padding: 2px 4px;border-radius: 3px;\"> java.net.UnknownHostException: test4-nacos </span></p>\n<div class=\"note info no-icon flat\"><p>解决办法：</p>\n<p>因为Netflix的组件从2020年开始停止维护，因此spring cloud会逐渐弃用他家的组件,Ribbon就在其中，可以搜一个github里面spring-cloud-alibaba的issues。</p>\n<ol>\n<li>使用spring-cloud-loadbalancer代替ribbon，在项目中引用依赖</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-loadbalancer<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>降低 Spring Cloud 版本，最好是选择 2020 以前的版本</li>\n</ol>\n</div>\n\n<h2 id=\"基础配置\"><a href=\"#基础配置\" class=\"headerlink\" title=\"基础配置\"></a>基础配置</h2><p>一些配置默认即可，通常不需要在 <code>application.yml</code> 文件中修改。</p>\n<ul>\n<li>server-addr 默认本机的8848端口</li>\n<li>username 默认 nacos</li>\n<li>password 默认 nacos</li>\n<li>namespace 默认 public，区分不同项目、不同环境</li>\n<li>ephemeral 默认 true，临时实例，服务停止时在一定时间后会进行删除</li>\n<li>service 默认<code>$&#123;spring.application.name&#125;</code></li>\n<li>group 跟命名空间一样，只是更细地划分</li>\n<li>weight 默认 1， 权重</li>\n<li>metadata 元数据，可以做扩展</li>\n</ul>\n<p>这些配置了解即可，因为可以通过可视化界面进行修改。</p>\n<h1 id=\"负载均衡器-Ribbon\"><a href=\"#负载均衡器-Ribbon\" class=\"headerlink\" title=\"负载均衡器 Ribbon\"></a>负载均衡器 Ribbon</h1><div class=\"note danger no-icon flat\"><p>了解即可，高版本已弃用 Ribbon。</p>\n<p>建议选择 <span style=\"background-color: #0091ea;color: #fff;padding: 2px 4px;border-radius: 3px;\"> loadbalancer </span></p>\n</div>\n\n<p>通过选择不同的服务实例，调用不同的服务。</p>\n<p>它们都继承 <mark class=\"hl-label blue\">AbstractLoadBalancerRule</mark> </p>\n<ul>\n<li>RandomRule 随机</li>\n<li>RoundRobinRule 轮询</li>\n<li>RetryRule 轮询基础上重试</li>\n<li>WeightedResponseTimeRule 权重，根据每个实例运行时间去计算各自的权重</li>\n<li>ClientConfigEnableRoundRobinRule</li>\n<li>BestAvailableRule 过滤失效服务，挑选并发最小</li>\n<li>ZooeAvoidanceRule 【默认】</li>\n<li>AvailabilityFilteringRule</li>\n</ul>\n<h1 id=\"负载均衡器-LoadBalancer\"><a href=\"#负载均衡器-LoadBalancer\" class=\"headerlink\" title=\"负载均衡器 LoadBalancer\"></a>负载均衡器 LoadBalancer</h1><div class=\"note success no-icon flat\"><p>推荐使用</p>\n</div>\n\n<p>添加依赖：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-loadbalancer<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>一些常用规则：RoundRobinLoadBalancer</p>\n<p>可以仿照 <code>RoundRobinLoadBalancer</code> 写自定义规则。</p>\n<p>添加配置官方文档：<a href=\"https://docs.spring.io/spring-cloud-commons/docs/4.0.3/reference/html/#spring-cloud-loadbalancer\">Cloud Native Applications (spring.io)</a></p>\n<p>规则写在扫描区域外部。</p>\n<h1 id=\"OpenFeign\"><a href=\"#OpenFeign\" class=\"headerlink\" title=\"OpenFeign\"></a>OpenFeign</h1><p>OpenFeign是一个显示声明式的WebService客户端。模块之间相互调用的工具。</p>\n<h2 id=\"快速使用\"><a href=\"#快速使用\" class=\"headerlink\" title=\"快速使用\"></a>快速使用</h2><ol>\n<li>加入依赖</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- OpenFeign --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>写调用其他模块接口</li>\n</ol>\n<p>创建一个 feign 包，然后再创建一个接口 <code>FruitFeign</code> </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@FeignClient(name = &quot;test4-nacos&quot;, path = &quot;/fruit&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">FruitFeign</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\">    String <span class=\"title function_\">hello</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>@FeignClient 注解：</p>\n<ul>\n<li>name 表示要调用哪一个服务（模块）</li>\n<li>path 就是要访问的接口地址</li>\n</ul>\n<ol start=\"3\">\n<li>调用前面的feign接口</li>\n</ol>\n<p>将 feign 层和 service 层作比较，前者是其他模块的接口，后者(service)是处于当前模块。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> FruitFeign fruitFeign;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@GetMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">hello</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 像调用 service 层一样简单</span></span><br><span class=\"line\">  <span class=\"type\">String</span> <span class=\"variable\">msg</span> <span class=\"operator\">=</span> fruitFeign.hello();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&quot;模块5:&quot;</span> + msg;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>加上注解 @EnableFeignClients</li>\n</ol>\n<p>如果没有这一步，提示 <span style=\"background-color: #b71c1c;color: #fff;padding: 2px 4px;border-radius: 3px;\">无法自动装配。找不到 ‘FruitFeign’ 类型的 Bean</span></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"comment\">// 启用 feign</span></span><br><span class=\"line\"><span class=\"meta\">@EnableFeignClients</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test5Application</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// main 方法</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"微信小程序开发","date":"2024-03-05T07:14:41.932Z","updated":"2024-03-05T07:14:06.312Z","cover":"https://s1.ax1x.com/2023/06/29/pC0A6k6.png","_content":"\n# 起步\n\n{% note success %}\n\n熟悉小程序的创建方式，可以跳过 <b> 起步 </b> 部分\n\n{% endnote %}\n\n根据自己情况选择，不同的模板。\n\n1. 目录自定义\n2. AppID：选择你自己的\n3. 选择 <span style=\"background-color: yellow\">不使用云服务</span> （对初学者友好，没有太多文件）\n4. 根据需要选中<span style=\"background-color: #64b5f6\"> TS + Scss 模板 </span>\n\n![image-20230629202305598](../FILES/小程序开发.md/image-20230629202305598.png)\n\n选择你自己的 UI 组件库（或者原生写小程序，不采取第三方UI）\n\n# UI 组件库的选择\n\n> 优先采取 Vant Weapps （如果不用组件库，可跳过）\n>\n> 官网：[前往 Vant 组件库](https://vant-contrib.gitee.io/vant-weapp/#/quickstart)\n\n- 安装 npm 包\n\n```powershell\nyarn add @vant/weapp --production\n```\n\n- 删除新版小程序样式\n\n`app.json` 文件中删除 \"style\": \"v2\"\n\n![image-20230629203241718](../FILES/小程序开发.md/image-20230629203241718.png)\n\n- 手动索引到正确的 npm 依赖位置\n\n```json\n{\n  //其他信息...\n  \"setting\": {\n    //其他配置...\n    \"packNpmManually\": true,\n    \"packNpmRelationList\": [\n      {\n        \"packageJsonPath\": \"./package.json\",\n        \"miniprogramNpmDistDir\": \"./miniprogram/\"\n      }\n    ]\n  }\n}\n```\n\n![image-20230629210334688](../FILES/小程序开发.md/image-20230629210334688.png)\n\n- 构建 npm\n\n{% note success %}\n\n这一步至关重要，需要从远程安装包。\n\n{% endnote %}\n\n具体步骤：选中“工具”-“构建npm”,等待构建完成\n\n![image-20230629210559834](../FILES/小程序开发.md/image-20230629210559834.png)\n\n构建完成，应该能够看到已经成功下载 vant \n\n![image-20230629210753331](../FILES/小程序开发.md/image-20230629210753331.png)\n\n# 开始使用\n\n> 完成前面2个步骤，就按照 vant 文档写吧\n\n1. 基本使用\n\n在页面的 {% label json文件 green %} 中添加组件\n\n```json\n{\n  \"usingComponents\": {\n    // 普通按钮\n    \"van-button\": \"@vant/weapp/button/index\"\n  }\n}\n```\n\n2. 添加 json 后，在 wxml 中使用组件\n\n```html\n<van-button type=\"primary\">按钮</van-button>\n```\n\n3. 效果图\n\n![image-20230629211438057](../FILES/小程序开发.md/image-20230629211438057.png)\n\n其他组件：[Button 按钮及其其他组件](https://vant-contrib.gitee.io/vant-weapp/#/button)\n","source":"_posts/小程序开发.md","raw":"---\ntitle: 微信小程序开发\ndate: \nupdated: \ntags: [typescript, javascript]\ncategories: 前端\ncover: https://s1.ax1x.com/2023/06/29/pC0A6k6.png\n---\n\n# 起步\n\n{% note success %}\n\n熟悉小程序的创建方式，可以跳过 <b> 起步 </b> 部分\n\n{% endnote %}\n\n根据自己情况选择，不同的模板。\n\n1. 目录自定义\n2. AppID：选择你自己的\n3. 选择 <span style=\"background-color: yellow\">不使用云服务</span> （对初学者友好，没有太多文件）\n4. 根据需要选中<span style=\"background-color: #64b5f6\"> TS + Scss 模板 </span>\n\n![image-20230629202305598](../FILES/小程序开发.md/image-20230629202305598.png)\n\n选择你自己的 UI 组件库（或者原生写小程序，不采取第三方UI）\n\n# UI 组件库的选择\n\n> 优先采取 Vant Weapps （如果不用组件库，可跳过）\n>\n> 官网：[前往 Vant 组件库](https://vant-contrib.gitee.io/vant-weapp/#/quickstart)\n\n- 安装 npm 包\n\n```powershell\nyarn add @vant/weapp --production\n```\n\n- 删除新版小程序样式\n\n`app.json` 文件中删除 \"style\": \"v2\"\n\n![image-20230629203241718](../FILES/小程序开发.md/image-20230629203241718.png)\n\n- 手动索引到正确的 npm 依赖位置\n\n```json\n{\n  //其他信息...\n  \"setting\": {\n    //其他配置...\n    \"packNpmManually\": true,\n    \"packNpmRelationList\": [\n      {\n        \"packageJsonPath\": \"./package.json\",\n        \"miniprogramNpmDistDir\": \"./miniprogram/\"\n      }\n    ]\n  }\n}\n```\n\n![image-20230629210334688](../FILES/小程序开发.md/image-20230629210334688.png)\n\n- 构建 npm\n\n{% note success %}\n\n这一步至关重要，需要从远程安装包。\n\n{% endnote %}\n\n具体步骤：选中“工具”-“构建npm”,等待构建完成\n\n![image-20230629210559834](../FILES/小程序开发.md/image-20230629210559834.png)\n\n构建完成，应该能够看到已经成功下载 vant \n\n![image-20230629210753331](../FILES/小程序开发.md/image-20230629210753331.png)\n\n# 开始使用\n\n> 完成前面2个步骤，就按照 vant 文档写吧\n\n1. 基本使用\n\n在页面的 {% label json文件 green %} 中添加组件\n\n```json\n{\n  \"usingComponents\": {\n    // 普通按钮\n    \"van-button\": \"@vant/weapp/button/index\"\n  }\n}\n```\n\n2. 添加 json 后，在 wxml 中使用组件\n\n```html\n<van-button type=\"primary\">按钮</van-button>\n```\n\n3. 效果图\n\n![image-20230629211438057](../FILES/小程序开发.md/image-20230629211438057.png)\n\n其他组件：[Button 按钮及其其他组件](https://vant-contrib.gitee.io/vant-weapp/#/button)\n","slug":"小程序开发","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmow002p1kv2disb15fg","content":"<h1 id=\"起步\"><a href=\"#起步\" class=\"headerlink\" title=\"起步\"></a>起步</h1><div class=\"note success flat\"><p>熟悉小程序的创建方式，可以跳过 <b> 起步 </b> 部分</p>\n</div>\n\n<p>根据自己情况选择，不同的模板。</p>\n<ol>\n<li>目录自定义</li>\n<li>AppID：选择你自己的</li>\n<li>选择 <span style=\"background-color: yellow\">不使用云服务</span> （对初学者友好，没有太多文件）</li>\n<li>根据需要选中<span style=\"background-color: #64b5f6\"> TS + Scss 模板 </span></li>\n</ol>\n<p><img src=\"/lingtan/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629202305598.png\" alt=\"image-20230629202305598\"></p>\n<p>选择你自己的 UI 组件库（或者原生写小程序，不采取第三方UI）</p>\n<h1 id=\"UI-组件库的选择\"><a href=\"#UI-组件库的选择\" class=\"headerlink\" title=\"UI 组件库的选择\"></a>UI 组件库的选择</h1><blockquote>\n<p>优先采取 Vant Weapps （如果不用组件库，可跳过）</p>\n<p>官网：<a href=\"https://vant-contrib.gitee.io/vant-weapp/#/quickstart\">前往 Vant 组件库</a></p>\n</blockquote>\n<ul>\n<li>安装 npm 包</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add @vant/weapp <span class=\"literal\">--production</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>删除新版小程序样式</li>\n</ul>\n<p><code>app.json</code> 文件中删除 “style”: “v2”</p>\n<p><img src=\"/lingtan/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629203241718.png\" alt=\"image-20230629203241718\"></p>\n<ul>\n<li>手动索引到正确的 npm 依赖位置</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"comment\">//其他信息...</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;setting&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//其他配置...</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;packNpmManually&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;packNpmRelationList&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;packageJsonPath&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./package.json&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;miniprogramNpmDistDir&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./miniprogram/&quot;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">]</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629210334688.png\" alt=\"image-20230629210334688\"></p>\n<ul>\n<li>构建 npm</li>\n</ul>\n<div class=\"note success flat\"><p>这一步至关重要，需要从远程安装包。</p>\n</div>\n\n<p>具体步骤：选中“工具”-“构建npm”,等待构建完成</p>\n<p><img src=\"/lingtan/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629210559834.png\" alt=\"image-20230629210559834\"></p>\n<p>构建完成，应该能够看到已经成功下载 vant </p>\n<p><img src=\"/lingtan/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629210753331.png\" alt=\"image-20230629210753331\"></p>\n<h1 id=\"开始使用\"><a href=\"#开始使用\" class=\"headerlink\" title=\"开始使用\"></a>开始使用</h1><blockquote>\n<p>完成前面2个步骤，就按照 vant 文档写吧</p>\n</blockquote>\n<ol>\n<li>基本使用</li>\n</ol>\n<p>在页面的 <mark class=\"hl-label green\">json文件</mark>  中添加组件</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;usingComponents&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">// 普通按钮</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;van-button&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;@vant/weapp/button/index&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>添加 json 后，在 wxml 中使用组件</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">van-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">van-button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>效果图</li>\n</ol>\n<p><img src=\"/lingtan/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629211438057.png\" alt=\"image-20230629211438057\"></p>\n<p>其他组件：<a href=\"https://vant-contrib.gitee.io/vant-weapp/#/button\">Button 按钮及其其他组件</a></p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"起步\"><a href=\"#起步\" class=\"headerlink\" title=\"起步\"></a>起步</h1><div class=\"note success flat\"><p>熟悉小程序的创建方式，可以跳过 <b> 起步 </b> 部分</p>\n</div>\n\n<p>根据自己情况选择，不同的模板。</p>\n<ol>\n<li>目录自定义</li>\n<li>AppID：选择你自己的</li>\n<li>选择 <span style=\"background-color: yellow\">不使用云服务</span> （对初学者友好，没有太多文件）</li>\n<li>根据需要选中<span style=\"background-color: #64b5f6\"> TS + Scss 模板 </span></li>\n</ol>\n<p><img src=\"/lingtan/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629202305598.png\" alt=\"image-20230629202305598\"></p>\n<p>选择你自己的 UI 组件库（或者原生写小程序，不采取第三方UI）</p>\n<h1 id=\"UI-组件库的选择\"><a href=\"#UI-组件库的选择\" class=\"headerlink\" title=\"UI 组件库的选择\"></a>UI 组件库的选择</h1><blockquote>\n<p>优先采取 Vant Weapps （如果不用组件库，可跳过）</p>\n<p>官网：<a href=\"https://vant-contrib.gitee.io/vant-weapp/#/quickstart\">前往 Vant 组件库</a></p>\n</blockquote>\n<ul>\n<li>安装 npm 包</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add @vant/weapp <span class=\"literal\">--production</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>删除新版小程序样式</li>\n</ul>\n<p><code>app.json</code> 文件中删除 “style”: “v2”</p>\n<p><img src=\"/lingtan/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629203241718.png\" alt=\"image-20230629203241718\"></p>\n<ul>\n<li>手动索引到正确的 npm 依赖位置</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"comment\">//其他信息...</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;setting&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//其他配置...</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;packNpmManually&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;packNpmRelationList&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;packageJsonPath&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./package.json&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;miniprogramNpmDistDir&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./miniprogram/&quot;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">]</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629210334688.png\" alt=\"image-20230629210334688\"></p>\n<ul>\n<li>构建 npm</li>\n</ul>\n<div class=\"note success flat\"><p>这一步至关重要，需要从远程安装包。</p>\n</div>\n\n<p>具体步骤：选中“工具”-“构建npm”,等待构建完成</p>\n<p><img src=\"/lingtan/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629210559834.png\" alt=\"image-20230629210559834\"></p>\n<p>构建完成，应该能够看到已经成功下载 vant </p>\n<p><img src=\"/lingtan/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629210753331.png\" alt=\"image-20230629210753331\"></p>\n<h1 id=\"开始使用\"><a href=\"#开始使用\" class=\"headerlink\" title=\"开始使用\"></a>开始使用</h1><blockquote>\n<p>完成前面2个步骤，就按照 vant 文档写吧</p>\n</blockquote>\n<ol>\n<li>基本使用</li>\n</ol>\n<p>在页面的 <mark class=\"hl-label green\">json文件</mark>  中添加组件</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;usingComponents&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">// 普通按钮</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;van-button&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;@vant/weapp/button/index&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>添加 json 后，在 wxml 中使用组件</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">van-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">van-button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>效果图</li>\n</ol>\n<p><img src=\"/lingtan/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629211438057.png\" alt=\"image-20230629211438057\"></p>\n<p>其他组件：<a href=\"https://vant-contrib.gitee.io/vant-weapp/#/button\">Button 按钮及其其他组件</a></p>\n"},{"title":"网络常用 cmd 命令","date":"2024-03-05T07:14:41.940Z","updated":"2024-03-05T07:14:06.316Z","cover":"https://s1.ax1x.com/2023/06/20/pC8Zzk9.png","_content":"\n# 端口号被占用如何修改\n\n需要修改可以采取2个步骤：\n\n1.  查找占用该端口的程序\n2. 结束占用该端口的进程\n\n{%note success flat%} \n\n查找占用该端口的程序\n\n{% endnote %}\n\n打开 `cmd` 终端，输入命令\n\n```cmd\nnetstat -ano | findstr ${端口号}\n```\n\n![image-20230620141208760](../FILES/网络.md/image-20230620141208760.png)\n\n{%note warning flat%} \n\n结束占用该端口的程序\n\n{% endnote %}\n\n打开任务管理器（{% label Ctrl+Shift+Esc orange%}）\n\n![image-20230620141929709](../FILES/网络.md/image-20230620141929709.png)\n\n或者采取命令行的方式：（打开 {%  label cmd %}）\n\n```cmd\ntaskkill /pid ${进程号} /f\n```\n\n# 刷新DNS缓存\n\n打开 {% label cmd%}\n\n输入命令：\n\n```cmd\nipconfig /flushdns\n```\n\n![image-20230620142532074](../FILES/网络.md/image-20230620142532074.png)\n\n# 获取 ip 地址\n\n打开 {% label cmd%}\n\n输入命令：\n\n```cmd\nipconfig \n```\n\n或者输入命令：\n\n```cmd\nipconfig /all\n```\n\n![image-20230620142714651](../FILES/网络.md/image-20230620142714651.png)","source":"_posts/网络.md","raw":"---\ntitle: 网络常用 cmd 命令\ndate: \nupdated:\ntags: 计算机网络\ncategories: 计算机\ncover: https://s1.ax1x.com/2023/06/20/pC8Zzk9.png\n---\n\n# 端口号被占用如何修改\n\n需要修改可以采取2个步骤：\n\n1.  查找占用该端口的程序\n2. 结束占用该端口的进程\n\n{%note success flat%} \n\n查找占用该端口的程序\n\n{% endnote %}\n\n打开 `cmd` 终端，输入命令\n\n```cmd\nnetstat -ano | findstr ${端口号}\n```\n\n![image-20230620141208760](../FILES/网络.md/image-20230620141208760.png)\n\n{%note warning flat%} \n\n结束占用该端口的程序\n\n{% endnote %}\n\n打开任务管理器（{% label Ctrl+Shift+Esc orange%}）\n\n![image-20230620141929709](../FILES/网络.md/image-20230620141929709.png)\n\n或者采取命令行的方式：（打开 {%  label cmd %}）\n\n```cmd\ntaskkill /pid ${进程号} /f\n```\n\n# 刷新DNS缓存\n\n打开 {% label cmd%}\n\n输入命令：\n\n```cmd\nipconfig /flushdns\n```\n\n![image-20230620142532074](../FILES/网络.md/image-20230620142532074.png)\n\n# 获取 ip 地址\n\n打开 {% label cmd%}\n\n输入命令：\n\n```cmd\nipconfig \n```\n\n或者输入命令：\n\n```cmd\nipconfig /all\n```\n\n![image-20230620142714651](../FILES/网络.md/image-20230620142714651.png)","slug":"网络","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmox002t1kv253gc7bw9","content":"<h1 id=\"端口号被占用如何修改\"><a href=\"#端口号被占用如何修改\" class=\"headerlink\" title=\"端口号被占用如何修改\"></a>端口号被占用如何修改</h1><p>需要修改可以采取2个步骤：</p>\n<ol>\n<li>查找占用该端口的程序</li>\n<li>结束占用该端口的进程</li>\n</ol>\n<div class=\"note success flat\"><p>查找占用该端口的程序</p>\n</div>\n\n<p>打开 <code>cmd</code> 终端，输入命令</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -ano | <span class=\"built_in\">findstr</span> $&#123;端口号&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/%E7%BD%91%E7%BB%9C.md/image-20230620141208760.png\" alt=\"image-20230620141208760\"></p>\n<div class=\"note warning flat\"><p>结束占用该端口的程序</p>\n</div>\n\n<p>打开任务管理器（<mark class=\"hl-label orange\">Ctrl+Shift+Esc</mark> ）</p>\n<p><img src=\"/lingtan/../FILES/%E7%BD%91%E7%BB%9C.md/image-20230620141929709.png\" alt=\"image-20230620141929709\"></p>\n<p>或者采取命令行的方式：（打开 <mark class=\"hl-label default\">cmd</mark> ）</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">taskkill</span> /pid $&#123;进程号&#125; /f</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"刷新DNS缓存\"><a href=\"#刷新DNS缓存\" class=\"headerlink\" title=\"刷新DNS缓存\"></a>刷新DNS缓存</h1><p>打开 <mark class=\"hl-label default\">cmd</mark> </p>\n<p>输入命令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ipconfig</span> /flushdns</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/%E7%BD%91%E7%BB%9C.md/image-20230620142532074.png\" alt=\"image-20230620142532074\"></p>\n<h1 id=\"获取-ip-地址\"><a href=\"#获取-ip-地址\" class=\"headerlink\" title=\"获取 ip 地址\"></a>获取 ip 地址</h1><p>打开 <mark class=\"hl-label default\">cmd</mark> </p>\n<p>输入命令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ipconfig</span> </span><br></pre></td></tr></table></figure>\n\n<p>或者输入命令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ipconfig</span> /all</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/%E7%BD%91%E7%BB%9C.md/image-20230620142714651.png\" alt=\"image-20230620142714651\"></p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"端口号被占用如何修改\"><a href=\"#端口号被占用如何修改\" class=\"headerlink\" title=\"端口号被占用如何修改\"></a>端口号被占用如何修改</h1><p>需要修改可以采取2个步骤：</p>\n<ol>\n<li>查找占用该端口的程序</li>\n<li>结束占用该端口的进程</li>\n</ol>\n<div class=\"note success flat\"><p>查找占用该端口的程序</p>\n</div>\n\n<p>打开 <code>cmd</code> 终端，输入命令</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -ano | <span class=\"built_in\">findstr</span> $&#123;端口号&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/%E7%BD%91%E7%BB%9C.md/image-20230620141208760.png\" alt=\"image-20230620141208760\"></p>\n<div class=\"note warning flat\"><p>结束占用该端口的程序</p>\n</div>\n\n<p>打开任务管理器（<mark class=\"hl-label orange\">Ctrl+Shift+Esc</mark> ）</p>\n<p><img src=\"/lingtan/../FILES/%E7%BD%91%E7%BB%9C.md/image-20230620141929709.png\" alt=\"image-20230620141929709\"></p>\n<p>或者采取命令行的方式：（打开 <mark class=\"hl-label default\">cmd</mark> ）</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">taskkill</span> /pid $&#123;进程号&#125; /f</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"刷新DNS缓存\"><a href=\"#刷新DNS缓存\" class=\"headerlink\" title=\"刷新DNS缓存\"></a>刷新DNS缓存</h1><p>打开 <mark class=\"hl-label default\">cmd</mark> </p>\n<p>输入命令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ipconfig</span> /flushdns</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/%E7%BD%91%E7%BB%9C.md/image-20230620142532074.png\" alt=\"image-20230620142532074\"></p>\n<h1 id=\"获取-ip-地址\"><a href=\"#获取-ip-地址\" class=\"headerlink\" title=\"获取 ip 地址\"></a>获取 ip 地址</h1><p>打开 <mark class=\"hl-label default\">cmd</mark> </p>\n<p>输入命令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ipconfig</span> </span><br></pre></td></tr></table></figure>\n\n<p>或者输入命令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ipconfig</span> /all</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/lingtan/../FILES/%E7%BD%91%E7%BB%9C.md/image-20230620142714651.png\" alt=\"image-20230620142714651\"></p>\n"},{"title":"安装 ufw 工具","date":"2024-03-05T07:14:41.944Z","updated":"2024-03-05T07:14:06.316Z","cover":"./images/ufw.png","_content":"\n\n# 防火墙\n\n- 安装 ufw 工具\n\n```bash\nsudo apt-get install ufw\n```\n\n- 查看防火墙状态：sudo ufw status\n    - active \t打开状态\n\t- inactive\t关闭状态 \n\n- 打开防火墙: \n\n```bash\nsudo ufw enable\n```\n\n- 关闭防火墙：\n\n```bash\nsudo ufw disable\n```\n\n---\n\n# 修改 hosts\n\n```sh\n/etc/hosts\n```\n\n访问 https://www.ipaddress.com/ 查询 ip 地址\n\n1. github.global.ssl.fastly.net\n2. github.com\n3. assets-cdn.github.com\n\n最后再刷新：\n\n```sh\nsystemctl restart nscd\n```\n\n","source":"_posts/防火墙.md","raw":"---\ntitle: 安装 ufw 工具\ndate: \nupdated: \ntags: [防火墙, 代理]\ncategories: linux\ncover: ./images/ufw.png\n---\n\n\n# 防火墙\n\n- 安装 ufw 工具\n\n```bash\nsudo apt-get install ufw\n```\n\n- 查看防火墙状态：sudo ufw status\n    - active \t打开状态\n\t- inactive\t关闭状态 \n\n- 打开防火墙: \n\n```bash\nsudo ufw enable\n```\n\n- 关闭防火墙：\n\n```bash\nsudo ufw disable\n```\n\n---\n\n# 修改 hosts\n\n```sh\n/etc/hosts\n```\n\n访问 https://www.ipaddress.com/ 查询 ip 地址\n\n1. github.global.ssl.fastly.net\n2. github.com\n3. assets-cdn.github.com\n\n最后再刷新：\n\n```sh\nsystemctl restart nscd\n```\n\n","slug":"防火墙","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clte5fmoy002w1kv27gs2gues","content":"<h1 id=\"防火墙\"><a href=\"#防火墙\" class=\"headerlink\" title=\"防火墙\"></a>防火墙</h1><ul>\n<li>安装 ufw 工具</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install ufw</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>查看防火墙状态：sudo ufw status</p>\n<ul>\n<li>active \t打开状态</li>\n<li>inactive\t关闭状态</li>\n</ul>\n</li>\n<li><p>打开防火墙:</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ufw <span class=\"built_in\">enable</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>关闭防火墙：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ufw <span class=\"built_in\">disable</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"修改-hosts\"><a href=\"#修改-hosts\" class=\"headerlink\" title=\"修改 hosts\"></a>修改 hosts</h1><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/hosts</span><br></pre></td></tr></table></figure>\n\n<p>访问 <a href=\"https://www.ipaddress.com/\">https://www.ipaddress.com/</a> 查询 ip 地址</p>\n<ol>\n<li>github.global.ssl.fastly.net</li>\n<li>github.com</li>\n<li>assets-cdn.github.com</li>\n</ol>\n<p>最后再刷新：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart nscd</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"防火墙\"><a href=\"#防火墙\" class=\"headerlink\" title=\"防火墙\"></a>防火墙</h1><ul>\n<li>安装 ufw 工具</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install ufw</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>查看防火墙状态：sudo ufw status</p>\n<ul>\n<li>active \t打开状态</li>\n<li>inactive\t关闭状态</li>\n</ul>\n</li>\n<li><p>打开防火墙:</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ufw <span class=\"built_in\">enable</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>关闭防火墙：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ufw <span class=\"built_in\">disable</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"修改-hosts\"><a href=\"#修改-hosts\" class=\"headerlink\" title=\"修改 hosts\"></a>修改 hosts</h1><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/hosts</span><br></pre></td></tr></table></figure>\n\n<p>访问 <a href=\"https://www.ipaddress.com/\">https://www.ipaddress.com/</a> 查询 ip 地址</p>\n<ol>\n<li>github.global.ssl.fastly.net</li>\n<li>github.com</li>\n<li>assets-cdn.github.com</li>\n</ol>\n<p>最后再刷新：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart nscd</span><br></pre></td></tr></table></figure>\n\n"},{"title":"发布文档","date":"2024-03-05T09:30:14.000Z","cover":"https://s1.ax1x.com/2023/06/20/pC8Zzk9.png","_content":"# 版本 V1.2.3\n\n{% note success %}\n\n综能监测优化\n\n{% endnote %}\n\n根据自己情况选择，不同的模板。\n\n1. 目录自定义\n2. AppID：选择你自己的\n3. 选择 <span style=\"background-color: yellow\">不使用云服务</span> （对初学者友好，没有太多文件）\n4. 根据需要选中<span style=\"background-color: #64b5f6\"> TS + Scss 模板 </span>\n\n![image-20230629202305598](../FILES/小程序开发.md/image-20230629202305598.png)\n\n选择你自己的 UI 组件库（或者原生写小程序，不采取第三方UI）\n\n# UI 组件库的选择\n\n> 优先采取 Vant Weapps （如果不用组件库，可跳过）\n>\n> 官网：[前往 Vant 组件库](https://vant-contrib.gitee.io/vant-weapp/#/quickstart)\n\n- 安装 npm 包\n\n```powershell\nyarn add @vant/weapp --production\n```\n\n- 删除新版小程序样式\n\n`app.json` 文件中删除 \"style\": \"v2\"\n\n![image-20230629203241718](../FILES/小程序开发.md/image-20230629203241718.png)\n\n- 手动索引到正确的 npm 依赖位置\n\n```json\n{\n  //其他信息...\n  \"setting\": {\n    //其他配置...\n    \"packNpmManually\": true,\n    \"packNpmRelationList\": [\n      {\n        \"packageJsonPath\": \"./package.json\",\n        \"miniprogramNpmDistDir\": \"./miniprogram/\"\n      }\n    ]\n  }\n}\n```\n\n![image-20230629210334688](../FILES/小程序开发.md/image-20230629210334688.png)\n\n- 构建 npm\n\n{% note success %}\n\n这一步至关重要，需要从远程安装包。\n\n{% endnote %}\n\n具体步骤：选中“工具”-“构建npm”,等待构建完成\n\n![image-20230629210559834](../FILES/小程序开发.md/image-20230629210559834.png)\n\n构建完成，应该能够看到已经成功下载 vant\n\n![image-20230629210753331](../FILES/小程序开发.md/image-20230629210753331.png)\n\n# 开始使用\n\n> 完成前面2个步骤，就按照 vant 文档写吧\n\n1. 基本使用\n\n在页面的 {% label json文件 green %} 中添加组件\n\n```json\n{\n  \"usingComponents\": {\n    // 普通按钮\n    \"van-button\": \"@vant/weapp/button/index\"\n  }\n}\n```\n\n2. 添加 json 后，在 wxml 中使用组件\n\n```html\n<van-button type=\"primary\">按钮</van-button>\n```\n\n3. 效果图\n\n![image-20230629211438057](../FILES/小程序开发.md/image-20230629211438057.png)","source":"_posts/发布文档.md","raw":"---\ntitle: 发布文档\ndate: 2024-03-05 17:30:14\ntags: [综能]\ncategories: SaaS前端\ncover: https://s1.ax1x.com/2023/06/20/pC8Zzk9.png\n---\n# 版本 V1.2.3\n\n{% note success %}\n\n综能监测优化\n\n{% endnote %}\n\n根据自己情况选择，不同的模板。\n\n1. 目录自定义\n2. AppID：选择你自己的\n3. 选择 <span style=\"background-color: yellow\">不使用云服务</span> （对初学者友好，没有太多文件）\n4. 根据需要选中<span style=\"background-color: #64b5f6\"> TS + Scss 模板 </span>\n\n![image-20230629202305598](../FILES/小程序开发.md/image-20230629202305598.png)\n\n选择你自己的 UI 组件库（或者原生写小程序，不采取第三方UI）\n\n# UI 组件库的选择\n\n> 优先采取 Vant Weapps （如果不用组件库，可跳过）\n>\n> 官网：[前往 Vant 组件库](https://vant-contrib.gitee.io/vant-weapp/#/quickstart)\n\n- 安装 npm 包\n\n```powershell\nyarn add @vant/weapp --production\n```\n\n- 删除新版小程序样式\n\n`app.json` 文件中删除 \"style\": \"v2\"\n\n![image-20230629203241718](../FILES/小程序开发.md/image-20230629203241718.png)\n\n- 手动索引到正确的 npm 依赖位置\n\n```json\n{\n  //其他信息...\n  \"setting\": {\n    //其他配置...\n    \"packNpmManually\": true,\n    \"packNpmRelationList\": [\n      {\n        \"packageJsonPath\": \"./package.json\",\n        \"miniprogramNpmDistDir\": \"./miniprogram/\"\n      }\n    ]\n  }\n}\n```\n\n![image-20230629210334688](../FILES/小程序开发.md/image-20230629210334688.png)\n\n- 构建 npm\n\n{% note success %}\n\n这一步至关重要，需要从远程安装包。\n\n{% endnote %}\n\n具体步骤：选中“工具”-“构建npm”,等待构建完成\n\n![image-20230629210559834](../FILES/小程序开发.md/image-20230629210559834.png)\n\n构建完成，应该能够看到已经成功下载 vant\n\n![image-20230629210753331](../FILES/小程序开发.md/image-20230629210753331.png)\n\n# 开始使用\n\n> 完成前面2个步骤，就按照 vant 文档写吧\n\n1. 基本使用\n\n在页面的 {% label json文件 green %} 中添加组件\n\n```json\n{\n  \"usingComponents\": {\n    // 普通按钮\n    \"van-button\": \"@vant/weapp/button/index\"\n  }\n}\n```\n\n2. 添加 json 后，在 wxml 中使用组件\n\n```html\n<van-button type=\"primary\">按钮</van-button>\n```\n\n3. 效果图\n\n![image-20230629211438057](../FILES/小程序开发.md/image-20230629211438057.png)","slug":"发布文档","published":1,"updated":"2024-03-05T09:31:00.677Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clte672pc0000okv23ebx0j1j","content":"<h1 id=\"版本-V1-2-3\"><a href=\"#版本-V1-2-3\" class=\"headerlink\" title=\"版本 V1.2.3\"></a>版本 V1.2.3</h1><div class=\"note success flat\"><p>综能监测优化</p>\n</div>\n\n<p>根据自己情况选择，不同的模板。</p>\n<ol>\n<li>目录自定义</li>\n<li>AppID：选择你自己的</li>\n<li>选择 <span style=\"background-color: yellow\">不使用云服务</span> （对初学者友好，没有太多文件）</li>\n<li>根据需要选中<span style=\"background-color: #64b5f6\"> TS + Scss 模板 </span></li>\n</ol>\n<p><img src=\"/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629202305598.png\" alt=\"image-20230629202305598\"></p>\n<p>选择你自己的 UI 组件库（或者原生写小程序，不采取第三方UI）</p>\n<h1 id=\"UI-组件库的选择\"><a href=\"#UI-组件库的选择\" class=\"headerlink\" title=\"UI 组件库的选择\"></a>UI 组件库的选择</h1><blockquote>\n<p>优先采取 Vant Weapps （如果不用组件库，可跳过）</p>\n<p>官网：<a href=\"https://vant-contrib.gitee.io/vant-weapp/#/quickstart\">前往 Vant 组件库</a></p>\n</blockquote>\n<ul>\n<li>安装 npm 包</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add @vant/weapp <span class=\"literal\">--production</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>删除新版小程序样式</li>\n</ul>\n<p><code>app.json</code> 文件中删除 “style”: “v2”</p>\n<p><img src=\"/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629203241718.png\" alt=\"image-20230629203241718\"></p>\n<ul>\n<li>手动索引到正确的 npm 依赖位置</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"comment\">//其他信息...</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;setting&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//其他配置...</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;packNpmManually&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;packNpmRelationList&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;packageJsonPath&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./package.json&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;miniprogramNpmDistDir&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./miniprogram/&quot;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">]</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629210334688.png\" alt=\"image-20230629210334688\"></p>\n<ul>\n<li>构建 npm</li>\n</ul>\n<div class=\"note success flat\"><p>这一步至关重要，需要从远程安装包。</p>\n</div>\n\n<p>具体步骤：选中“工具”-“构建npm”,等待构建完成</p>\n<p><img src=\"/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629210559834.png\" alt=\"image-20230629210559834\"></p>\n<p>构建完成，应该能够看到已经成功下载 vant</p>\n<p><img src=\"/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629210753331.png\" alt=\"image-20230629210753331\"></p>\n<h1 id=\"开始使用\"><a href=\"#开始使用\" class=\"headerlink\" title=\"开始使用\"></a>开始使用</h1><blockquote>\n<p>完成前面2个步骤，就按照 vant 文档写吧</p>\n</blockquote>\n<ol>\n<li>基本使用</li>\n</ol>\n<p>在页面的 <mark class=\"hl-label green\">json文件</mark>  中添加组件</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;usingComponents&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">// 普通按钮</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;van-button&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;@vant/weapp/button/index&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>添加 json 后，在 wxml 中使用组件</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">van-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">van-button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>效果图</li>\n</ol>\n<p><img src=\"/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629211438057.png\" alt=\"image-20230629211438057\"></p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"一些大佬的技术博客","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网志框架"},{"name":"DreamCollector","link":"https://blog.pzai.cloud/","avatar":"https://s1.ax1x.com/2023/06/19/pC3YkfU.png","descr":"一些技术相关的文章"},{"name":"阮一峰的网络日志","link":"https://www.ruanyifeng.com/blog/","avatar":"https://wangbase.com/blogimg/asset/202107/bg2021072117.png","descr":"这里记录每周值得分享的科技内容，周五发布。"},{"name":"百里飞洋","link":"https://blog.meta-code.top/","avatar":"https://plugin.tianqistatic.com/static/images/tianqibig/b1.png","descr":"这里是百里飞洋(BarryFlynn)的个人博客网站主页,这里有学习的笔记,有生活的乐趣"}]},{"class_name":"学习资源","class_desc":"记录了一些学习路线、资源等网站","link_list":[{"name":"HackWay技术学习路线","link":"https://hackway.org/","avatar":"https://s1.ax1x.com/2023/06/19/pC3d3yF.png","descr":"HackWay为程序员自学计算机专业、编程语言提供循序渐进的学习路线、资源以及交流社区"},{"name":"Go 语言中国","link":"https://gopl-zh.github.io/","avatar":"https://golang-china.github.io/logo.png","descr":"Go语言圣经(中文版)"},{"name":"Docker&Kubernetes小记","link":"https://www.bilibili.com/read/cv21266100","avatar":"https://s1.ax1x.com/2023/06/19/pC3d4l8.png","descr":"对 Docker、Docker Compose、Kubernetes 这些技术有一个基本的了解"},{"name":"CS-Note","link":"http://www.cyc2018.xyz/","avatar":"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/githubio/LogoMakr_0zpEzN.png","descr":"算法、计算机基础、数据库、Java、系统设计、面向对象和编码实践等"},{"name":"JavaGuide","link":"https://javaguide.cn/","avatar":"https://javaguide.cn/logo.png","descr":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide!"},{"name":"沉默王二技术博客","link":"https://tobebetterjavaer.com/","avatar":"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-02.png","descr":"沉默王二BB:这是一份通俗易懂、风趣幽默的Java学习指南,内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java,就认准二哥的Java进阶之路"}]},{"class_name":"英语学习","class_desc":"记录英语学习的相关网站,提高英语能力","link_list":[{"name":"在线英语听力室","link":"http://www.tingroom.com/","avatar":"http://img.yywz123.com/tingroom/templets/images/top-logo.gif","descr":"英语听力,免费英语,在线英语,英语学习,英语口语,voa,英语听力下载,英语四级,英语六级,在线学英语,英语辅导,少儿英语,英语单词,新概念英语,英语学习网站,英语自学"},{"name":"DeepL 翻译","link":"https://www.deepl.com/translator","avatar":"https://static.deepl.com/img/logo/DeepL_Logo_darkBlue_v2.svg","descr":"DeepL翻译:全世界最准确的翻译"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"},{"name":"优质节点","link":"https://v2cross.com/archives/1884","avatar":"https://v2cross.com/wp-content/uploads/2020/05/cropped-logov2cross200x200-1.png","descr":"优质免费节点每天测速更新2022(6小时更新一次)"},{"name":"AI 工具集","link":"https://ai-bot.cn/","avatar":"https://ai-bot.cn/ai-bot-logo-vector.svg","descr":"AI工具集导航 | 500+ AI工具导航大全,国内外AI工具集合网站"},{"name":"keynav","link":"https://www.semicomplete.com/projects/keynav/","avatar":"https://s1.ax1x.com/2023/06/19/pC3NjSO.png","descr":"离开鼠标,纯键盘操作"},{"name":"在线编辑图片(iloveimg)","link":"https://www.iloveimg.com/zh-cn","avatar":"https://www.iloveimg.com/img/iloveimg.svg","descr":"可批量编辑图片 的所有工具"},{"name":"路过图床","link":"https://imgse.com/star_dream","avatar":"https://s1.ax1x.com/2022/11/28/zUThkt.png","descr":"路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速."},{"name":"可视化动画","link":"http://hepengwei.cn/#/html/visualDesign","avatar":"http://hepengwei.cn/public/favicon.ico","descr":"一个专注于前端视觉效果的集合应用,里面包含各种丰富的css动效、canvas动画等90多个案例"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"版本-V1-2-3\"><a href=\"#版本-V1-2-3\" class=\"headerlink\" title=\"版本 V1.2.3\"></a>版本 V1.2.3</h1><div class=\"note success flat\"><p>综能监测优化</p>\n</div>\n\n<p>根据自己情况选择，不同的模板。</p>\n<ol>\n<li>目录自定义</li>\n<li>AppID：选择你自己的</li>\n<li>选择 <span style=\"background-color: yellow\">不使用云服务</span> （对初学者友好，没有太多文件）</li>\n<li>根据需要选中<span style=\"background-color: #64b5f6\"> TS + Scss 模板 </span></li>\n</ol>\n<p><img src=\"/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629202305598.png\" alt=\"image-20230629202305598\"></p>\n<p>选择你自己的 UI 组件库（或者原生写小程序，不采取第三方UI）</p>\n<h1 id=\"UI-组件库的选择\"><a href=\"#UI-组件库的选择\" class=\"headerlink\" title=\"UI 组件库的选择\"></a>UI 组件库的选择</h1><blockquote>\n<p>优先采取 Vant Weapps （如果不用组件库，可跳过）</p>\n<p>官网：<a href=\"https://vant-contrib.gitee.io/vant-weapp/#/quickstart\">前往 Vant 组件库</a></p>\n</blockquote>\n<ul>\n<li>安装 npm 包</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add @vant/weapp <span class=\"literal\">--production</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>删除新版小程序样式</li>\n</ul>\n<p><code>app.json</code> 文件中删除 “style”: “v2”</p>\n<p><img src=\"/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629203241718.png\" alt=\"image-20230629203241718\"></p>\n<ul>\n<li>手动索引到正确的 npm 依赖位置</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"comment\">//其他信息...</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;setting&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//其他配置...</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;packNpmManually&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;packNpmRelationList&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;packageJsonPath&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./package.json&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;miniprogramNpmDistDir&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./miniprogram/&quot;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">]</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629210334688.png\" alt=\"image-20230629210334688\"></p>\n<ul>\n<li>构建 npm</li>\n</ul>\n<div class=\"note success flat\"><p>这一步至关重要，需要从远程安装包。</p>\n</div>\n\n<p>具体步骤：选中“工具”-“构建npm”,等待构建完成</p>\n<p><img src=\"/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629210559834.png\" alt=\"image-20230629210559834\"></p>\n<p>构建完成，应该能够看到已经成功下载 vant</p>\n<p><img src=\"/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629210753331.png\" alt=\"image-20230629210753331\"></p>\n<h1 id=\"开始使用\"><a href=\"#开始使用\" class=\"headerlink\" title=\"开始使用\"></a>开始使用</h1><blockquote>\n<p>完成前面2个步骤，就按照 vant 文档写吧</p>\n</blockquote>\n<ol>\n<li>基本使用</li>\n</ol>\n<p>在页面的 <mark class=\"hl-label green\">json文件</mark>  中添加组件</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;usingComponents&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">// 普通按钮</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;van-button&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;@vant/weapp/button/index&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>添加 json 后，在 wxml 中使用组件</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">van-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">van-button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>效果图</li>\n</ol>\n<p><img src=\"/../FILES/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91.md/image-20230629211438057.png\" alt=\"image-20230629211438057\"></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clte5fmo700011kv229iu5zu3","category_id":"clte5fmob00041kv29c7l9xud","_id":"clte5fmog000j1kv226wo62j4"},{"post_id":"clte5fmo900031kv241mhch10","category_id":"clte5fmoe000c1kv27wyz7dh2","_id":"clte5fmoi000q1kv27joxhjy3"},{"post_id":"clte5fmoc00071kv2fxorg3st","category_id":"clte5fmoe000c1kv27wyz7dh2","_id":"clte5fmoj000t1kv280to5svn"},{"post_id":"clte5fmod00091kv20ist24gp","category_id":"clte5fmoi000p1kv29thoacs5","_id":"clte5fmoj000x1kv2gxcx70wg"},{"post_id":"clte5fmoe000b1kv2dlmkh0zm","category_id":"clte5fmoj000u1kv29z6ieqm2","_id":"clte5fmok00111kv23yrv558f"},{"post_id":"clte5fmof000g1kv293432llf","category_id":"clte5fmoj000y1kv25vfha8ba","_id":"clte5fmok00141kv27c6sb97v"},{"post_id":"clte5fmog000i1kv21mhjh1up","category_id":"clte5fmoj000u1kv29z6ieqm2","_id":"clte5fmok00161kv2d5hk9bw7"},{"post_id":"clte5fmoo001e1kv25ct3ck9g","category_id":"clte5fmoi000p1kv29thoacs5","_id":"clte5fmoq001k1kv2hwimfdxj"},{"post_id":"clte5fmop001f1kv29l9g69y9","category_id":"clte5fmoj000u1kv29z6ieqm2","_id":"clte5fmor001n1kv27ar44p48"},{"post_id":"clte5fmop001h1kv2b7a8hjyt","category_id":"clte5fmoj000u1kv29z6ieqm2","_id":"clte5fmor001q1kv23jtqbfvm"},{"post_id":"clte5fmoq001j1kv286utese3","category_id":"clte5fmoe000c1kv27wyz7dh2","_id":"clte5fmos001u1kv2bczuhn4e"},{"post_id":"clte5fmoq001m1kv2db7b21ji","category_id":"clte5fmoe000c1kv27wyz7dh2","_id":"clte5fmos001w1kv20qzl22a9"},{"post_id":"clte5fmor001p1kv2ex9tdgic","category_id":"clte5fmoi000p1kv29thoacs5","_id":"clte5fmot001z1kv21mk762yv"},{"post_id":"clte5fmor001t1kv2hhsz1187","category_id":"clte5fmoj000y1kv25vfha8ba","_id":"clte5fmot00221kv2aiq1bhlr"},{"post_id":"clte5fmos001v1kv2bbexd72c","category_id":"clte5fmoi000p1kv29thoacs5","_id":"clte5fmou00241kv21z36fqg6"},{"post_id":"clte5fmos001x1kv22rsjdqfk","category_id":"clte5fmoj000u1kv29z6ieqm2","_id":"clte5fmou00281kv2azkf0c0e"},{"post_id":"clte5fmot00211kv2hy4ta0wx","category_id":"clte5fmoi000p1kv29thoacs5","_id":"clte5fmou002a1kv297gj7egt"},{"post_id":"clte5fmot00231kv2fjhkevhk","category_id":"clte5fmoi000p1kv29thoacs5","_id":"clte5fmov002e1kv215pkgphl"},{"post_id":"clte5fmou00261kv287f23lul","category_id":"clte5fmoi000p1kv29thoacs5","_id":"clte5fmov002h1kv20c6naelp"},{"post_id":"clte5fmou00291kv21luba1gn","category_id":"clte5fmoj000u1kv29z6ieqm2","_id":"clte5fmow002k1kv2bwkibs2v"},{"post_id":"clte5fmov002d1kv2b3e57p5g","category_id":"clte5fmoj000u1kv29z6ieqm2","_id":"clte5fmow002n1kv2frikc4mg"},{"post_id":"clte5fmov002g1kv2da7q3qyl","category_id":"clte5fmoi000p1kv29thoacs5","_id":"clte5fmox002r1kv27y5n702r"},{"post_id":"clte5fmow002j1kv201ztfdmi","category_id":"clte5fmob00041kv29c7l9xud","_id":"clte5fmoy002u1kv2btk7g93k"},{"post_id":"clte5fmow002m1kv25i0w7szj","category_id":"clte5fmoe000c1kv27wyz7dh2","_id":"clte5fmoy002x1kv24tgf7v0d"},{"post_id":"clte5fmow002p1kv2disb15fg","category_id":"clte5fmoi000p1kv29thoacs5","_id":"clte5fmoz00311kv28blu2ojs"},{"post_id":"clte5fmoy002w1kv27gs2gues","category_id":"clte5fmoj000u1kv29z6ieqm2","_id":"clte5fmoz00341kv25u85evka"},{"post_id":"clte5fmox002t1kv253gc7bw9","category_id":"clte5fmoz002z1kv2bxzb26c2","_id":"clte5fmoz00371kv22s3q4vkf"},{"post_id":"clte672pc0000okv23ebx0j1j","category_id":"clte672pf0001okv2e2it5h4g","_id":"clte672pj0004okv22digeqxa"}],"PostTag":[{"post_id":"clte5fmo700011kv229iu5zu3","tag_id":"clte5fmob00051kv20whkcdhm","_id":"clte5fmof000e1kv26x7qgsl9"},{"post_id":"clte5fmo900031kv241mhch10","tag_id":"clte5fmoe000d1kv2cw8kf9y7","_id":"clte5fmoi000n1kv2gh5f7417"},{"post_id":"clte5fmoc00071kv2fxorg3st","tag_id":"clte5fmoe000d1kv2cw8kf9y7","_id":"clte5fmoj000s1kv27q9n02ep"},{"post_id":"clte5fmod00091kv20ist24gp","tag_id":"clte5fmoi000r1kv2hn3ne8sm","_id":"clte5fmoj000w1kv23msl8lq8"},{"post_id":"clte5fmoe000b1kv2dlmkh0zm","tag_id":"clte5fmoj000v1kv2963u0qvs","_id":"clte5fmok00101kv2e1ft6z1b"},{"post_id":"clte5fmof000g1kv293432llf","tag_id":"clte5fmoj000z1kv281d0aha9","_id":"clte5fmol00181kv2az902mqh"},{"post_id":"clte5fmof000g1kv293432llf","tag_id":"clte5fmok00131kv2hr25ce4n","_id":"clte5fmol00191kv2ai3686u7"},{"post_id":"clte5fmof000g1kv293432llf","tag_id":"clte5fmok00151kv21lin5355","_id":"clte5fmol001b1kv26qtvbth9"},{"post_id":"clte5fmog000i1kv21mhjh1up","tag_id":"clte5fmoj000v1kv2963u0qvs","_id":"clte5fmol001c1kv2bkk3adaf"},{"post_id":"clte5fmog000i1kv21mhjh1up","tag_id":"clte5fmol001a1kv2haim5rtm","_id":"clte5fmol001d1kv2gqif7lf0"},{"post_id":"clte5fmoo001e1kv25ct3ck9g","tag_id":"clte5fmok00131kv2hr25ce4n","_id":"clte5fmop001g1kv2gxq14j2a"},{"post_id":"clte5fmop001h1kv2b7a8hjyt","tag_id":"clte5fmoj000v1kv2963u0qvs","_id":"clte5fmoq001l1kv25l9odq5r"},{"post_id":"clte5fmoq001j1kv286utese3","tag_id":"clte5fmoe000d1kv2cw8kf9y7","_id":"clte5fmor001o1kv24u298xbd"},{"post_id":"clte5fmop001f1kv29l9g69y9","tag_id":"clte5fmoq001i1kv275uzf59c","_id":"clte5fmor001s1kv22nzremw0"},{"post_id":"clte5fmoq001m1kv2db7b21ji","tag_id":"clte5fmor001r1kv201mt1xv8","_id":"clte5fmot00201kv228dxalg9"},{"post_id":"clte5fmor001p1kv2ex9tdgic","tag_id":"clte5fmot001y1kv24i8pfd9g","_id":"clte5fmou00271kv2bkpw0d9b"},{"post_id":"clte5fmou00261kv287f23lul","tag_id":"clte5fmol001a1kv2haim5rtm","_id":"clte5fmov002c1kv26772bssu"},{"post_id":"clte5fmor001t1kv2hhsz1187","tag_id":"clte5fmou00251kv2gk8vguj3","_id":"clte5fmov002f1kv2efpl8oew"},{"post_id":"clte5fmos001v1kv2bbexd72c","tag_id":"clte5fmou002b1kv2bpdpgj9g","_id":"clte5fmow002l1kv2b8pwear2"},{"post_id":"clte5fmov002g1kv2da7q3qyl","tag_id":"clte5fmoj000z1kv281d0aha9","_id":"clte5fmow002o1kv211wfh5zc"},{"post_id":"clte5fmos001x1kv22rsjdqfk","tag_id":"clte5fmov002i1kv27asq3jqu","_id":"clte5fmox002s1kv2bqtk68z1"},{"post_id":"clte5fmow002p1kv2disb15fg","tag_id":"clte5fmoj000z1kv281d0aha9","_id":"clte5fmoy002v1kv26rg31o0v"},{"post_id":"clte5fmow002p1kv2disb15fg","tag_id":"clte5fmok00131kv2hr25ce4n","_id":"clte5fmoz00301kv22ij85adh"},{"post_id":"clte5fmot00211kv2hy4ta0wx","tag_id":"clte5fmox002q1kv20glre3fc","_id":"clte5fmoz00321kv2eq6peoc6"},{"post_id":"clte5fmot00231kv2fjhkevhk","tag_id":"clte5fmoy002y1kv2fv13houo","_id":"clte5fmoz00351kv21yrj8mft"},{"post_id":"clte5fmou00291kv21luba1gn","tag_id":"clte5fmoz00331kv2hama3qcs","_id":"clte5fmoz00381kv29z48hl96"},{"post_id":"clte5fmov002d1kv2b3e57p5g","tag_id":"clte5fmoz00331kv2hama3qcs","_id":"clte5fmp0003a1kv2e5cn9fxi"},{"post_id":"clte5fmow002j1kv201ztfdmi","tag_id":"clte5fmoz00391kv2evijbvc0","_id":"clte5fmp0003c1kv2cz1p9k6g"},{"post_id":"clte5fmow002m1kv25i0w7szj","tag_id":"clte5fmp0003b1kv2bctrhbme","_id":"clte5fmp0003f1kv21ypnfbfq"},{"post_id":"clte5fmow002m1kv25i0w7szj","tag_id":"clte5fmp0003d1kv2ho0ld647","_id":"clte5fmp0003g1kv2cg3o0zfn"},{"post_id":"clte5fmox002t1kv253gc7bw9","tag_id":"clte5fmp0003e1kv2d6eh9yug","_id":"clte5fmp0003i1kv20sg108nw"},{"post_id":"clte5fmoy002w1kv27gs2gues","tag_id":"clte5fmp0003h1kv24u2vax6n","_id":"clte5fmp0003j1kv2ecuo08s6"},{"post_id":"clte5fmoy002w1kv27gs2gues","tag_id":"clte5fmov002i1kv27asq3jqu","_id":"clte5fmp0003k1kv215lz02r7"},{"post_id":"clte672pc0000okv23ebx0j1j","tag_id":"clte672pi0002okv2628ie730","_id":"clte672pj0003okv26w212fdb"}],"Tag":[{"name":"任务栏美化","_id":"clte5fmob00051kv20whkcdhm"},{"name":"go","_id":"clte5fmoe000d1kv2cw8kf9y7"},{"name":"vue","_id":"clte5fmoi000r1kv2hn3ne8sm"},{"name":"linux","_id":"clte5fmoj000v1kv2963u0qvs"},{"name":"typescript","_id":"clte5fmoj000z1kv281d0aha9"},{"name":"javascript","_id":"clte5fmok00131kv2hr25ce4n"},{"name":"python","_id":"clte5fmok00151kv21lin5355"},{"name":"包管理器","_id":"clte5fmol001a1kv2haim5rtm"},{"name":"git","_id":"clte5fmoq001i1kv275uzf59c"},{"name":"java基础","_id":"clte5fmor001r1kv201mt1xv8"},{"name":"nextJS","_id":"clte5fmot001y1kv24i8pfd9g"},{"name":"mysql","_id":"clte5fmou00251kv2gk8vguj3"},{"name":"nodejs","_id":"clte5fmou002b1kv2bpdpgj9g"},{"name":"代理","_id":"clte5fmov002i1kv27asq3jqu"},{"name":"react","_id":"clte5fmox002q1kv20glre3fc"},{"name":"nvm","_id":"clte5fmoy002y1kv2fv13houo"},{"name":"vim","_id":"clte5fmoz00331kv2hama3qcs"},{"name":"笔记","_id":"clte5fmoz00391kv2evijbvc0"},{"name":"java","_id":"clte5fmp0003b1kv2bctrhbme"},{"name":"Spring","_id":"clte5fmp0003d1kv2ho0ld647"},{"name":"计算机网络","_id":"clte5fmp0003e1kv2d6eh9yug"},{"name":"防火墙","_id":"clte5fmp0003h1kv24u2vax6n"},{"name":"综能","_id":"clte672pi0002okv2628ie730"}]}}